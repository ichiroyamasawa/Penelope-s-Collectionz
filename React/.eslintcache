[{"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\index.js":"1","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\reportWebVitals.js":"2","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\App.js":"3","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\createStore.js":"4","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\hoc\\withAuth.js":"5","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Layouts\\HomepageLayout.js":"6","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\hoc\\withManageAuth.js":"7","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Layouts\\AdminClientLayout.js":"8","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Layouts\\MainLayout.js":"9","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.actions.js":"10","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\rootSaga.js":"11","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\rootReducer.js":"12","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Toolbar\\index.js":"13","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Homepage\\index.js":"14","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Login\\index.js":"15","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Recovery\\index.js":"16","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Admin\\index.js":"17","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Registration\\index.js":"18","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ContactUs\\index.js":"19","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\AboutUs\\index.js":"20","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ClientOrders\\index.js":"21","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Cart\\index.js":"22","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Checkout\\index.js":"23","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ProductOrder\\index.js":"24","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ClientEditContent\\index.js":"25","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Client\\index.js":"26","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\CustomerOrderDetails\\index.js":"27","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ChatScreen\\index.js":"28","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Dashboard\\index.js":"29","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ClientOrderDetails\\index.js":"30","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.types.js":"31","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.sagas.js":"32","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.reducer.js":"33","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.sagas.js":"34","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.reducer.js":"35","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.reducers.js":"36","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.sagas.js":"37","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.sagas.js":"38","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.sagas.js":"39","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.reducer.js":"40","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.reducer.js":"41","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\CustomHooks\\index.js":"42","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Header\\index.js":"43","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Footer\\index.js":"44","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatBubble\\index.js":"45","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.actions.js":"46","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.actions.js":"47","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.helpers.js":"48","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.actions.js":"49","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Firebase\\utils.js":"50","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.types.js":"51","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.types.js":"52","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.utils.js":"53","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.helpers.js":"54","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.helpers.js":"55","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.helpers.js":"56","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.types.js":"57","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.types.js":"58","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.helpers.js":"59","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.actions.js":"60","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Sidebar\\index.js":"61","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonIcons\\BtnIcons.js":"62","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Utils\\index.js":"63","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Directory\\index.js":"64","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\OrderDetails\\index.js":"65","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Receipt\\index.js":"66","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CustomerUserOrders\\index.js":"67","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatView\\index.js":"68","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Profile\\index.js":"69","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonPink\\index.js":"70","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\AlertError\\index.js":"71","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\FormInput\\index.js":"72","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatList\\index.js":"73","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.selectors.js":"74","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\CustomHooks\\useAuth.js":"75","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\CustomHooks\\useManageAuth.js":"76","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Firebase\\config.js":"77","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Pagination\\index.js":"78","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\FormSelect\\index.js":"79","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonSecondary\\index.js":"80","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\OrderForm\\index.js":"81","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ClientUserOrders\\index.js":"82","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CartStore\\index.js":"83","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CheckoutForm\\index.js":"84","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\clientProfileCards\\index.js":"85","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatBubble\\ChatWindow\\index.js":"86","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Overlay\\index.js":"87","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\SignUp\\index.js":"88","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\BGline\\index.js":"89","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\SignIn\\index.js":"90","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\UserManager\\index.js":"91","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\PasswordRecovery\\index.js":"92","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonSideNav\\index.js":"93","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\HR\\index.js":"94","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatTextBox\\index.js":"95","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CustomerUserOrders\\CustomerUserOrdersHolder\\index.js":"96","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\hotDeals\\index.js":"97","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CheckoutForm\\OrderSummary\\index.js":"98","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\bestSellers\\index.js":"99","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\whatsNew\\index.js":"100","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Directory\\Product\\index.js":"101","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonImg\\index.js":"102","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CartStore\\CartItem\\index.js":"103","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonCoral\\index.js":"104","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ClientUserOrders\\ClientUserOrdersHolder\\index.js":"105","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\AuthWrapper\\index.js":"106","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonColor\\index.js":"107"},{"size":876,"mtime":1614400799399,"results":"108","hashOfConfig":"109"},{"size":375,"mtime":1612532230174,"results":"110","hashOfConfig":"109"},{"size":6704,"mtime":1616392624473,"results":"111","hashOfConfig":"109"},{"size":606,"mtime":1614399732304,"results":"112","hashOfConfig":"109"},{"size":138,"mtime":1612532230159,"results":"113","hashOfConfig":"109"},{"size":484,"mtime":1616079059318,"results":"114","hashOfConfig":"109"},{"size":606,"mtime":1615918452500,"results":"115","hashOfConfig":"109"},{"size":375,"mtime":1612532230128,"results":"116","hashOfConfig":"109"},{"size":428,"mtime":1616079060485,"results":"117","hashOfConfig":"109"},{"size":2236,"mtime":1615999786323,"results":"118","hashOfConfig":"109"},{"size":487,"mtime":1615429046444,"results":"119","hashOfConfig":"109"},{"size":760,"mtime":1615208220567,"results":"120","hashOfConfig":"109"},{"size":1637,"mtime":1615917239444,"results":"121","hashOfConfig":"109"},{"size":345,"mtime":1612628708944,"results":"122","hashOfConfig":"109"},{"size":467,"mtime":1612532230143,"results":"123","hashOfConfig":"109"},{"size":343,"mtime":1612532230143,"results":"124","hashOfConfig":"109"},{"size":1405,"mtime":1614139348649,"results":"125","hashOfConfig":"109"},{"size":343,"mtime":1612532230143,"results":"126","hashOfConfig":"109"},{"size":4311,"mtime":1617017824322,"results":"127","hashOfConfig":"109"},{"size":4434,"mtime":1616836959222,"results":"128","hashOfConfig":"109"},{"size":283,"mtime":1614706900762,"results":"129","hashOfConfig":"109"},{"size":195,"mtime":1614259028792,"results":"130","hashOfConfig":"109"},{"size":214,"mtime":1614423686111,"results":"131","hashOfConfig":"109"},{"size":285,"mtime":1613492943249,"results":"132","hashOfConfig":"109"},{"size":258,"mtime":1615121832784,"results":"133","hashOfConfig":"109"},{"size":31895,"mtime":1619861593902,"results":"134","hashOfConfig":"109"},{"size":1927,"mtime":1617024223443,"results":"135","hashOfConfig":"109"},{"size":15111,"mtime":1617633516206,"results":"136","hashOfConfig":"109"},{"size":4291,"mtime":1617019342495,"results":"137","hashOfConfig":"109"},{"size":3703,"mtime":1615989275007,"results":"138","hashOfConfig":"109"},{"size":959,"mtime":1615999747628,"results":"139","hashOfConfig":"109"},{"size":6843,"mtime":1616111657049,"results":"140","hashOfConfig":"109"},{"size":1199,"mtime":1613639180870,"results":"141","hashOfConfig":"109"},{"size":3085,"mtime":1615117287142,"results":"142","hashOfConfig":"109"},{"size":701,"mtime":1615115839119,"results":"143","hashOfConfig":"109"},{"size":680,"mtime":1615019819141,"results":"144","hashOfConfig":"109"},{"size":2898,"mtime":1615209368544,"results":"145","hashOfConfig":"109"},{"size":1979,"mtime":1615895535811,"results":"146","hashOfConfig":"109"},{"size":934,"mtime":1615469856897,"results":"147","hashOfConfig":"109"},{"size":372,"mtime":1615213824312,"results":"148","hashOfConfig":"109"},{"size":1475,"mtime":1615443202548,"results":"149","hashOfConfig":"109"},{"size":313,"mtime":1615918419831,"results":"150","hashOfConfig":"109"},{"size":18785,"mtime":1619432801659,"results":"151","hashOfConfig":"109"},{"size":289,"mtime":1612532230112,"results":"152","hashOfConfig":"109"},{"size":6588,"mtime":1616110741448,"results":"153","hashOfConfig":"109"},{"size":1036,"mtime":1615019645379,"results":"154","hashOfConfig":"109"},{"size":850,"mtime":1615428924115,"results":"155","hashOfConfig":"109"},{"size":4922,"mtime":1616111555572,"results":"156","hashOfConfig":"109"},{"size":748,"mtime":1615884067985,"results":"157","hashOfConfig":"109"},{"size":1911,"mtime":1615714144621,"results":"158","hashOfConfig":"109"},{"size":318,"mtime":1615421770106,"results":"159","hashOfConfig":"109"},{"size":282,"mtime":1615884028944,"results":"160","hashOfConfig":"109"},{"size":3014,"mtime":1614361703887,"results":"161","hashOfConfig":"109"},{"size":848,"mtime":1615463233722,"results":"162","hashOfConfig":"109"},{"size":2186,"mtime":1615915590779,"results":"163","hashOfConfig":"109"},{"size":3702,"mtime":1616325563561,"results":"164","hashOfConfig":"109"},{"size":526,"mtime":1615019486556,"results":"165","hashOfConfig":"109"},{"size":507,"mtime":1615115674594,"results":"166","hashOfConfig":"109"},{"size":3936,"mtime":1615442479284,"results":"167","hashOfConfig":"109"},{"size":1250,"mtime":1615115781224,"results":"168","hashOfConfig":"109"},{"size":1299,"mtime":1617535787089,"results":"169","hashOfConfig":"109"},{"size":424,"mtime":1612532230112,"results":"170","hashOfConfig":"109"},{"size":480,"mtime":1612532230159,"results":"171","hashOfConfig":"109"},{"size":5477,"mtime":1617535312303,"results":"172","hashOfConfig":"109"},{"size":11294,"mtime":1617026049257,"results":"173","hashOfConfig":"109"},{"size":3868,"mtime":1617020778502,"results":"174","hashOfConfig":"109"},{"size":1729,"mtime":1617023981525,"results":"175","hashOfConfig":"109"},{"size":2281,"mtime":1616124577684,"results":"176","hashOfConfig":"109"},{"size":24100,"mtime":1617509643512,"results":"177","hashOfConfig":"109"},{"size":388,"mtime":1615228552562,"results":"178","hashOfConfig":"109"},{"size":332,"mtime":1613930880917,"results":"179","hashOfConfig":"109"},{"size":706,"mtime":1617508321622,"results":"180","hashOfConfig":"109"},{"size":5739,"mtime":1616069241523,"results":"181","hashOfConfig":"109"},{"size":609,"mtime":1615435632914,"results":"182","hashOfConfig":"109"},{"size":476,"mtime":1614401525521,"results":"183","hashOfConfig":"109"},{"size":1727,"mtime":1615918385979,"results":"184","hashOfConfig":"109"},{"size":337,"mtime":1612532230128,"results":"185","hashOfConfig":"109"},{"size":628,"mtime":1612691377538,"results":"186","hashOfConfig":"109"},{"size":688,"mtime":1613136240742,"results":"187","hashOfConfig":"109"},{"size":385,"mtime":1615023644059,"results":"188","hashOfConfig":"109"},{"size":14655,"mtime":1619869446436,"results":"189","hashOfConfig":"109"},{"size":1804,"mtime":1617026879655,"results":"190","hashOfConfig":"109"},{"size":9324,"mtime":1616855206097,"results":"191","hashOfConfig":"109"},{"size":26392,"mtime":1619434206134,"results":"192","hashOfConfig":"109"},{"size":1816,"mtime":1616837966778,"results":"193","hashOfConfig":"109"},{"size":3087,"mtime":1616124406695,"results":"194","hashOfConfig":"109"},{"size":408,"mtime":1613108642102,"results":"195","hashOfConfig":"109"},{"size":7852,"mtime":1619097354676,"results":"196","hashOfConfig":"109"},{"size":167,"mtime":1612532230096,"results":"197","hashOfConfig":"109"},{"size":3725,"mtime":1615466121750,"results":"198","hashOfConfig":"109"},{"size":3614,"mtime":1614140013910,"results":"199","hashOfConfig":"109"},{"size":2497,"mtime":1615630798716,"results":"200","hashOfConfig":"109"},{"size":394,"mtime":1612629399443,"results":"201","hashOfConfig":"109"},{"size":225,"mtime":1613561669668,"results":"202","hashOfConfig":"109"},{"size":1322,"mtime":1616077609372,"results":"203","hashOfConfig":"109"},{"size":1268,"mtime":1617021141233,"results":"204","hashOfConfig":"109"},{"size":1327,"mtime":1613814030083,"results":"205","hashOfConfig":"109"},{"size":1503,"mtime":1615022904196,"results":"206","hashOfConfig":"109"},{"size":2338,"mtime":1615442333569,"results":"207","hashOfConfig":"109"},{"size":644,"mtime":1612641371624,"results":"208","hashOfConfig":"109"},{"size":1787,"mtime":1619864240490,"results":"209","hashOfConfig":"109"},{"size":498,"mtime":1614508727793,"results":"210","hashOfConfig":"109"},{"size":4662,"mtime":1617105266782,"results":"211","hashOfConfig":"109"},{"size":439,"mtime":1612532230112,"results":"212","hashOfConfig":"109"},{"size":1263,"mtime":1615023794844,"results":"213","hashOfConfig":"109"},{"size":465,"mtime":1612532230096,"results":"214","hashOfConfig":"109"},{"size":502,"mtime":1614507871728,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},"13pyh7r",{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"219"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"219"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"219"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"219"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"219"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"219"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"219"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"219"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"219"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"219"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"219"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"219"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"219"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"219"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"219"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"219"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"219"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"219"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"219"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"219"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"219"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"219"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"219"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"219"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"219"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"219"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"219"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"219"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"219"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"219"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"219"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"219"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"219"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"219"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"219"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"219"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"219"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"219"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"219"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"219"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"219"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"219"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"219"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"219"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"219"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"219"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"219"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"219"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"219"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"219"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"219"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"219"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"219"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"219"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"219"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"219"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\index.js",["488"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./Redux/createStore\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <persistGate persistor={persistor}>\r\n          <App />\r\n        </persistGate>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["489","490"],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\reportWebVitals.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\App.js",["491"],"import \"./default.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useEffect } from \"react\";\r\n\r\n//hoc\r\nimport WithAuth from \"./hoc/withAuth\";\r\nimport {\r\n  WithClientAuth,\r\n  WithAdminAuth,\r\n  WithAdminRestriction,\r\n  WithClientRestriction,\r\n  WithAdminClientAuth,\r\n} from \"./hoc/withManageAuth\";\r\n\r\n//imports\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { checkUserSession } from \"./Redux/User/user.actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n//layouts\r\nimport MainLayout from \"./Layouts/MainLayout\";\r\nimport HomepageLayout from \"./Layouts/HomepageLayout\";\r\nimport AdminClientLayout from \"./Layouts/AdminClientLayout\";\r\n\r\n//pages\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport Registration from \"./Pages/Registration\";\r\nimport Login from \"./Pages/Login\";\r\nimport Recovery from \"./Pages/Recovery\";\r\nimport Dashboard from \"./Pages/Dashboard\";\r\nimport Client from \"./Pages/Client\";\r\nimport Admin from \"./Pages/Admin\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport ContactUs from \"./Pages/ContactUs\";\r\nimport ProductOrder from \"./Pages/ProductOrder\";\r\nimport Cart from \"./Pages/Cart\";\r\nimport Checkout from \"./Pages/Checkout\";\r\nimport ClientOrders from \"./Pages/ClientOrders\";\r\nimport ClientOrderDetails from \"./Pages/ClientOrderDetails\";\r\nimport CustomerOrderDetails from \"./Pages/CustomerOrderDetails\";\r\nimport ClientEditContent from \"./Pages/ClientEditContent\";\r\nimport ChatScreen from \"./Pages/ChatScreen\";\r\n\r\n//Components\r\nimport { ClientToolbar, AdminToolbar } from \"./Components/Toolbar\";\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkUserSession());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AdminToolbar />\r\n      <ClientToolbar />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <HomepageLayout>\r\n              <Homepage />\r\n            </HomepageLayout>\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/products_:filterType\"\r\n          render={() => (\r\n            <HomepageLayout>\r\n              <Homepage />\r\n            </HomepageLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/product/:Prod_Code\"\r\n          render={() => (\r\n            <HomepageLayout>\r\n              <ProductOrder />\r\n            </HomepageLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/cart\"\r\n          exact\r\n          render={() => (\r\n            <WithAuth>\r\n              <MainLayout>\r\n                <Cart />\r\n              </MainLayout>\r\n            </WithAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/chat\"\r\n          exact\r\n          render={() => (\r\n            <WithAdminRestriction>\r\n              <WithAuth>\r\n                <AdminClientLayout>\r\n                  <ChatScreen />\r\n                </AdminClientLayout>\r\n              </WithAuth>\r\n            </WithAdminRestriction>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/checkout\"\r\n          exact\r\n          render={() => (\r\n            <WithClientRestriction>\r\n              <WithAdminRestriction>\r\n                <WithAuth>\r\n                  <MainLayout>\r\n                    <Checkout />\r\n                  </MainLayout>\r\n                </WithAuth>\r\n              </WithAdminRestriction>\r\n            </WithClientRestriction>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/registration\"\r\n          render={() => (\r\n            <MainLayout>\r\n              <Registration />\r\n            </MainLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/login\"\r\n          render={() => (\r\n            <MainLayout>\r\n              <Login />\r\n            </MainLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/aboutUs\"\r\n          render={() => (\r\n            <MainLayout>\r\n              <AboutUs />\r\n            </MainLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contactUs\"\r\n          render={() => (\r\n            <MainLayout>\r\n              <ContactUs />\r\n            </MainLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/recovery\"\r\n          render={() => (\r\n            <MainLayout>\r\n              <Recovery />\r\n            </MainLayout>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/dashboard\"\r\n          render={() => (\r\n            <WithAuth>\r\n              <MainLayout>\r\n                <Dashboard />\r\n              </MainLayout>\r\n            </WithAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/dashboard/orders/:orderID\"\r\n          render={() => (\r\n            <WithAuth>\r\n              <MainLayout>\r\n                <CustomerOrderDetails />\r\n              </MainLayout>\r\n            </WithAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/client\"\r\n          render={() => (\r\n            <WithClientAuth>\r\n              <AdminClientLayout>\r\n                <Client />\r\n              </AdminClientLayout>\r\n            </WithClientAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/client/editContent\"\r\n          render={() => (\r\n            <WithClientAuth>\r\n              <AdminClientLayout>\r\n                <ClientEditContent />\r\n              </AdminClientLayout>\r\n            </WithClientAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/manageOrders\"\r\n          render={() => (\r\n            <WithAdminClientAuth>\r\n              <AdminClientLayout>\r\n                <ClientOrders />\r\n              </AdminClientLayout>\r\n            </WithAdminClientAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/manageOrders/:orderID\"\r\n          render={() => (\r\n            <WithAdminClientAuth>\r\n              <AdminClientLayout>\r\n                <ClientOrderDetails />\r\n              </AdminClientLayout>\r\n            </WithAdminClientAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/client/:filterType\"\r\n          render={() => (\r\n            <WithClientAuth>\r\n              <AdminClientLayout>\r\n                <Client />\r\n              </AdminClientLayout>\r\n            </WithClientAuth>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/admin\"\r\n          render={() => (\r\n            <WithAdminAuth>\r\n              <AdminClientLayout>\r\n                <Admin />\r\n              </AdminClientLayout>\r\n            </WithAdminAuth>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\createStore.js",["492"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddle from \"redux-saga\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddle();\r\nexport const middlewares = [thunk, sagaMiddleware, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\hoc\\withAuth.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Layouts\\HomepageLayout.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\hoc\\withManageAuth.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Layouts\\AdminClientLayout.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Layouts\\MainLayout.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.actions.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\rootSaga.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\rootReducer.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Toolbar\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Homepage\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Login\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Recovery\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Admin\\index.js",["493","494","495","496","497","498","499","500"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./styles.css\";\r\nimport UserManager from \"./../../Components/UserManager\";\r\nimport {\r\n  fetchUsersStart,\r\n  deleteUserStart,\r\n} from \"./../../Redux/User/user.actions\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  users: user.users,\r\n});\r\n\r\nconst Admin = (props) => {\r\n  const { users } = useSelector(mapState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, queryDoc, isLastPage } = users;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsersStart());\r\n  }, []);\r\n\r\n  const delUser = (event) => {\r\n    console.log(\"user deleted\");\r\n  };\r\n\r\n  if (!Array.isArray(users)) return null;\r\n\r\n  if (users.length < 1) {\r\n    return (\r\n      <div>\r\n        <h1>Unable to fetch users</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"manageUsers\">\r\n      <h1 className=\"manageUsers-sectionTitle\">Manage Users</h1>\r\n      {users.map((users, index) => {\r\n        const { UserID, fName, lName, email, contactNo, userRoles } = users;\r\n\r\n        return (\r\n          <UserManager\r\n            key={index}\r\n            UserUID={UserID}\r\n            firstName={fName}\r\n            lastName={lName}\r\n            contactNum={contactNo}\r\n            email={email}\r\n            // userRoles={userRoles}\r\n          />\r\n        );\r\n      })}\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Registration\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ContactUs\\index.js",["501","502","503","504","505","506"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Form, Button, Modal } from \"react-bootstrap\";\r\nimport mapIMG from \"./../../Assets/MapSample.jpg\";\r\nimport shopeeIMG from \"./../../Assets/shopee-logo.png\";\r\n\r\nconst ContactUs = (props) => {\r\n  return (\r\n    <div className=\"contactUs\">\r\n      <h1 className=\"contactUs-sectionTitle\">Contact Us</h1>\r\n      <Container className=\"contactUsWrapper\">\r\n        <Row>\r\n          <Col>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"contactUsDetails\">\r\n                    <i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Contact\r\n                    Number: 0997&nbsp;063&nbsp;2962\r\n                  </h4>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"contactUsDetails\">\r\n                    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> Email:{\" \"}\r\n                    <a\r\n                      href=\"mailto:penelopescollectionz@gmail.com\"\r\n                      className=\"contactUsEmail\"\r\n                    >\r\n                      penelopescollectionz@gmail.com\r\n                    </a>\r\n                  </h4>\r\n                </Col>\r\n              </Row>\r\n              <br />\r\n              <Row className=\"align-items-center\">\r\n                <Col>\r\n                  <h5 className=\"contactUsDetails contactUsDesc\">\r\n                    O W N E D & M A D E by JeanJhenAce DTI Registered |\r\n                    Manila.PH | Parañaque.PH HANDMADE CREATIONS PRE-LOVED and\r\n                    UPCYCLED CLOTHES\r\n                  </h5>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          {/* <Col>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"contactUsDetails\">\r\n                    <i class=\"fa fa-location-arrow\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Location:\r\n                  </h4>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <img src={mapIMG} alt=\"Map\" className=\"contactUsMap\" />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col> */}\r\n          <Col>\r\n            <Container>\r\n              <Row>\r\n                <Col className=\"mt-2\">\r\n                  <h4 className=\"contactUsDetails\">Follow us on:</h4>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"followUsBtnLinks\">\r\n                    <a\r\n                      href=\"https://www.facebook.com/penelopescollectionz\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <Button block size=\"lg\">\r\n                        <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>{\" \"}\r\n                        Facebook\r\n                      </Button>\r\n                    </a>\r\n                    <a\r\n                      href=\"https://www.instagram.com/penelopescollectionz/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <Button block className=\"btn-instagram\" size=\"lg\">\r\n                        <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>{\" \"}\r\n                        Instagram\r\n                      </Button>\r\n                    </a>\r\n                    <a\r\n                      href=\"https://shopee.ph/penelopes_collectionz\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <Button\r\n                        block\r\n                        className=\"btn-shopee shadow-none\"\r\n                        size=\"lg\"\r\n                      >\r\n                        <img\r\n                          className=\"shopee-logo\"\r\n                          src={shopeeIMG}\r\n                          alt=\"Shopee Logo\"\r\n                        />{\" \"}\r\n                        Shopee\r\n                      </Button>\r\n                    </a>\r\n                    <br />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\AboutUs\\index.js",["507"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport ClientProfileCards from \"./../../Components/clientProfileCards\";\r\n\r\nimport clientExampleA from \"./../../Assets/woman.png\";\r\nimport clientExampleB from \"./../../Assets/man.png\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst AboutUs = (props) => {\r\n  return (\r\n    <div className=\"aboutUs\">\r\n      <h1 className=\"aboutUs-sectiontitle\">About Us</h1>\r\n      <p className=\"aboutUs-body\">\r\n        At Penelope’s Collectionz, we assure that every locally handmade and\r\n        handcrafted creations we deliver to you is made with passion and with\r\n        utmost quality since 2019. We believe that our products should not only\r\n        make you look pretty and sassy but also feel confident and good about\r\n        yourself as well.\r\n      </p>\r\n\r\n      <h1 className=\"aboutUs-sectiontitle\">Meet the Team</h1>\r\n\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <ClientProfileCards\r\n            name=\"Ms. JeanJhen Ace B. Ferrer\"\r\n            img={clientExampleA}\r\n            desc=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Recusandae rem ad voluptas natus! Esse, eligendi.\"\r\n            fb=\"https://www.facebook.com/gingeraceee\"\r\n            // twitter=\"https://www.twitter.com/\"\r\n            insta=\"https://www.instagram.com/gingeraceee\"\r\n          />\r\n          <ClientProfileCards\r\n            name=\"Mr. Marc Aldwin R. Cortez\"\r\n            img={clientExampleB}\r\n            desc=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Recusandae rem ad voluptas natus! Esse, eligendi.\"\r\n            // fb=\"https://www.facebook.com/\"\r\n            // twitter=\"https://www.twitter.com/\"\r\n            // insta=\"https://www.instagram.com/\"\r\n          />\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* \r\n      <div className=\"row d-flex justify-content-center\">\r\n        <div className=\"card text-center\" style=\"width: 18rem;\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src=\"/template/Images/woman.png\"\r\n            alt=\"Owner A\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Owner A</h5>\r\n            <p className=\"card-text\">\r\n              Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n              Exercitationem, vitae.\r\n            </p>\r\n            <p className=\"card-text\">Follow me on:</p>\r\n            <a href=\"#\" className=\"btn btn-primary followMe\">\r\n              <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n              Facebook\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n            <a href=\"#\" className=\"btn btn-primary followMe\">\r\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n              Twitter\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n            <a href=\"#\" className=\"btn btn-primary followMe\">\r\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n              Instagram\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card text-center\" style=\"width: 18rem;\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src=\"/template/Images/man.png\"\r\n            alt=\"Owner B\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Owner B</h5>\r\n            <p className=\"card-text\">\r\n              Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n              Exercitationem, vitae.\r\n            </p>\r\n            <p className=\"card-text\">Follow me on:</p>\r\n            <a href=\"#\" className=\"btn btn-primary followMe\">\r\n              <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n              Facebook\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n            <a href=\"#\" className=\"btn btn-primary followMe\">\r\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n              Twitter\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n            <a href=\"#\" className=\"btn btn-primary followMe\">\r\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n              Instagram\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ClientOrders\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Cart\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Checkout\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ProductOrder\\index.js",["508"],"import React from \"react\";\r\nimport OrderForm from \"./../../Components/OrderForm\";\r\nimport Sidebar from \"./../../Components/Sidebar\";\r\n\r\nconst ProductOrder = ({}) => {\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <OrderForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductOrder;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ClientEditContent\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Client\\index.js",["509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537"],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\CustomerOrderDetails\\index.js",["538","539","540","541","542"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  getOrderDetailsStart,\r\n  setOrderComplete,\r\n} from \"./../../Redux/Orders/orders.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport BtnPink from \"./../../Components/Forms/ButtonPink\";\r\nimport OrderDetails from \"./../../Components/OrderDetails\";\r\n\r\nconst mapState = ({ ordersData }) => ({\r\n  orderDetails: ordersData.orderDetails,\r\n});\r\n\r\nconst CustomerOrderDetails = () => {\r\n  const { orderID } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { orderDetails } = useSelector(mapState);\r\n  const { orderTotal } = orderDetails;\r\n  useEffect(() => {\r\n    dispatch(getOrderDetailsStart(orderID));\r\n  }, []);\r\n  return (\r\n    <div className=\"clientOrderDetails\">\r\n      <h1 className=\"clientOrderDetails-sectionTitle\">Order</h1>\r\n      <div className=\"orderDetailsOrderID\">\r\n        <h1 className=\"orderID\">\r\n          <i class=\"fas fa-receipt    \"></i> Order ID# {orderID}\r\n        </h1>\r\n      </div>\r\n\r\n      <OrderDetails order={orderDetails} />\r\n\r\n      <div className=\"orderDetailsTotal\">\r\n        <h1 className=\"orderID\">\r\n          <i class=\"fas fa-money-bill-wave\"></i> Total: &#8369;{\" \"}\r\n          {parseFloat(orderTotal).toFixed(2)}\r\n        </h1>\r\n      </div>\r\n      <Row className=\"text-center m-0 custBackBtn\">\r\n        <Col>\r\n          <Button\r\n            className=\"orderBtns buyBtn\"\r\n            onClick={() => {\r\n              history.push(\"/dashboard\");\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Back\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOrderDetails;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ChatScreen\\index.js",["543","544","545","546","547","548"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  receiveMessage,\r\n  sendMessage,\r\n  seenMessage,\r\n  sendNewMessage,\r\n} from \"./../../Redux/Messages/messages.actions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Col, Row, Modal, Form, Button } from \"react-bootstrap\";\r\nimport \"./styles.css\";\r\n\r\nimport FormInput from \"./../../Components/Forms/FormInput\";\r\nimport AlertError from \"./../../Components/AlertError\";\r\n\r\nimport { firestore } from \"./../../Firebase/utils\";\r\n\r\nimport ChatList from \"./../../Components/ChatList\";\r\nimport ChatView from \"./../../Components/ChatView\";\r\n\r\nconst mapState = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  chat: state.chatData.chat.chats,\r\n});\r\n\r\nconst ChatScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { currentUser } = useSelector(mapState);\r\n  const [chat, setChat] = useState([]);\r\n  const [chatListLength, setChatListLength] = useState(0);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [userDoesExists, setUserDoesExists] = useState(null);\r\n  const [chatDoesExists, setChatDoesExists] = useState(null);\r\n  const [chatWith, setChatWith] = useState(\"others\");\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [newChatEmail, setNewChatEmail] = useState(\"\");\r\n  const [newChatFullName, setNewChatFullName] = useState(\"\");\r\n  const [newChatShow, setNewChatShow] = useState(false);\r\n  const handleNewChatShow = () => setNewChatShow(true);\r\n  const handleNewChatClose = () => {\r\n    setNewChatShow(false);\r\n    newChatReset();\r\n  };\r\n  const newChatBtnClicked = () => {\r\n    handleNewChatShow();\r\n    setSelectedChat(null);\r\n    console.log(\"new message\");\r\n  };\r\n\r\n  const newChatReset = () => {\r\n    setNewMessage(\"\");\r\n    setNewChatEmail(\"\");\r\n    setChatWith(\"others\");\r\n    setUserDoesExists(null);\r\n    setChatDoesExists(null);\r\n    setNewChatFullName(\"\");\r\n  };\r\n\r\n  const selectChat = (chatIndex) => {\r\n    return new Promise((resolve) => {\r\n      console.log(\"selected a chat\", chatIndex);\r\n      resolve(setSelectedChat(chatIndex));\r\n    });\r\n  };\r\n\r\n  const chatSeen = () => {\r\n    console.log(chat[selectedChat].users.filter((user) => user !== email)[0]);\r\n    if (currentUser.userRoles.includes(\"client\")) {\r\n      const docKey = \"Penelope's Collectionz:\".concat(\r\n        chat[selectedChat].users.filter(\r\n          (user) => user !== \"Penelope's Collectionz\"\r\n        )[0]\r\n      );\r\n      clickedMessageWhereNotSender(selectedChat, docKey);\r\n    } else {\r\n      const docKey = buildDocKey(\r\n        chat[selectedChat].users.filter((user) => user !== email)[0]\r\n      );\r\n      clickedMessageWhereNotSender(selectedChat, docKey);\r\n    }\r\n  };\r\n\r\n  const clickedMessageWhereNotSender = (chatIndex, docKey) => {\r\n    console.log(\r\n      chat[chatIndex].messages[chat[chatIndex].messages.length - 1].sender !==\r\n        email\r\n    );\r\n    if (\r\n      chat[chatIndex].messages[chat[chatIndex].messages.length - 1].sender !==\r\n      email\r\n    ) {\r\n      dispatch(seenMessage(docKey));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser.userRoles.includes(\"client\")) {\r\n      firestore\r\n        .collection(\"chats\")\r\n        .where(\"users\", \"array-contains\", \"Penelope's Collectionz\")\r\n        .onSnapshot(\r\n          (res) => {\r\n            const chats = [];\r\n            res.forEach((doc) => {\r\n              chats.push(doc.data());\r\n              console.log(\"realtime\", doc.data());\r\n              console.log(chats);\r\n              console.log(\"user is client\");\r\n              setChat(chats);\r\n              setChatListLength(chats.length);\r\n            });\r\n          },\r\n          (err) => {\r\n            console.log(`Encountered error: ${err}`);\r\n          }\r\n        );\r\n    }\r\n\r\n    if (!currentUser.userRoles.includes(\"client\")) {\r\n      firestore\r\n        .collection(\"chats\")\r\n        //.where(\"email\", \"==\", currentUser.id)\r\n        .where(\"users\", \"array-contains\", currentUser.email)\r\n        .onSnapshot(\r\n          (res) => {\r\n            const chats = [];\r\n            res.forEach((doc) => {\r\n              chats.push(doc.data());\r\n              console.log(\"realtime\", doc.data());\r\n              console.log(chats);\r\n\r\n              setChat(chats);\r\n              setChatListLength(chats.length);\r\n            });\r\n          },\r\n          (err) => {\r\n            console.log(`Encountered error: ${err}`);\r\n          }\r\n        );\r\n    }\r\n  }, [currentUser.userRoles]);\r\n\r\n  useEffect(() => {\r\n    setEmail(currentUser.email);\r\n  }, []);\r\n\r\n  const submitMessage = (msg) => {\r\n    if (currentUser.userRoles.includes(\"client\")) {\r\n      const docKey = \"Penelope's Collectionz:\".concat(\r\n        chat[selectedChat].users.filter(\r\n          (user) => user !== \"Penelope's Collectionz\"\r\n        )[0]\r\n      );\r\n      console.log(docKey);\r\n      const message = {\r\n        msg: msg,\r\n        email: email,\r\n        docKey: docKey,\r\n      };\r\n      dispatch(sendMessage(message));\r\n    } else {\r\n      const docKey = buildDocKey(\r\n        chat[selectedChat].users.filter((user) => user !== email)[0]\r\n      );\r\n      // const docKey = \"user1@email.com:user2@email.com\";\r\n      console.log(docKey);\r\n      const message = {\r\n        msg: msg,\r\n        email: email,\r\n        docKey: docKey,\r\n      };\r\n      dispatch(sendMessage(message));\r\n    }\r\n  };\r\n\r\n  const submitNewMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (chatWith === \"PCz\") {\r\n      createChat();\r\n    } else if (chatWith === \"others\") {\r\n      userExists();\r\n    }\r\n  };\r\n\r\n  const chatExists = () => {\r\n    return new Promise((resolve, reject) => {\r\n      // const docKey = buildNewDocKey();\r\n      const docKey = \"Penelope's Collectionz:\".concat(newChatEmail);\r\n      console.log(docKey);\r\n      firestore\r\n        .collection(\"chats\")\r\n        .doc(docKey)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            console.log(\"chat exists\");\r\n            resolve(setChatDoesExists(true));\r\n          } else {\r\n            console.log(\"chat doesnt exists\");\r\n            resolve(setChatDoesExists(false));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  const userExists = () => {\r\n    return new Promise((resolve, reject) => {\r\n      firestore\r\n        .collection(\"users\")\r\n        .where(\"email\", \"==\", newChatEmail)\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.docs.forEach((doc) => {\r\n            if (doc.get(\"email\") === newChatEmail) {\r\n              console.log(\"exists\", doc.data());\r\n              setNewChatFullName(doc.data().fName + \" \" + doc.data().lName);\r\n              resolve(setUserDoesExists(true));\r\n            } else {\r\n              console.log(\"USER DOE NOT EXIST\");\r\n              resolve(setUserDoesExists(false));\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n          console.log(\"user \" + newChatEmail + \" does not exists\");\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userDoesExists === true) {\r\n      console.log(\"user exist!!!!\");\r\n      setUserDoesExists(null);\r\n      chatExists();\r\n    } else if (userDoesExists === false) {\r\n    }\r\n  }, [userDoesExists]);\r\n\r\n  useEffect(() => {\r\n    if (chatDoesExists === true) {\r\n      console.log(\"chat exist!!!!\");\r\n      setChatDoesExists(null);\r\n      goToChat();\r\n    } else if (chatDoesExists === false) {\r\n      console.log(\"chat doesnt exist!!!!!!\");\r\n      setChatDoesExists(null);\r\n      createChat();\r\n    }\r\n  }, [chatDoesExists]);\r\n\r\n  const goToChat = async () => {\r\n    const docKey = \"Penelope's Collectionz:\".concat(newChatEmail);\r\n    const usersInChat = docKey.split(\":\");\r\n    console.log(usersInChat);\r\n    const chatIdx = chat.find((_chat) =>\r\n      usersInChat.every((_user) => _chat.users.includes(_user))\r\n    );\r\n    await selectChat(chat.indexOf(chatIdx));\r\n\r\n    if (selectedChat !== null) {\r\n      submitMessage(newMessage);\r\n      handleNewChatClose();\r\n    }\r\n  };\r\n\r\n  const createChat = () => {\r\n    // if (chatWith === \"PCz\") {\r\n    //   const docKey = \"Penelope's Collectionz:\".concat(email);\r\n    //   console.log(\"chatting with client\");\r\n    //   const newChat = {\r\n    //     users: [email, \"Penelope's Collectionz\"],\r\n    //     seen: false,\r\n    //     custFullName: currentUser.fName + \" \" + currentUser.lName,\r\n    //     messages: [\r\n    //       {\r\n    //         message: newMessage,\r\n    //         sender: email,\r\n    //       },\r\n    //     ],\r\n    //   };\r\n    //   dispatch(sendNewMessage({ newChat, docKey }));\r\n    //   handleNewChatClose();\r\n    // } else {\r\n    const docKey = \"Penelope's Collectionz:\".concat(newChatEmail);\r\n    const newChat = {\r\n      users: [\"Penelope's Collectionz\", newChatEmail],\r\n      seen: false,\r\n      custFullName: newChatFullName,\r\n      messages: [\r\n        {\r\n          message: newMessage,\r\n          sender: email,\r\n        },\r\n      ],\r\n    };\r\n    dispatch(sendNewMessage({ newChat, docKey }));\r\n    // goToChat();\r\n    handleNewChatClose();\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(selectedChat);\r\n    if (selectedChat !== null) {\r\n      chatSeen();\r\n    }\r\n  }, [selectedChat]);\r\n\r\n  const buildDocKey = () => [email, \"Penelope's Collectionz\"].sort().join(\":\");\r\n  // const buildNewDocKey = () => [email, newChatEmail].sort().join(\":\");\r\n\r\n  return (\r\n    <div className=\"maxHeight\">\r\n      <Container fluid className=\"chatScreen\">\r\n        <Row>\r\n          <Col md={3} className=\"p-0\">\r\n            <ChatList\r\n              chatListLength={chatListLength}\r\n              chats={chat}\r\n              roles={currentUser.userRoles}\r\n              email={email}\r\n              selectedChat={selectedChat}\r\n              selectChat={selectChat}\r\n              newChatBtn={newChatBtnClicked}\r\n              // uid={currentUser.id}\r\n            />\r\n          </Col>\r\n          <Modal centered show={newChatShow} onHide={handleNewChatClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>New Chat</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form onSubmit={submitNewMessage}>\r\n                {/* {chatWith === \"\" && (\r\n                  <>\r\n                    <h3 className=\"text-center\">\r\n                      Hi! To start a new chat, select one of the following\r\n                      buttons below.\r\n                    </h3>\r\n                    <Button onClick={() => setChatWith(\"PCz\")}>\r\n                      Chat with Penelope's Collectionz\r\n                    </Button>\r\n                    <Button onClick={() => setChatWith(\"others\")}>\r\n                      Chat with other users\r\n                    </Button>\r\n                  </>\r\n                )}*/}\r\n\r\n                {/* {chatWith === \"PCz\" && (\r\n                  <>\r\n                    {currentUser.userRoles.includes(\"client\") && (\r\n                      <>\r\n                        <h3 className=\"text-center\">Chat with Customers</h3>\r\n                        <Row className=\"justify-content-center\">\r\n                          <Col md=\"auto\" xs=\"auto\" className=\"mb-5 \">\r\n                            <Button\r\n                              className=\"profileSave\"\r\n                              onClick={() => setChatWith(\"others\")}\r\n                            >\r\n                              <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>{\" \"}\r\n                              Chat with Customers\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </>\r\n                    )}\r\n                    <h3 className=\"text-center\">\r\n                      Chat with Penelope's Collectionz\r\n                    </h3>\r\n                    <FormInput\r\n                      label=\"Message:\"\r\n                      as=\"textarea\"\r\n                      name=\"newMessage\"\r\n                      value={newMessage}\r\n                      placeholder=\"Enter your message here...\"\r\n                      handleChange={(e) => setNewMessage(e.target.value)}\r\n                    />\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col md={4}>\r\n                        <Button block className=\"profileSave\" type=\"submit\">\r\n                          <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>{\" \"}\r\n                          Send Chat\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </>\r\n                )} */}\r\n                {/* {chatWith !== \"PCz\" && (\r\n                  //  userDoesExists !== false &&\r\n                  <> */}\r\n                {userDoesExists === false && (\r\n                  <AlertError error=\"This user doesn't exist.\" />\r\n                )}\r\n                {userDoesExists !== false && (\r\n                  <>\r\n                    <FormInput\r\n                      label=\"Chat with other users by entering his/her email.\"\r\n                      type=\"email\"\r\n                      name=\"newChatEmail\"\r\n                      value={newChatEmail}\r\n                      placeholder=\"User's email\"\r\n                      handleChange={(e) => setNewChatEmail(e.target.value)}\r\n                    />\r\n                    <FormInput\r\n                      label=\"Message:\"\r\n                      as=\"textarea\"\r\n                      name=\"newMessage\"\r\n                      value={newMessage}\r\n                      placeholder=\"Enter your message here...\"\r\n                      handleChange={(e) => setNewMessage(e.target.value)}\r\n                    />\r\n                    <h5 className=\"text-center\">\r\n                      <em>\r\n                        NOTE: Message wouldn't be created if the user doesn't\r\n                        exists.\r\n                      </em>\r\n                    </h5>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col md={4}>\r\n                        <Button block className=\"profileSave\" type=\"submit\">\r\n                          <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>{\" \"}\r\n                          Send Chat\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </>\r\n                )}\r\n                {/* </>\r\n                )} */}\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleNewChatClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Col className=\"p-0\">\r\n            {selectedChat !== null && (\r\n              <ChatView\r\n                chatSeen={chatSeen}\r\n                chat={chat[selectedChat]}\r\n                roles={currentUser.userRoles}\r\n                email={email}\r\n                onMessageSubmit={submitMessage}\r\n              />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\Dashboard\\index.js",["549","550","551","552","553"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserOrderHistory } from \"./../../Redux/Orders/orders.actions\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Form, Button, Tab, Nav } from \"react-bootstrap\";\r\nimport CustomerUserOrders from \"./../../Components/CustomerUserOrders\";\r\nimport Profile from \"./../../Components/Profile\";\r\n\r\nimport Receipt from \"./../../Components/Receipt\";\r\nconst mapState = ({ user, ordersData }) => ({\r\n  currentUser: user.currentUser,\r\n  orderHistory: ordersData.orderHistory.data,\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  // const history = useHistory();\r\n  const { currentUser, orderHistory } = useSelector(mapState);\r\n  useEffect(() => {\r\n    dispatch(getUserOrderHistory(currentUser.id));\r\n  }, []);\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"profilePage\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <h2 className=\"dashboardTitle\">Dashboard</h2>\r\n            <Nav variant=\"pills\" className=\"flex-column dashboardNav\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"profilePage\" className=\"dashboardNavLinks\">\r\n                  <i class=\"fa fa-user-circle\"></i> Profile Page\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"orderHistory\" className=\"dashboardNavLinks\">\r\n                  <i class=\"fa fa-shopping-basket\"></i> Order History\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"receipts\" className=\"dashboardNavLinks\">\r\n                  <i class=\"fa fa-list-alt\"></i> View Receipt\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"profilePage\">\r\n                <Profile />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"orderHistory\">\r\n                <CustomerUserOrders />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"receipts\">\r\n                <h1 className=\"receipt-sectionTitle\">Receipts</h1>\r\n                <br />\r\n                <Container fluid>\r\n                  <Row>\r\n                    <Col\r\n                      md={{ span: 10, offset: 1 }}\r\n                      className=\"receiptWrapper p-0\"\r\n                    >\r\n                      {Array.isArray(orderHistory) &&\r\n                      orderHistory.length > 0 ? (\r\n                        orderHistory.map((item, index) => {\r\n                          {\r\n                            if (item.orderCompleted === true)\r\n                              return (\r\n                                <div className=\"receiptHolder\">\r\n                                  <Row className=\"p-0 m-0\">\r\n                                    <Col className=\"receiptOrderIDHolder\">\r\n                                      <h3 className=\"receiptOrderID\">\r\n                                        OrderID: {item.orderID}\r\n                                      </h3>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Row className=\"pt-5\">\r\n                                    <Col\r\n                                      md={{ span: 4, offset: 4 }}\r\n                                      key={index}\r\n                                    >\r\n                                      <Receipt orders={item} />\r\n                                    </Col>\r\n                                  </Row>\r\n                                </div>\r\n                              );\r\n                          }\r\n                        })\r\n                      ) : (\r\n                        <h1 className=\"text-center mt-5\">\r\n                          There are no completed orders yet.\r\n                        </h1>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Pages\\ClientOrderDetails\\index.js",["554"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  getOrderDetailsStart,\r\n  setOrderComplete,\r\n} from \"./../../Redux/Orders/orders.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport BtnPink from \"./../../Components/Forms/ButtonPink\";\r\nimport OrderDetails from \"./../../Components/OrderDetails\";\r\n\r\nconst mapState = ({ ordersData }) => ({\r\n  orderDetails: ordersData.orderDetails,\r\n});\r\n\r\nconst ClientOrderDetails = () => {\r\n  const { orderID } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { orderDetails } = useSelector(mapState);\r\n  const { orderTotal } = orderDetails;\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const handleCloseConfirm = () => setShowConfirm(false);\r\n  const handleShowConfirm = () => setShowConfirm(true);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetailsStart(orderID));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (orderDetails.orderCompleted === true) {\r\n      setDisabled(true);\r\n    }\r\n  }, [orderDetails]);\r\n\r\n  return (\r\n    <div className=\"clientOrderDetails\">\r\n      <h1 className=\"clientOrderDetails-sectionTitle\">Order</h1>\r\n      <div className=\"orderDetailsOrderID\">\r\n        <h1 className=\"orderID\">\r\n          <i class=\"fas fa-receipt    \"></i> Order ID# {orderID}\r\n        </h1>\r\n      </div>\r\n\r\n      <OrderDetails order={orderDetails} />\r\n\r\n      <div className=\"orderDetailsTotal\">\r\n        <h1 className=\"orderID\">\r\n          <i class=\"fas fa-money-bill-wave\"></i> Total: &#8369;{\" \"}\r\n          {parseFloat(orderTotal).toFixed(2)}\r\n        </h1>\r\n      </div>\r\n      <Row className=\"text-center  m-0\">\r\n        <Col>\r\n          <Button\r\n            className=\"orderBtns buyBtn\"\r\n            onClick={() => {\r\n              history.push(\"/manageOrders\");\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Back\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            className=\"orderBtns addToBtn\"\r\n            disabled={disabled}\r\n            onClick={handleShowConfirm}\r\n          >\r\n            {\" \"}\r\n            <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Complete Order\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Modal centered show={showConfirm} onHide={handleCloseConfirm}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Completion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <h5>\r\n            Completing this order will release the e-receipt of{\" \"}\r\n            <strong>OrderID#{orderID} </strong>\r\n            to the account of{\" \"}\r\n            <strong>\r\n              {orderDetails.orderUserFirstName +\r\n                \" \" +\r\n                orderDetails.orderUserLastName}{\" \"}\r\n            </strong>\r\n          </h5>\r\n          <br />\r\n          <h4>Complete this order?</h4>\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          <Row className=\"text-center\">\r\n            <Col>\r\n              <BtnPink\r\n                onClick={() => {\r\n                  handleCloseConfirm();\r\n                  dispatch(setOrderComplete(orderID));\r\n                  history.push(\"/manageOrders\");\r\n                }}\r\n              >\r\n                Complete Order\r\n              </BtnPink>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientOrderDetails;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.types.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.sagas.js",["555","556","557","558"],"import { takeLatest, call, all, put, take } from \"redux-saga/effects\";\r\nimport {\r\n  admin,\r\n  auth,\r\n  handleUserProfile,\r\n  getCurrentUser,\r\n  GoogleProvider,\r\n  authProvider,\r\n} from \"./../../Firebase/utils\";\r\nimport userTypes from \"./user.types\";\r\nimport {\r\n  signInSuccess,\r\n  signOutUserSuccess,\r\n  resetPasswordSuccess,\r\n  emailVerificationSuccess,\r\n  userError,\r\n  setUsers,\r\n  fetchUsersStart,\r\n  deleteUserStart,\r\n} from \"./user.actions\";\r\nimport {\r\n  handleResetPasswordAPI,\r\n  handleFetchUsers,\r\n  handleDeleteUser,\r\n  handleDeleteUserAdmin,\r\n  handleEditUser,\r\n  handleUserEmailReset,\r\n  handleUserPasswordReset,\r\n  handleUserContactReset,\r\n} from \"./user.helpers\";\r\nimport { clearCart } from \"./../Cart/cart.actions\";\r\n\r\nexport function* getSnapshotFromUserAuth(user, additionalData = {}) {\r\n  try {\r\n    const userRef = yield call(handleUserProfile, {\r\n      userAuth: user,\r\n      additionalData,\r\n    });\r\n    const snapshot = yield userRef.get();\r\n    yield put(\r\n      signInSuccess({\r\n        id: snapshot.id,\r\n        ...snapshot.data(),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* emailSignIn({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    console.log(user);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    const error = [\"Invalid Username or Password.\"];\r\n    yield put(userError(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* signOutUser() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(clearCart());\r\n    yield put(signOutUserSuccess());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSignOutUserStart() {\r\n  yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUser);\r\n}\r\n\r\nexport function* signUpUser({\r\n  payload: { fName, lName, contactNo, email, password, confirmPassword },\r\n}) {\r\n  if (password !== confirmPassword) {\r\n    const err = [\"Password Don't match\"];\r\n    yield put(userError(err));\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    console.log(user);\r\n    const additionalData = { fName, lName, contactNo };\r\n    yield getSnapshotFromUserAuth(user, additionalData);\r\n  } catch (err) {\r\n    yield put(userError([err.message]));\r\n  }\r\n}\r\n\r\nexport function* onSignUpUserStart() {\r\n  yield takeLatest(userTypes.SIGN_UP_USER_START, signUpUser);\r\n}\r\n\r\nexport function* emailVerification() {\r\n  try {\r\n    yield auth.onAuthStateChanged((user) => {\r\n      user.sendEmailVerification().then(() => {\r\n        user.reload();\r\n        console.log(\"reloaded\");\r\n      });\r\n    });\r\n\r\n    yield auth.onAuthStateChanged((user) => {\r\n      if (user.emailVerified) {\r\n        console.log(\"Email is verified\");\r\n        user.reload();\r\n      } else {\r\n        console.log(\"Email is not verified\");\r\n      }\r\n    });\r\n\r\n    yield put(emailVerificationSuccess());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onEmailVerificationStart() {\r\n  yield takeLatest(userTypes.EMAIL_VERIFICATION_START, emailVerification);\r\n}\r\n\r\nexport function* resetPassword({ payload: { email } }) {\r\n  try {\r\n    yield call(handleResetPasswordAPI, email);\r\n    yield put(resetPasswordSuccess());\r\n  } catch (err) {\r\n    yield put(userError(err));\r\n  }\r\n}\r\n\r\nexport function* onResetPasswordStart() {\r\n  yield takeLatest(userTypes.RESET_PASSWORD_START, resetPassword);\r\n}\r\n\r\nexport function* googleSignIn() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(GoogleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignIn);\r\n}\r\n\r\nexport function* fetchUsers({ payload }) {\r\n  try {\r\n    const users = yield handleFetchUsers(payload);\r\n    yield put(setUsers(users));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onFetchUsersStart() {\r\n  yield takeLatest(userTypes.FETCH_USERS_START, fetchUsers);\r\n}\r\n\r\nexport function* editUser({ payload }) {\r\n  try {\r\n    yield handleEditUser(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onEditUserStart() {\r\n  yield takeLatest(userTypes.EDIT_USER_START, editUser);\r\n}\r\n\r\nexport function* reauthenticate(currentPassword) {\r\n  try {\r\n    var user = yield auth.currentUser;\r\n    var cred = yield authProvider.credential(user.email, currentPassword);\r\n    return user.reauthenticateWithCredential(cred);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* changeEmail({ payload }) {\r\n  try {\r\n    yield handleUserEmailReset(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(userError(err));\r\n  }\r\n}\r\n\r\nexport function* onChangeUserEmail() {\r\n  yield takeLatest(userTypes.CHANGE_USER_EMAIL, changeEmail);\r\n}\r\n\r\nexport function* changePassword({ payload }) {\r\n  if (payload.changes.newPassword !== payload.changes.newConPassword) {\r\n    const err = [\"Password Don't match\"];\r\n    yield put(userError(err));\r\n    return;\r\n  }\r\n\r\n  try {\r\n    yield handleUserPasswordReset(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(userError(err));\r\n  }\r\n}\r\n\r\nexport function* onChangeUserPassword() {\r\n  yield takeLatest(userTypes.CHANGE_USER_PASSWORD, changePassword);\r\n}\r\n\r\nexport function* changeUserContact({ payload }) {\r\n  try {\r\n    yield handleUserContactReset(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(userError(err));\r\n  }\r\n}\r\n\r\nexport function* onChangeUserContact() {\r\n  yield takeLatest(userTypes.CHANGE_USER_CONTACT, changeUserContact);\r\n}\r\n\r\nexport function* deleteUser({ payload }) {\r\n  try {\r\n    yield handleDeleteUser(payload);\r\n    yield put(fetchUsersStart());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onDeleteUserStart() {\r\n  yield takeLatest(userTypes.DELETE_USER_START, deleteUser);\r\n}\r\n\r\nexport default function* userSagas() {\r\n  yield all([\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutUserStart),\r\n    call(onSignUpUserStart),\r\n    call(onResetPasswordStart),\r\n    call(onGoogleSignInStart),\r\n    call(onEmailVerificationStart),\r\n    call(onFetchUsersStart),\r\n    call(onDeleteUserStart),\r\n    call(onEditUserStart),\r\n    call(onChangeUserEmail),\r\n    call(onChangeUserPassword),\r\n    call(onChangeUserContact),\r\n  ]);\r\n}\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.reducer.js",["559"],"import { signOutUserSuccess } from \"./user.actions\";\r\nimport userTypes from \"./user.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n  resetPasswordSuccess: false,\r\n  emailVerificationSuccess: false,\r\n  userErr: [],\r\n  users: [],\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case userTypes.SIGN_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        userErr: [],\r\n      };\r\n    case userTypes.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resetPasswordSuccess: action.payload,\r\n      };\r\n    case userTypes.EMAIL_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        emailVerificationSuccess: action.payload,\r\n      };\r\n    case userTypes.SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case userTypes.USER_ERROR:\r\n      return {\r\n        ...state,\r\n        userErr: action.payload,\r\n      };\r\n    case userTypes.RESET_USER_STATE:\r\n    case userTypes.SIGN_OUT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.sagas.js",["560","561"],"import { takeLatest, put, all, call, take } from \"redux-saga/effects\";\r\nimport {\r\n  setProducts,\r\n  setProduct,\r\n  fetchProductsStart,\r\n  setBestSellers,\r\n} from \"./products.actions\";\r\nimport productsTypes from \"./products.types\";\r\nimport productTypes from \"./products.types\";\r\nimport { auth } from \"./../../Firebase/utils\";\r\nimport {\r\n  handleAddProduct,\r\n  // handleAddProductImage,\r\n  handleFetchProducts,\r\n  handleDeleteProduct,\r\n  handleEditProduct,\r\n  handleFetchProduct,\r\n  handleFetchBestSellers,\r\n} from \"./products.helpers\";\r\n\r\nexport function* addProduct({ payload }) {\r\n  try {\r\n    const timestamp = new Date();\r\n    yield handleAddProduct({\r\n      ...payload,\r\n      Prod_CreatedDate: timestamp,\r\n    });\r\n    yield put(fetchProductsStart());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onAddProductStart() {\r\n  yield takeLatest(productsTypes.ADD_NEW_PRODUCT_START, addProduct);\r\n}\r\n\r\n// export function* addProductImage({payload}){\r\n//   try{\r\n//     yield handleAddProductImage(payload);\r\n//   }\r\n//   catch(err){\r\n//     console.log(err)\r\n//   }\r\n// }\r\n\r\n// export function* onAddProductImage() {\r\n//   yield takeLatest(productsTypes.ADD_NEW_PRODUCT_IMAGE, addProductImage);\r\n// }\r\n\r\nexport function* fetchProducts({ payload }) {\r\n  try {\r\n    const products = yield handleFetchProducts(payload);\r\n    yield put(setProducts(products));\r\n  } catch (err) {\r\n    // console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onFetchProductsStart() {\r\n  yield takeLatest(productsTypes.FETCH_PRODUCTS_START, fetchProducts);\r\n}\r\n\r\nexport function* deleteProduct({ payload }) {\r\n  try {\r\n    console.log(\"deleting\");\r\n    yield handleDeleteProduct(payload);\r\n    yield put(fetchProductsStart());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onDeleteProductStart() {\r\n  yield takeLatest(productsTypes.DELETE_PRODUCT_START, deleteProduct);\r\n}\r\n\r\nexport function* editProduct({ payload }) {\r\n  try {\r\n    yield handleEditProduct(payload);\r\n    yield put(fetchProductsStart());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onEditProductStart() {\r\n  yield takeLatest(productsTypes.EDIT_PRODUCT_START, editProduct);\r\n}\r\n\r\nexport function* fetchProduct({ payload }) {\r\n  try {\r\n    const product = yield handleFetchProduct(payload);\r\n    yield put(setProduct(product));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onFetchProductStart() {\r\n  yield takeLatest(productTypes.FETCH_PRODUCT_START, fetchProduct);\r\n}\r\n\r\nexport function* fetchBestSellers() {\r\n  try {\r\n    const bestSellers = yield handleFetchBestSellers();\r\n    yield put(setBestSellers(bestSellers));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onFetchBestSellers() {\r\n  yield takeLatest(productsTypes.FETCH_BEST_SELLERS, fetchBestSellers);\r\n}\r\n\r\nexport default function* productsSagas() {\r\n  yield all([\r\n    call(onAddProductStart),\r\n    call(onFetchProductsStart),\r\n    call(onDeleteProductStart),\r\n    call(onEditProductStart),\r\n    call(onFetchProductStart),\r\n    call(onFetchBestSellers),\r\n  ]);\r\n}\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.reducer.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.reducers.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.sagas.js",["562"],"import ordersTypes from \"./orders.types\";\r\nimport { takeLatest, put, all, call, take } from \"redux-saga/effects\";\r\nimport {\r\n  handleSaveOrder,\r\n  handleGetUserOrderHistory,\r\n  handleGetOrder,\r\n  updateSale,\r\n  updateStock,\r\n  handleOrderComplete,\r\n  handleGetClientOrderHistory,\r\n} from \"./orders.helpers\";\r\nimport {\r\n  setUserOrderHistory,\r\n  setClientOrderHistory,\r\n  setOrderDetails,\r\n} from \"./orders.actions\";\r\nimport { auth } from \"./../../Firebase/utils\";\r\nimport { clearCart } from \"./../Cart/cart.actions\";\r\n\r\nexport function* getUserOrderHistory({ payload }) {\r\n  try {\r\n    const history = yield handleGetUserOrderHistory(payload);\r\n    yield put(setUserOrderHistory(history));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onGetUserOrderHistoryStart() {\r\n  yield takeLatest(\r\n    ordersTypes.GET_USER_ORDER_HISTORY_START,\r\n    getUserOrderHistory\r\n  );\r\n}\r\n\r\nexport function* getClientOrderHistory({ payload }) {\r\n  try {\r\n    const history = yield handleGetClientOrderHistory(payload);\r\n    yield put(setClientOrderHistory(history));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onGetClientOrderHistoryStart() {\r\n  yield takeLatest(\r\n    ordersTypes.GET_CLIENT_ORDER_HISTORY_START,\r\n    getClientOrderHistory\r\n  );\r\n}\r\n\r\nexport function* saveOrder({ payload }) {\r\n  try {\r\n    const timestamps = new Date();\r\n    yield handleSaveOrder({\r\n      ...payload,\r\n      orderUserID: auth.currentUser.uid,\r\n      orderCreatedDate: timestamps,\r\n    });\r\n\r\n    for (let index = 0; index < payload.orderItems.length; index++) {\r\n      const element = payload.orderItems[index];\r\n      yield updateSale(element);\r\n      console.log(\r\n        \"order \" + [index],\r\n        element.product.Prod_Code,\r\n        element.quantity\r\n      );\r\n      yield updateStock(element);\r\n    }\r\n\r\n    yield put(clearCart());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSaveOrderHistoryStart() {\r\n  yield takeLatest(ordersTypes.SAVE_ORDER_HISTORY_START, saveOrder);\r\n}\r\n\r\nexport function* getOrderDetails({ payload }) {\r\n  try {\r\n    const order = yield handleGetOrder(payload);\r\n\r\n    yield put(setOrderDetails(order));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onGetOrderDetailsStart() {\r\n  yield takeLatest(ordersTypes.GET_ORDER_DETAILS_START, getOrderDetails);\r\n}\r\n\r\nexport function* orderComplete({ payload }) {\r\n  try {\r\n    console.log(payload);\r\n    yield handleOrderComplete(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSetOrderComplete() {\r\n  yield takeLatest(ordersTypes.SET_ORDER_COMPLETE, orderComplete);\r\n}\r\n\r\nexport default function* ordersSagas() {\r\n  yield all([\r\n    call(onSaveOrderHistoryStart),\r\n    call(onGetUserOrderHistoryStart),\r\n    call(onGetClientOrderHistoryStart),\r\n    call(onGetOrderDetailsStart),\r\n    call(onSetOrderComplete),\r\n  ]);\r\n}\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.sagas.js",["563","564","565","566","567"],"import messageTypes from \"./messages.types\";\r\nimport { setMessages, receiveMessage } from \"./messages.actions\";\r\nimport {\r\n  handleReceiveMessage,\r\n  handleSendMessage,\r\n  handleSeenMessage,\r\n  handleSendNewMessage,\r\n} from \"./messages.helpers\";\r\nimport { takeLatest, put, all, call, take } from \"redux-saga/effects\";\r\n\r\n// export function* receiveMessages({ payload }) {\r\n//   try {\r\n//     console.log(payload, 12313132);\r\n//     var chat = yield handleReceiveMessage(payload);\r\n//     yield put(setMessages(chat));\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// }\r\n// export function* onReceiveMessages() {\r\n//   yield takeLatest(messageTypes.RECEIVE_MESSAGE, receiveMessages);\r\n// }\r\n\r\nexport function* sendMessage({ payload }) {\r\n  try {\r\n    console.log(payload.email, 999);\r\n    yield handleSendMessage(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* seenMessage({ payload }) {\r\n  try {\r\n    yield handleSeenMessage(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSeenMessage() {\r\n  yield takeLatest(messageTypes.SEEN_MESSAGE, seenMessage);\r\n}\r\n\r\nexport function* onSendMessage() {\r\n  yield takeLatest(messageTypes.SEND_MESSAGE, sendMessage);\r\n}\r\n\r\nexport function* sendNewMessage({ payload }) {\r\n  try {\r\n    yield handleSendNewMessage(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSendNewMessage() {\r\n  yield takeLatest(messageTypes.SEND_NEW_MESSAGE, sendNewMessage);\r\n}\r\n\r\n// export function* checkUserExists({ payload }) {\r\n//   try {\r\n//     yield;\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// }\r\n\r\n// export function* onCheckUserExists() {\r\n//   yield takeLatest(messageTypes.CHECK_USER_EXISTS, checkUserExists);\r\n// }\r\nexport default function* messagesSagas() {\r\n  yield all([\r\n    // call(onReceiveMessages),\r\n    call(onSendMessage),\r\n    call(onSendNewMessage),\r\n    call(onSeenMessage),\r\n    // call(onCheckUserExists),\r\n  ]);\r\n}\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.sagas.js",["568","569"],"import cartTypes from \"./cart.types\";\r\nimport { takeLatest, put, all, call, take } from \"redux-saga/effects\";\r\nimport { handleSaveCart, handleRetrieveCart } from \"./cart.helpers\";\r\nimport { setCart, addProduct } from \"./cart.actions\";\r\n\r\nexport function* saveCart({ payload }) {\r\n  try {\r\n    yield handleSaveCart(payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSaveCart() {\r\n  yield takeLatest(cartTypes.SAVE_CART, saveCart);\r\n}\r\n\r\nexport function* retrieveCart({ payload }) {\r\n  try {\r\n    const cartItems = yield handleRetrieveCart(payload);\r\n    for (let i = 0; i < cartItems.length; i++) {\r\n      yield put(addProduct(cartItems[i]));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onRetrieveCart() {\r\n  yield takeLatest(cartTypes.RETRIEVE_CART, retrieveCart);\r\n}\r\n\r\nexport default function* cartSagas() {\r\n  yield all([call(onSaveCart), call(onRetrieveCart)]);\r\n}\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.reducer.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.reducer.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\CustomHooks\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Header\\index.js",["570","571","572","573","574","575","576"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport BtnPink from \"./../Forms/ButtonPink\";\r\nimport BtnIcons from \"../Forms/ButtonIcons/BtnIcons\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  emailVerificationStart,\r\n  signOutUserStart,\r\n  resetUserState,\r\n} from \"./../../Redux/User/user.actions\";\r\n\r\nimport { saveCart } from \"./../../Redux/Cart/cart.actions\";\r\n\r\nimport { selectCartItemsCount } from \"./../../Redux/Cart/cart.selectors\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Overlay from \"./../Overlay\";\r\nimport ChatBubble from \"./../ChatBubble\";\r\n// Bootstrap Imports\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\n// Media Imports\r\nimport Logo from \"./../../Assets/PC-logo1.png\";\r\n\r\nconst mapState = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  totalNumCartItems: selectCartItemsCount(state),\r\n  cartItems: state.cartData.cartItems,\r\n});\r\n\r\nconst Header = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const dispatch = useDispatch();\r\n  const { currentUser, totalNumCartItems, cartItems } = useSelector(mapState);\r\n  const [showChatboxHeader, setShowChatboxHeader] = useState(false);\r\n  const [cartModal, setCartModal] = useState(false);\r\n  const handleCloseCartModal = () => setCartModal(false);\r\n  const handleShowCartModal = () => setCartModal(true);\r\n  const [verifyModal, setVerifyModal] = useState(false);\r\n  const handleCloseVerifyModal = () => setVerifyModal(false);\r\n  const handleShowVerifyModal = () => setVerifyModal(true);\r\n  const [showReport, setShowReport] = useState(false);\r\n  const handleCloseReport = () => setShowReport(false);\r\n  const handleShowReport = () => setShowReport(true);\r\n\r\n  const saveThisCart = () => {\r\n    if (cartItems.length > 0) {\r\n      const configCart = {\r\n        cartItems: cartItems,\r\n        userID: currentUser.id,\r\n      };\r\n      dispatch(saveCart(configCart));\r\n      signOut();\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    handleCloseCartModal();\r\n    history.push(\"/\");\r\n    dispatch(signOutUserStart());\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetUserState());\r\n  };\r\n\r\n  const onVerification = (e) => {\r\n    e.preventDefault();\r\n    setShow(true);\r\n    dispatch(emailVerificationStart());\r\n    console.log(currentUser.emailVerified);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"p-0 headerHolder\">\r\n      <Navbar collapseOnSelect expand=\"lg\" className=\"p-0 mainNav\">\r\n        <Col\r\n          md={{ span: 4, offset: 0 }}\r\n          xs={{ span: 12, offset: 0, order: \"first\" }}\r\n          className=\"xs-only-text-center\"\r\n        >\r\n          <Navbar.Brand>\r\n            <Link to=\"/\">\r\n              <img className=\"logo1\" src={Logo} alt=\"Penelope's Collectionz\" />\r\n            </Link>\r\n          </Navbar.Brand>\r\n        </Col>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Col>\r\n            <Nav fill>\r\n              <Nav.Item>\r\n                <Nav.Link>\r\n                  <Link to=\"/\">Products</Link>\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link>\r\n                  <Link to=\"/aboutUs\">About Us</Link>\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link>\r\n                  <Link to=\"/contactUs\">Contact Us</Link>\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n        </Navbar.Collapse>\r\n        <Col\r\n          xs={(10, { order: \"third\" })}\r\n          md={4}\r\n          className=\"xs-only-text-center\"\r\n        >\r\n          <Nav fill className=\"justify-content-end\">\r\n            <div className=\"callToActions\">\r\n              {currentUser && (\r\n                <ul>\r\n                  {!currentUser.emailVerified && (\r\n                    <>\r\n                      <li>\r\n                        <OverlayTrigger\r\n                          trigger={[\"hover\", \"focus\"]}\r\n                          placement=\"bottom\"\r\n                          overlay={\r\n                            <Popover>\r\n                              <Popover.Title as=\"h3\">\r\n                                Verify your account now!\r\n                              </Popover.Title>\r\n                              <Popover.Content>\r\n                                Verifying your email allows you to{\" \"}\r\n                                <strong>chat with us</strong>,{\" \"}\r\n                                <strong>order your desired products</strong>,{\" \"}\r\n                                and <strong>manage your profile.</strong>\r\n                              </Popover.Content>\r\n                            </Popover>\r\n                          }\r\n                        >\r\n                          <Nav.Item>\r\n                            <BtnIcons\r\n                              className=\"caution shadow-none\"\r\n                              type=\"submit\"\r\n                              onClick={onVerification}\r\n                            >\r\n                              <i class=\"fas fa-exclamation-triangle\"></i>\r\n                            </BtnIcons>\r\n                          </Nav.Item>\r\n                        </OverlayTrigger>\r\n                      </li>\r\n\r\n                      <Modal\r\n                        show={show}\r\n                        onHide={handleClose}\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                        centered\r\n                      >\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title>Verification Email Sent!</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"modalDesc\">\r\n                          We have sent an email to{\" \"}\r\n                          <span className=\"emailToVerify\">\r\n                            {currentUser.email}\r\n                          </span>\r\n                          .\r\n                          <p className=\"modalDescEmailText\">\r\n                            Verifying your email allows you to chat with us,\r\n                            order your desired products, and manage your\r\n                            profile.\r\n                          </p>\r\n                          <p className=\"modalDescEmailText\">\r\n                            After verifying your email, please reload the page\r\n                            or click the button below.\r\n                          </p>\r\n                          <p className=\"modalDescEmailTextNote\">\r\n                            Note: If you have not received the verification\r\n                            email, please check your \"Spam\" folder.\r\n                          </p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                          <BtnPink onClick={() => window.location.reload()}>\r\n                            Reload this page\r\n                          </BtnPink>\r\n                        </Modal.Footer>\r\n                      </Modal>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* for BETA only - Report Button */}\r\n                  {\r\n                    <>\r\n                      <li>\r\n                        <OverlayTrigger\r\n                          trigger={[\"hover\", \"focus\"]}\r\n                          placement=\"bottom\"\r\n                          overlay={\r\n                            <Popover>\r\n                              <Popover.Title as=\"h3\">\r\n                                Report a bug\r\n                              </Popover.Title>\r\n                              <Popover.Content>\r\n                                Please click me if you encounter any bugs or\r\n                                errors.\r\n                              </Popover.Content>\r\n                            </Popover>\r\n                          }\r\n                        >\r\n                          <Nav.Item>\r\n                            <BtnIcons type=\"submit\" onClick={handleShowReport}>\r\n                              <i class=\"fas fa-bug    \"></i>\r\n                            </BtnIcons>\r\n                          </Nav.Item>\r\n                        </OverlayTrigger>\r\n                      </li>\r\n\r\n                      <Modal show={showReport} onHide={handleCloseReport}>\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title>Report a bug</Modal.Title>\r\n                        </Modal.Header>\r\n                        <center>\r\n                          <Modal.Body>\r\n                            <h5>\r\n                              Hi! We apologize for any inconvenience you may\r\n                              have experienced while using our website. Please\r\n                              understand, the website is still under beta\r\n                              testing. Thank you.\r\n                            </h5>\r\n                          </Modal.Body>\r\n                          <Modal.Body>\r\n                            <h5>\r\n                              Please help us improve the website by send us an\r\n                              email at &nbsp;\r\n                              <strong>\r\n                                <a href=\"mailto: penelopescollectionz@ust.edu.ph\">\r\n                                  penelopescollectionz@ust.edu.ph\r\n                                </a>\r\n                              </strong>\r\n                            </h5>\r\n                          </Modal.Body>\r\n                        </center>\r\n                      </Modal>\r\n                    </>\r\n                  }\r\n\r\n                  {currentUser.userRoles.includes(\"client\") && (\r\n                    <li>\r\n                      <OverlayTrigger\r\n                        trigger={[\"hover\", \"focus\"]}\r\n                        placement=\"bottom\"\r\n                        overlay={\r\n                          <Popover>\r\n                            <Popover.Title as=\"h3\">Chat with Us!</Popover.Title>\r\n                            <Popover.Content>\r\n                              Click here and let's talk about your inquiries!\r\n                            </Popover.Content>\r\n                          </Popover>\r\n                        }\r\n                      >\r\n                        <Nav.Item>\r\n                          <BtnIcons\r\n                            type=\"submit\"\r\n                            onClick={() => {\r\n                              if (currentUser.emailVerified) {\r\n                                history.push(\"/chat\");\r\n                              } else {\r\n                                handleShowVerifyModal();\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i class=\"fa fa-comments\" aria-hidden=\"true\"></i>\r\n                          </BtnIcons>\r\n                        </Nav.Item>\r\n                      </OverlayTrigger>\r\n                    </li>\r\n                  )}\r\n                  <li>\r\n                    <OverlayTrigger\r\n                      trigger={[\"hover\", \"focus\"]}\r\n                      placement=\"bottom\"\r\n                      overlay={\r\n                        <Popover>\r\n                          <Popover.Title as=\"h3\">My Cart</Popover.Title>\r\n                          <Popover.Content>\r\n                            Your cart has{\" \"}\r\n                            <strong>{totalNumCartItems} items</strong>!\r\n                          </Popover.Content>\r\n                        </Popover>\r\n                      }\r\n                    >\r\n                      <Nav.Item>\r\n                        <Link to=\"/cart\">\r\n                          <BtnIcons type=\"submit\">\r\n                            <i\r\n                              class=\"fa fa-shopping-cart\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </BtnIcons>\r\n                        </Link>\r\n                      </Nav.Item>\r\n                    </OverlayTrigger>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <OverlayTrigger\r\n                      trigger={[\"hover\", \"focus\"]}\r\n                      placement=\"bottom\"\r\n                      overlay={\r\n                        <Popover>\r\n                          <Popover.Title as=\"h3\">\r\n                            My Profile {\"(\"}\r\n                            {currentUser.email}\r\n                            {\")\"}\r\n                          </Popover.Title>\r\n                          <Popover.Content>\r\n                            Click here to customize your profile!\r\n                          </Popover.Content>\r\n                        </Popover>\r\n                      }\r\n                    >\r\n                      <Nav.Item>\r\n                        <BtnIcons\r\n                          type=\"submit\"\r\n                          onClick={() => {\r\n                            if (currentUser.emailVerified) {\r\n                              history.push(\"/dashboard\");\r\n                            } else {\r\n                              handleShowVerifyModal();\r\n                            }\r\n                          }}\r\n                        >\r\n                          <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\r\n                        </BtnIcons>\r\n                      </Nav.Item>\r\n                    </OverlayTrigger>\r\n                  </li>\r\n                  <Modal show={verifyModal} onHide={handleCloseVerifyModal}>\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>\r\n                        Oops! You account hasn't verified yet.\r\n                      </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      Before accessing this content, please make sure that you\r\n                      have your <strong>email verified</strong> first by\r\n                      clicking the caution icon {\"(\"}\r\n                      <span className=\"cautionConstraints\">\r\n                        <i class=\"fas fa-exclamation-triangle\"></i>\r\n                      </span>\r\n                      {\")\"} in your header above.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        onClick={handleCloseVerifyModal}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n                  <li>\r\n                    <Nav.Item>\r\n                      <BtnPink\r\n                        type=\"submit\"\r\n                        onClick={() => {\r\n                          if (cartItems.length > 0) {\r\n                            handleShowCartModal();\r\n                          } else {\r\n                            signOut();\r\n                          }\r\n                        }}\r\n                      >\r\n                        Logout\r\n                      </BtnPink>\r\n                    </Nav.Item>\r\n                  </li>\r\n                  <Modal\r\n                    show={cartModal}\r\n                    onHide={handleCloseCartModal}\r\n                    keyboard={false}\r\n                  >\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>Logging out with a cart</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <p>\r\n                        It looks like you have items in your cart. Unsaved carts\r\n                        will be cleared if you continue to sign out without\r\n                        saving it.\r\n                      </p>\r\n                      <p>\r\n                        Saving a cart would allow you to load it later if you\r\n                        decided to.\r\n                      </p>\r\n                      <p>\r\n                        Your saved cart can also serve as your express cart to\r\n                        add your favorite items from us in a jiffy!\r\n                      </p>\r\n                      <p className=\"text-centered\">\r\n                        <strong>\r\n                          Would you like to save your current cart?\r\n                        </strong>\r\n                      </p>\r\n                      <p>\r\n                        NOTE: Saving this cart will overwrite your previously\r\n                        saved cart if you have any.\r\n                      </p>\r\n                    </Modal.Body>\r\n                    <Modal.Body>\r\n                      <Row className=\"text-center\">\r\n                        <Col>\r\n                          <Button\r\n                            className=\"buyBtn modalBtns\"\r\n                            onClick={() => {\r\n                              signOut();\r\n                            }}\r\n                          >\r\n                            No, log me out.\r\n                          </Button>\r\n                        </Col>\r\n                        <Col>\r\n                          <Button\r\n                            className=\"addToBtn modalBtns\"\r\n                            onClick={() => saveThisCart()}\r\n                          >\r\n                            <i class=\"fas fa-save    \"></i> Yep, save my cart.\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Modal.Body>\r\n                  </Modal>\r\n                </ul>\r\n              )}\r\n\r\n              {!currentUser && (\r\n                <ul>\r\n                  <li>\r\n                    <Nav.Link>\r\n                      <Link to=\"/registration\">\r\n                        <BtnPink type=\"submit\" onClick={() => reset()}>\r\n                          Register\r\n                        </BtnPink>\r\n                      </Link>\r\n                    </Nav.Link>\r\n                  </li>\r\n                  <li>\r\n                    <Nav.Link>\r\n                      <Link to=\"/login\">\r\n                        <BtnPink type=\"submit\" onClick={() => reset()}>\r\n                          Login\r\n                        </BtnPink>\r\n                      </Link>\r\n                    </Nav.Link>\r\n                  </li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </Nav>\r\n        </Col>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  currentUser: null,\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Footer\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatBubble\\index.js",["577","578","579","580"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { firestore } from \"./../../Firebase/utils\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport {\r\n  sendMessage,\r\n  sendNewMessage,\r\n  seenMessage,\r\n} from \"./../../Redux/Messages/messages.actions\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Popover, OverlayTrigger, Badge, Modal, Button } from \"react-bootstrap\";\r\n\r\nimport \"react-chat-widget/lib/styles.css\";\r\n\r\nconst mapState = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n});\r\n\r\nconst ChatBubble = () => {\r\n  const dispatch = useDispatch();\r\n  const { currentUser } = useSelector(mapState);\r\n  const [showChatbox, setShowChatbox] = useState(false);\r\n\r\n  const handleShowChatbox = () => setShowChatbox(true);\r\n  const handleCloseChatbox = () => setShowChatbox(false);\r\n  const [chat, setChat] = useState([]);\r\n  const [chatListLength, setChatListLength] = useState(0);\r\n\r\n  const [chatDoesExists, setChatDoesExists] = useState(false);\r\n\r\n  const [verifyModal, setVerifyModal] = useState(false);\r\n  const handleCloseVerifyModal = () => setVerifyModal(false);\r\n  const handleShowVerifyModal = () => setVerifyModal(true);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      currentUser !== null &&\r\n      !currentUser.userRoles.includes(\"admin\") &&\r\n      !currentUser.userRoles.includes(\"client\")\r\n    ) {\r\n      firestore\r\n        .collection(\"chats\")\r\n        //.where(\"email\", \"==\", currentUser.id)\r\n        .where(\"users\", \"array-contains\", currentUser.email)\r\n        .onSnapshot(\r\n          (res) => {\r\n            const chats = [];\r\n            res.forEach((doc) => {\r\n              chats.push(doc.data());\r\n              console.log(\"realtime\", doc.data());\r\n              console.log(chats);\r\n\r\n              setChat(chats);\r\n              setChatListLength(chats.length);\r\n            });\r\n          },\r\n          (err) => {\r\n            console.log(`Encountered error: ${err}`);\r\n          }\r\n        );\r\n    }\r\n    console.log(chat, \"chat\");\r\n  }, [currentUser]);\r\n\r\n  const buildDocKey = (msg) =>\r\n    [currentUser.email, \"Penelope's Collectionz\"].sort().join(\":\");\r\n\r\n  const submitMessage = (msg) => {\r\n    if (chat.length === 0) {\r\n      const docKey = \"Penelope's Collectionz:\".concat(currentUser.email);\r\n      console.log(\"chatting with client\");\r\n      const newChat = {\r\n        users: [currentUser.email, \"Penelope's Collectionz\"],\r\n        seen: false,\r\n        custFullName: currentUser.fName + \" \" + currentUser.lName,\r\n        messages: [\r\n          {\r\n            message: msg,\r\n            sender: currentUser.email,\r\n          },\r\n        ],\r\n      };\r\n      dispatch(sendNewMessage({ newChat, docKey }));\r\n    } else {\r\n      const docKey = buildDocKey();\r\n      console.log(docKey);\r\n      const message = {\r\n        msg: msg,\r\n        email: currentUser.email,\r\n        docKey: docKey,\r\n      };\r\n      dispatch(sendMessage(message));\r\n    }\r\n  };\r\n\r\n  const chatSeen = () => {\r\n    const docKey = buildDocKey();\r\n    clickedMessageWhereNotSender(docKey);\r\n  };\r\n  const clickedMessageWhereNotSender = (docKey) => {\r\n    if (\r\n      chat[0] !== undefined &&\r\n      chat[0].messages[chat[0].messages.length - 1].sender !== currentUser.email\r\n    ) {\r\n      dispatch(seenMessage(docKey));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentUser !== null &&\r\n        !currentUser.userRoles.includes(\"admin\") &&\r\n        !currentUser.userRoles.includes(\"client\") && (\r\n          <div>\r\n            <OverlayTrigger\r\n              trigger={[\"hover\", \"focus\"]}\r\n              placement=\"left\"\r\n              overlay={\r\n                <Popover>\r\n                  <Popover.Title as=\"h1\">Chat with Us!</Popover.Title>\r\n                  <Popover.Content>\r\n                    Click here and let's talk about your inquiries!\r\n                  </Popover.Content>\r\n                </Popover>\r\n              }\r\n            >\r\n              <div\r\n                className=\"chatPopupButton\"\r\n                onClick={() => {\r\n                  if (currentUser.emailVerified) {\r\n                    if (showChatbox !== true) {\r\n                      handleShowChatbox();\r\n                      chatSeen();\r\n                    } else {\r\n                      handleCloseChatbox();\r\n                    }\r\n                  } else {\r\n                    handleShowVerifyModal();\r\n                  }\r\n                }}\r\n              >\r\n                {showChatbox ? (\r\n                  <h3>\r\n                    <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                  </h3>\r\n                ) : (\r\n                  <h3>\r\n                    <i class=\"fas fa-comments    \"></i>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </OverlayTrigger>\r\n            {showChatbox ? (\r\n              <ChatWindow\r\n                chatSeen={chatSeen}\r\n                roles={currentUser.userRoles}\r\n                chats={chat}\r\n                email={currentUser.email}\r\n                onMessageSubmit={submitMessage}\r\n              />\r\n            ) : null}\r\n            <div className=\"chatNotif\">\r\n              {Array.isArray(chat) &&\r\n                chat.length > 0 &&\r\n                chat[0].seen === false &&\r\n                chat[0].messages[chat[0].messages.length - 1].sender !==\r\n                  currentUser.email && (\r\n                  <Badge pill variant=\"danger\">\r\n                    New\r\n                  </Badge>\r\n                )}\r\n            </div>\r\n          </div>\r\n        )}{\" \"}\r\n      <Modal show={verifyModal} onHide={handleCloseVerifyModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Oops! You account hasn't verified yet.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Before accessing this content, please make sure that you have your{\" \"}\r\n          <strong>email verified</strong> first by clicking the caution icon{\" \"}\r\n          {\"(\"}\r\n          <span className=\"cautionConstraints\">\r\n            <i class=\"fas fa-exclamation-triangle\"></i>\r\n          </span>\r\n          {\")\"} in your header above.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseVerifyModal}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n\r\n    // <Widget\r\n    //   handleNewUserMessage={handleNewUserMessage}\r\n    //   title=\"Welcome Ka'Pretty!\"\r\n    //   subtitle=\"We will respond to your inquiry as fast as we can\"\r\n    // />\r\n  );\r\n};\r\n\r\nexport default ChatBubble;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.actions.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.actions.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\User\\user.helpers.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.actions.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Firebase\\utils.js",["581","582","583","584","585"],"import firebase from \"firebase/app\"; //firebase utilities\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase-admin\";\r\nimport { firebaseConfig } from \"./config\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\n// Initialize the default app\r\nexport const admin = require(\"firebase-admin\");\r\nvar serviceAccount = require(\"./../serviceAccountKey.json\");\r\n\r\nvar app = admin.initializeApp();\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const storage = firebase.storage();\r\nexport const auth = firebase.auth();\r\nexport const authProvider = firebase.auth.EmailAuthProvider;\r\nexport const firestore = firebase.firestore();\r\nexport const fieldVal = firebase.firestore.FieldValue;\r\n\r\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nGoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const handleUserProfile = async ({ userAuth, additionalData }) => {\r\n  if (!userAuth) return;\r\n  const { uid } = userAuth;\r\n\r\n  const userRef = firestore.doc(`users/${uid}`);\r\n  const snapshot = await userRef.get();\r\n  const { displayName, email, emailVerified } = userAuth;\r\n\r\n  if (!snapshot.exists) {\r\n    const timestamp = new Date();\r\n    const userRoles = [\"customer\"];\r\n    try {\r\n      await userRef.set({\r\n        email,\r\n        emailVerified,\r\n        createdDate: timestamp,\r\n        userRoles,\r\n        ...additionalData,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  try {\r\n    await userRef.update({ emailVerified });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      unsubscribe();\r\n      resolve(userAuth);\r\n    }, reject);\r\n  });\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.types.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.types.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.utils.js",["586","587","588"],"export const existingCartItem = ({ prevCartItems, nextCartItem }) => {\r\n  return prevCartItems.find(\r\n    (cartItem) =>\r\n      cartItem.product.Prod_Code === nextCartItem.product.Prod_Code &&\r\n      cartItem.selectedColor === nextCartItem.selectedColor &&\r\n      cartItem.selectedSize === nextCartItem.selectedSize\r\n  );\r\n};\r\n\r\nexport const handleAddToCart = ({ prevCartItems, nextCartItem }) => {\r\n  const cartItemExists = existingCartItem({ prevCartItems, nextCartItem });\r\n\r\n  if (cartItemExists) {\r\n    return prevCartItems.map((cartItem) =>\r\n      cartItem.product.Prod_Code == nextCartItem.product.Prod_Code &&\r\n      cartItem.selectedColor == nextCartItem.selectedColor &&\r\n      cartItem.selectedSize == nextCartItem.selectedSize\r\n        ? {\r\n            ...cartItem,\r\n            quantity: cartItem.quantity + nextCartItem.quantity,\r\n            total: cartItem.total + nextCartItem.total,\r\n          }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  return [\r\n    ...prevCartItems,\r\n    {\r\n      ...nextCartItem,\r\n      //   quantity: quantityIncrement,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const handleRemoveCartItem = ({ prevCartItems, cartItemToRemove }) => {\r\n  return prevCartItems.filter(\r\n    (item, index) => index !== cartItemToRemove.itemKey\r\n  );\r\n};\r\n\r\nexport const handleAddCartItem = ({ prevCartItems, cartItemToAdd }) => {\r\n  return prevCartItems.map((cartItem) =>\r\n    cartItem.product.Prod_Code === cartItemToAdd.Prod_Code &&\r\n    cartItem.selectedSize === cartItemToAdd.Size &&\r\n    cartItem.selectedColor === cartItemToAdd.Color\r\n      ? {\r\n          ...cartItem,\r\n          quantity: cartItem.quantity + 1,\r\n          total: cartItem.total + cartItemToAdd.PriceN,\r\n        }\r\n      : cartItem\r\n  );\r\n};\r\n\r\nexport const handleReduceCartItem = ({ prevCartItems, cartItemToReduce }) => {\r\n  const existingCartItem = prevCartItems.find(\r\n    (cartItem) =>\r\n      cartItem.product.Prod_Code === cartItemToReduce.Prod_Code &&\r\n      cartItem.selectedSize === cartItemToReduce.Size &&\r\n      cartItem.selectedColor === cartItemToReduce.Color\r\n  );\r\n  console.log(existingCartItem);\r\n\r\n  const existingCartItemIndex = prevCartItems.findIndex(\r\n    (cartItem) =>\r\n      cartItem.product.Prod_Code === cartItemToReduce.Prod_Code &&\r\n      cartItem.selectedSize === cartItemToReduce.Size &&\r\n      cartItem.selectedColor === cartItemToReduce.Color\r\n  );\r\n  console.log(existingCartItemIndex, 99);\r\n\r\n  if (existingCartItem.quantity === 1) {\r\n    const filtered = prevCartItems.filter(\r\n      (cartItem, index) => index !== cartItemToReduce.itemKey\r\n    );\r\n\r\n    console.log(filtered);\r\n    return filtered;\r\n  }\r\n\r\n  return prevCartItems.map((cartItem) =>\r\n    cartItem.product.Prod_Code === cartItemToReduce.Prod_Code &&\r\n    cartItem.selectedSize === cartItemToReduce.Size &&\r\n    cartItem.selectedColor === cartItemToReduce.Color\r\n      ? {\r\n          ...cartItem,\r\n          quantity: cartItem.quantity - 1,\r\n          total: cartItem.total - cartItemToReduce.PriceN,\r\n        }\r\n      : cartItem\r\n  );\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.helpers.js",["589"],"import { firestore } from \"./../../Firebase/utils\";\r\n\r\nexport const handleSaveCart = (cart) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"carts\")\r\n      .doc(cart.userID)\r\n      .set(cart)\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleRetrieveCart = (userID) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"carts\")\r\n      .doc(userID)\r\n      .get()\r\n      .then((snap) => {\r\n        var cartItems = [];\r\n        if (snap.exists) {\r\n          {\r\n            cartItems.push(snap.data().cartItems);\r\n            console.log(cartItems[0]);\r\n            resolve(cartItems[0]);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Messages\\messages.helpers.js",["590"],"import { firestore, fieldVal } from \"./../../Firebase/utils\";\r\nimport { setMessages } from \"./messages.actions\";\r\n\r\n// export const handleReceiveMessage = (email) => {\r\n//   return new Promise((resolve, reject) => {\r\n//     firestore\r\n//       .collection(\"chats\")\r\n//       .where(\"users\", \"array-contains\", email)\r\n//       .onSnapshot(\r\n//         (res) => {\r\n//           const chats = [];\r\n//           res.forEach((doc) => {\r\n//             chats.push(doc.data());\r\n//             console.log(\"realtime\", doc.data());\r\n//             console.log(chats);\r\n//           });\r\n//           resolve({ chats });\r\n//         },\r\n//         (err) => {\r\n//           reject(err);\r\n//           console.log(`Encountered error: ${err}`);\r\n//         }\r\n//       );\r\n//   });\r\n// };\r\n\r\nexport const handleSendMessage = (message) => {\r\n  console.log(message, \"not yet passed\");\r\n  console.log(message.docKey, 1);\r\n  console.log(message.email, 2);\r\n  console.log(message.msg, 3);\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"chats\")\r\n      .doc(message.docKey)\r\n      .update({\r\n        messages: fieldVal.arrayUnion({\r\n          sender: message.email,\r\n          message: message.msg,\r\n          timestamp: new Date(),\r\n        }),\r\n        seen: false,\r\n      })\r\n      .then(() => {\r\n        console.log(message, \"123123\");\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleSeenMessage = (docKey) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .update({ seen: true })\r\n      .then(() => {\r\n        resolve();\r\n        console.log(\"seen message\");\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleSendNewMessage = (newMessage) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(newMessage);\r\n    firestore\r\n      .collection(\"chats\")\r\n      .doc(newMessage.docKey)\r\n      .set(newMessage.newChat, { timestamp: new Date() })\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.helpers.js",["591","592"],"import { firestore } from \"./../../Firebase/utils\";\r\n\r\nexport const handleSaveOrder = (order) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"orders\")\r\n      .doc()\r\n      .set(order)\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleGetUserOrderHistory = (uid) => {\r\n  return new Promise((resolve, reject) => {\r\n    let ref = firestore\r\n      .collection(\"orders\")\r\n      .orderBy(\"orderCreatedDate\", \"desc\");\r\n\r\n    ref = ref.where(\"orderUserID\", \"==\", uid);\r\n\r\n    ref\r\n      .get()\r\n      .then((snap) => {\r\n        const data = [\r\n          ...snap.docs.map((doc) => {\r\n            return {\r\n              ...doc.data(),\r\n              orderID: doc.id,\r\n            };\r\n          }),\r\n        ];\r\n\r\n        resolve({ data });\r\n      })\r\n\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleGetClientOrderHistory = (uid) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"orders\")\r\n      .orderBy(\"orderCreatedDate\", \"desc\")\r\n      .get()\r\n      .then((snap) => {\r\n        const data = [\r\n          ...snap.docs.map((doc) => {\r\n            return {\r\n              ...doc.data(),\r\n              orderID: doc.id,\r\n            };\r\n          }),\r\n        ];\r\n\r\n        resolve({ data });\r\n      })\r\n\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleGetOrder = (orderID) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"orders\")\r\n      .doc(orderID)\r\n      .get()\r\n      .then((snap) => {\r\n        if (snap.exists) {\r\n          resolve({\r\n            ...snap.data(),\r\n            documentID: orderID,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateSale = (Prod_Code) => {\r\n  return new Promise((resolve, reject) => {\r\n    let ref = firestore.collection(\"products\").doc(Prod_Code.product.Prod_Code);\r\n    return firestore\r\n      .runTransaction((transaction) => {\r\n        return transaction.get(ref).then((doc) => {\r\n          if (!doc.exists) {\r\n            throw \"Product does not exist!\";\r\n          }\r\n          var newSale = doc.data().Prod_Sales + Prod_Code.quantity;\r\n          transaction.update(ref, { Prod_Sales: newSale });\r\n        });\r\n      })\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateStock = (Prod_Code) => {\r\n  return new Promise((resolve, reject) => {\r\n    let ref = firestore.collection(\"products\").doc(Prod_Code.product.Prod_Code);\r\n    return firestore\r\n      .runTransaction((transaction) => {\r\n        return transaction.get(ref).then((doc) => {\r\n          if (!doc.exists) {\r\n            throw \"Product does not exist!\";\r\n          }\r\n          if (doc.data().Prod_Stock >= 1) {\r\n            var newStock = doc.data().Prod_Stock - Prod_Code.quantity;\r\n            if (newStock < 1) {\r\n              newStock = 0;\r\n            }\r\n            transaction.update(ref, { Prod_Stock: newStock });\r\n          }\r\n        });\r\n      })\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleOrderComplete = (orderID) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"orders\")\r\n      .doc(orderID)\r\n      .update({ orderCompleted: true })\r\n      .then(() => {\r\n        console.log(orderID, \"now updated\");\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Orders\\orders.types.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.types.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.helpers.js",["593"],"import { firestore } from \"./../../Firebase/utils\";\r\nimport { storage } from \"./../../Firebase/utils\";\r\n\r\n// export const handleAddProductImage = (Prod_Image) => {\r\n//   return new Promise((resolve, reject) => {\r\n//     const uploadTask = storage.ref(`Prod_Images/${Prod_Image.name}`).put(Prod_Image);\r\n//       uploadTask.on()\r\n\r\n//     })\r\n// };\r\n\r\nexport const handleAddProduct = (product) => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"products\")\r\n      .doc()\r\n      .set(product)\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleFetchProducts = ({\r\n  filterType,\r\n  sorterType,\r\n  startAfterDoc,\r\n  persistProducts = [], //infinite Scroll\r\n  //startBeforeDoc,\r\n}) => {\r\n  return new Promise((resolve, reject) => {\r\n    const pageSize = 5;\r\n    let ref = firestore\r\n      .collection(\"products\")\r\n      .limit(pageSize)\r\n      .orderBy(\"Prod_CreatedDate\", \"desc\");\r\n\r\n    // console.log(ref);\r\n    // if (sorterType) {\r\n    //   console.log(\"sorterType:\" + sorterType);\r\n    //   ref = ref.orderBy(sorterType);\r\n    //   console.log(ref);\r\n    //   // } else if (!sorterType) {\r\n    //   //   console.log(\"sorterType: latest\");\r\n    //   //   ref = ref.orderBy(\"Prod_CreatedDate\", \"desc\");\r\n    // }\r\n\r\n    if (filterType) ref = ref.where(\"Prod_Category\", \"==\", filterType);\r\n    if (startAfterDoc) ref = ref.startAfter(startAfterDoc);\r\n    // if (startBeforeDoc)\r\n    //   ref = ref.limitToLast(pageSize).endBefore(startBeforeDoc);\r\n\r\n    ref\r\n      .get()\r\n      .then((snapshot) => {\r\n        const totalCount = snapshot.size;\r\n        const data = [\r\n          ...persistProducts, //infinite Scroll\r\n          ...snapshot.docs.map((doc) => {\r\n            return {\r\n              ...doc.data(),\r\n              Prod_Code: doc.id,\r\n            };\r\n          }),\r\n        ];\r\n        resolve({\r\n          data,\r\n          queryDoc: snapshot.docs[totalCount - 1],\r\n          //queryBeforeDoc: snapshot.docs[totalCount - pageSize],\r\n          isLastPage: totalCount < pageSize,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleDeleteProduct = (Prod_Code) => {\r\n  console.log(Prod_Code, 1);\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"products\")\r\n      .doc(Prod_Code)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(Prod_Code, 2);\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleEditProduct = (products) => {\r\n  console.log(products, 1);\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"products\")\r\n      .doc(products.Prod_Code)\r\n      .update(products)\r\n      .then(() => {\r\n        console.log(products, 2);\r\n        resolve();\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleFetchProduct = (Prod_Code) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(Prod_Code, 1);\r\n    firestore\r\n      .collection(\"products\")\r\n      .doc(Prod_Code)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          resolve({\r\n            ...snapshot.data(),\r\n            Prod_Code: Prod_Code,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const handleFetchBestSellers = () => {\r\n  return new Promise((resolve, reject) => {\r\n    firestore\r\n      .collection(\"products\")\r\n      .orderBy(\"Prod_Sales\", \"desc\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const bestSellersArray = snapshot.docs.map((doc) => {\r\n          return {\r\n            ...doc.data(),\r\n            Prod_Code: doc.id,\r\n          };\r\n        });\r\n        resolve(bestSellersArray);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Products\\products.actions.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Sidebar\\index.js",["594","595"],"import React, { useState, useContext } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport \"./styles.css\";\r\nimport BtnSideNav from \"./../Forms/ButtonSideNav\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\n\r\nconst Sidebar = (props) => {\r\n  return (\r\n    <Menu>\r\n      <a id=\"whatsNew\" className=\"menu-item\" href=\"#whatsNewSection\">\r\n        <i class=\"fa fa-heart\" aria-hidden=\"true\"></i> Featured Products\r\n      </a>\r\n      <a id=\"bestSellers\" className=\"menu-item\" href=\"#bestSellersSection\">\r\n        <i class=\"fa fa-star\" aria-hidden=\"true\"></i> Best Sellers\r\n      </a>\r\n\r\n      <Link className=\"menu-item\" to=\"/#prodSection\">\r\n        <i class=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i> Products\r\n      </Link>\r\n      {/* <a id=\"hotDeals\" className=\"menu-item\" href=\"#hotDealsSection\">\r\n        <i class=\"fa fa-fire\" aria-hidden=\"true\"></i> Hot Deals\r\n      </a> */}\r\n      <Link to=\"/products_earrings#prodSection\">\r\n        <BtnSideNav>Earrings</BtnSideNav>\r\n      </Link>\r\n      <Link to=\"/products_hairclips#prodSection\">\r\n        <BtnSideNav>Hairclips</BtnSideNav>\r\n      </Link>\r\n      {/* <Link to=\"/products_category3#prodSection\">\r\n        <BtnSideNav>Category 3</BtnSideNav>\r\n      </Link> */}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonIcons\\BtnIcons.js",["596"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst BtnIcons = ({ children, ...otherProps }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn-transparent btn-lg shadow-none\"\r\n      size=\"lg\"\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BtnIcons;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Utils\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Directory\\index.js",["597","598","599","600","601","602","603","604"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchProductsStart } from \"../../Redux/Products/products.actions\";\r\nimport Product from \"./Product\";\r\nimport \"./styles.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport FormSelect from \"./../Forms/FormSelect\";\r\nimport AlertError from \"./../AlertError\";\r\nimport { PaginationNext } from \"./../Pagination\";\r\n//import { PaginationBack, PaginationNext } from \"./../Pagination\";\r\n\r\nimport WhatsNew from \"./../whatsNew\";\r\nimport BestSellers from \"./../bestSellers\";\r\nimport HotDeals from \"./../hotDeals\";\r\nimport HR from \"./../HR\";\r\n\r\nconst mapState = ({ productsData }) => ({\r\n  products: productsData.products,\r\n});\r\n\r\nconst Directory = ({}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { filterType } = useParams();\r\n  const { products } = useSelector(mapState);\r\n\r\n  const { data, queryDoc, queryBeforeDoc, isLastPage, isFirstPage } = products;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductsStart({ filterType }));\r\n  }, [filterType]);\r\n\r\n  const handleFilter = (e) => {\r\n    const nextFilter = e.target.value;\r\n    if (nextFilter != \"\") {\r\n      const newFilter = \"products_\" + nextFilter;\r\n      history.push(`/${newFilter}`);\r\n    } else {\r\n      history.push(`/${nextFilter}`);\r\n    }\r\n  };\r\n\r\n  const configFilters = {\r\n    defaultValue: filterType,\r\n    options: [\r\n      {\r\n        name: \"Show All\",\r\n        value: \"\",\r\n      },\r\n      {\r\n        name: \"Earrings\",\r\n        value: \"earrings\",\r\n      },\r\n      {\r\n        name: \"Hairclips\",\r\n        value: \"hairclips\",\r\n      },\r\n      // {\r\n      //   name: \"Category 3\",\r\n      //   value: \"category3\",\r\n      // },\r\n    ],\r\n    handleChange: handleFilter,\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    dispatch(\r\n      fetchProductsStart({\r\n        filterType,\r\n        startAfterDoc: queryDoc,\r\n        persistProducts: data, //infinite Scroll\r\n      })\r\n    );\r\n  };\r\n\r\n  // const handleLoadLess = () => {\r\n  //   dispatch(\r\n  //     fetchProductsStart({\r\n  //       filterType,\r\n  //       startBeforeDoc: queryBeforeDoc,\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  const configLoadMore = {\r\n    onLoadMoreEvt: handleLoadMore,\r\n  };\r\n\r\n  // const configLoadLess = {\r\n  //   onLoadBackEvt: handleLoadLess,\r\n  // };\r\n\r\n  if (!Array.isArray(data)) return null;\r\n  if (data.length < 1) {\r\n    return (\r\n      <div className=\"products\">\r\n        <h1 className=\"products-sectionTitle\">Our Products</h1>\r\n\r\n        <div id=\"whatsNewSection\">\r\n          <h2 className=\"products-subtitle\">Featured Products</h2>\r\n          <WhatsNew />\r\n        </div>\r\n\r\n        <HR />\r\n\r\n        <div id=\"bestSellersSection\">\r\n          <h2 className=\"products-subtitle\">Best Sellers</h2>\r\n          <BestSellers />\r\n        </div>\r\n\r\n        {/* <HR /> */}\r\n\r\n        {/* <div id=\"hotDealsSection\">\r\n          <h2 className=\"products-subtitle\">Hot Deals</h2>\r\n          <HotDeals />\r\n        </div> */}\r\n\r\n        <HR />\r\n\r\n        <Row className=\"emptyProd\">\r\n          <Col>\r\n            <h2 className=\"products-subtitle\">Products</h2>\r\n          </Col>\r\n          <Col className=\"searchFilters text-right\">\r\n            <ul>\r\n              <li>Shop by Category:</li>\r\n              <li>\r\n                <FormSelect {...configFilters} />\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n        <AlertError\r\n          error={[\r\n            \"We cannot find product for this category. \",\r\n            <i class=\"fas fa-sad-tear    \"></i>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <h1 className=\"products-sectionTitle\">Our Products</h1>\r\n\r\n      <div id=\"whatsNewSection\">\r\n        <h2 className=\"products-subtitle\">Featured Products</h2>\r\n        <WhatsNew />\r\n      </div>\r\n\r\n      <HR />\r\n\r\n      <div id=\"bestSellersSection\">\r\n        <h2 className=\"products-subtitle\">Best Sellers</h2>\r\n        <BestSellers />\r\n      </div>\r\n\r\n      {/* <HR /> */}\r\n\r\n      {/* <div id=\"hotDealsSection\">\r\n        <h2 className=\"products-subtitle\">Hot Deals</h2>\r\n        <HotDeals />\r\n      </div> */}\r\n\r\n      <HR />\r\n\r\n      <div id=\"prodSection\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"products-subtitle\">Products</h2>\r\n          </Col>\r\n          <Col className=\"searchFilters text-right \">\r\n            <ul>\r\n              <li>Shop by Category:</li>\r\n              <li>\r\n                <FormSelect {...configFilters} />\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"prds\">\r\n          {data.map((product, pos) => {\r\n            const { Prod_Image, Prod_Name, Prod_Price } = product;\r\n            if (!Prod_Image || !Prod_Name || typeof Prod_Price === \"undefined\")\r\n              return null;\r\n\r\n            const configProduct = {\r\n              ...product,\r\n            };\r\n\r\n            return <Product {...configProduct} />;\r\n          })}\r\n        </div>\r\n        <Row>\r\n          {/* <Col>\r\n            <PaginationBack {...configLoadLess} />\r\n          </Col>\r\n          <Col>\r\n            <h1>{pageNum}</h1>\r\n          </Col> */}\r\n          <Col>{!isLastPage && <PaginationNext {...configLoadMore} />}</Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Directory;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\OrderDetails\\index.js",["605"],"import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Form } from \"react-bootstrap\";\r\n\r\nimport OrderSummary from \"./../CheckoutForm/OrderSummary\";\r\nimport { setOrderDetails } from \"./../../Redux/Orders/orders.actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst OrderDetails = ({ order }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    orderUserEmail,\r\n    orderUserFirstName,\r\n    orderUserLastName,\r\n    orderUserContactNum,\r\n    paymentMethod,\r\n    orderUserBillingAddress,\r\n    orderItems,\r\n  } = order;\r\n  //   const orderItems = order && order.orderItems;\r\n  //   const orderUserBillingAddress = order && order.orderUserBillingAddress;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setOrderDetails({}));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (paymentMethod) {\r\n      paymentMethodSwitch(paymentMethod);\r\n      refNumSwitch(paymentMethod);\r\n    }\r\n  }, [paymentMethod]);\r\n\r\n  const paymentMethodSwitch = (paymentMethod) => {\r\n    switch (paymentMethod) {\r\n      case \"BDO\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fbdo.png?alt=media&token=00badcd1-d58c-46f9-917d-510089b43006\"\r\n        );\r\n        break;\r\n      case \"BPI\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fbpi.png?alt=media&token=aca651b4-c014-4949-a2fa-7370d7f5e433\"\r\n        );\r\n        break;\r\n      case \"CebuanaLhuillier\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fcebuana.jpg?alt=media&token=c6b3f953-9ed5-4656-9f53-ba3ba50be2ed\"\r\n        );\r\n        break;\r\n      case \"GCash\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fgcash.png?alt=media&token=ce2ee48e-3cc9-4ac1-af14-0ea1f092ee87\"\r\n        );\r\n        break;\r\n      case \"PalawanExpress\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fpalawan.png?alt=media&token=85f31e5b-c824-4523-854d-d90c66831e98\"\r\n        );\r\n        break;\r\n      case \"Paymaya\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fpaymaya.png?alt=media&token=37ad399b-9865-47ce-9ff0-1f9e0abeace7\"\r\n        );\r\n        break;\r\n      case \"SecurityBank\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fsecuritybank.png?alt=media&token=d572e7e2-9e79-4874-a368-2791341ef4da\"\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const refNumSwitch = (refNum) => {\r\n    switch (refNum) {\r\n      case \"BDO\":\r\n        setRefNum(\"001840932676\");\r\n        break;\r\n      case \"BPI\":\r\n        setRefNum(\"4669 1817 07\");\r\n        break;\r\n      case \"CebuanaLhuillier\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"GCash\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"PalawanExpress\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"Paymaya\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"SecurityBank\":\r\n        setRefNum(\"0000029752689\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [paymentMethodImg, setPaymentMethodImg] = useState(\"\");\r\n  const [refNum, setRefNum] = useState(\"\");\r\n\r\n  return (\r\n    <Suspense fallback={<h1>Loading profile...</h1>}>\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col md={{ span: 6, offset: 1 }}>\r\n              <div className=\"orderDetailsLeft\">\r\n                <h2 className=\"checkout-subTitle\">\r\n                  <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                  Billing Information\r\n                </h2>\r\n\r\n                {orderUserFirstName && (\r\n                  <div>\r\n                    <Form.Group as={Row} controlId=\"custName\">\r\n                      <Form.Label column sm=\"2\">\r\n                        Name:\r\n                      </Form.Label>\r\n                      <Col sm=\"10\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={\r\n                            orderUserFirstName + \" \" + orderUserLastName\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"custName\">\r\n                      <Form.Label column sm=\"2\">\r\n                        Email:\r\n                      </Form.Label>\r\n                      <Col sm=\"10\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={orderUserEmail}\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"custAddress\">\r\n                      <Form.Label column sm=\"2\">\r\n                        Address:\r\n                      </Form.Label>\r\n                      <Col sm=\"10\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={\r\n                            orderUserBillingAddress.houseNo +\r\n                            \" \" +\r\n                            orderUserBillingAddress.street +\r\n                            \" \" +\r\n                            orderUserBillingAddress.brgy +\r\n                            \" \" +\r\n                            orderUserBillingAddress.city\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"contactNo\">\r\n                      <Form.Label column sm=\"2\">\r\n                        Contact #:\r\n                      </Form.Label>\r\n                      <Col sm=\"10\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={orderUserContactNum}\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col md={4}>\r\n              <div className=\"orderDetailsRight\">\r\n                <h2 className=\"checkout-subTitle\">\r\n                  <i class=\"fa fa-credit-card\" aria-hidden=\"true\"></i> Payment\r\n                  Method\r\n                </h2>\r\n                <Row className=\"align-items-center \">\r\n                  <Col md=\"auto\" xs=\"auto\">\r\n                    <img\r\n                      className=\"orderDetailsPaymentMethodImg\"\r\n                      src={paymentMethodImg}\r\n                      alt={paymentMethod}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Container>\r\n                      <Row>\r\n                        <Col className=\"orderPaymentMethodDetails\">\r\n                          <h4>\r\n                            Account Name:\r\n                            <br /> <strong>JEAN JHEN ACE B. FERRER</strong>\r\n                          </h4>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col className=\"orderPaymentMethodDetails\">\r\n                          <h4>\r\n                            Ref. No.: <br /> <strong>{refNum}</strong>\r\n                          </h4>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={{ offset: 1, span: 10 }}>\r\n              <div className=\"orderDetails\">\r\n                <h2 className=\"checkout-subTitle\">\r\n                  <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> Order\r\n                  Summary\r\n                </h2>\r\n                <div className=\"orderSummaryWrapper\">\r\n                  <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <table\r\n                          className=\"orderSummaryHeader\"\r\n                          border=\"0\"\r\n                          cellPadding=\"0\"\r\n                          cellSpacing=\"0\"\r\n                        >\r\n                          <tbody>\r\n                            <tr>\r\n                              <th>Item</th>\r\n                              <th>Name</th>\r\n                              <th>Price</th>\r\n                              <th>Color</th>\r\n                              <th>Size</th>\r\n                              <th>Qty.</th>\r\n                              <th>Subtotal</th>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <table\r\n                          className=\"orderSummaryHolder\"\r\n                          border=\"0\"\r\n                          cellPadding=\"0\"\r\n                          cellSpacing=\"0\"\r\n                        >\r\n                          <tbody>\r\n                            {Array.isArray(orderItems) &&\r\n                              orderItems.length > 0 &&\r\n                              orderItems.map((item, index) => {\r\n                                return (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <OrderSummary\r\n                                        Prod_Image={item.product.Prod_Image}\r\n                                        Prod_Name={item.product.Prod_Name}\r\n                                        Prod_Color={item.selectedColor}\r\n                                        Prod_Size={item.selectedSize}\r\n                                        Prod_Price={item.product.Prod_Price}\r\n                                        Quantity={item.quantity}\r\n                                        Subtotal={item.total}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                          </tbody>\r\n                        </table>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Receipt\\index.js",["606","607","608","609"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Form, Button, Modal } from \"react-bootstrap\";\r\nimport HR from \"./../../Components/HR\";\r\nimport logo from \"./../../Assets/PC-logo1-5.png\";\r\nimport moment from \"moment\";\r\n\r\nconst Receipt = ({ orders }) => {\r\n  const {\r\n    orderItems,\r\n    orderTotal,\r\n    orderUserBillingAddress,\r\n    orderUserContactNum,\r\n    orderUserFirstName,\r\n    orderUserLastName,\r\n    paymentMethod,\r\n    orderID,\r\n  } = orders;\r\n  const date = orders.orderCreatedDate.toDate();\r\n  return (\r\n    <div id=\"receipt\">\r\n      <div class=\"zig-zag-bottom zig-zag-top\">\r\n        <hr className=\"receiptDashedHR\" />\r\n        <br />\r\n        <img className=\"receiptLogo\" src={logo} alt=\"Penelope's Collectionz\" />\r\n        <p>\r\n          <i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Contact Number: 0997\r\n          063 2962\r\n        </p>\r\n        <p>\r\n          <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> Email:{\" \"}\r\n          <a\r\n            href=\"mailto:penelopescollectionz@gmail.com\"\r\n            className=\"contactUsEmail\"\r\n          >\r\n            penelopescollectionz@gmail.com\r\n          </a>\r\n        </p>\r\n\r\n        <div className=\"receiptHR\">\r\n          <HR />\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <strong>Billing Details</strong>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <strong>Date:</strong> {moment(date).format(\"MM/DD/YYYY\")}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <strong>OrderID:</strong>&nbsp;{orderID}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <strong>Name:</strong>&nbsp;\r\n              {orderUserFirstName + \" \" + orderUserLastName}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <strong>Address:</strong>&nbsp;\r\n              {orderUserBillingAddress.houseNo +\r\n                \" \" +\r\n                orderUserBillingAddress.street +\r\n                \" \" +\r\n                orderUserBillingAddress.brgy +\r\n                \" \" +\r\n                orderUserBillingAddress.city}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <strong>Contact#:</strong>&nbsp;{orderUserContactNum}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <strong>Paid&nbsp;via&nbsp;{paymentMethod}</strong>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <HR />\r\n          <br />\r\n          {Array.isArray(orderItems) &&\r\n            orderItems.length > 0 &&\r\n            orderItems.map((item, index) => {\r\n              return (\r\n                <Row key={index}>\r\n                  <Col className=\"text-left\">\r\n                    {item.product.Prod_Name.substring(0, 5).concat(\"...\")}\r\n                  </Col>\r\n                  <Col md={3} xs={3} className=\"text-left\">\r\n                    {item.selectedColor}\r\n                  </Col>\r\n                  <Col></Col>\r\n                  <Col className=\"text-left\">x{item.quantity}</Col>\r\n\r\n                  <Col className=\"text-right\">\r\n                    &#8369;{item.total.toFixed(2)}\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n          <br />\r\n          <HR />\r\n          <br />\r\n          <Row>\r\n            <Col className=\"text-right\">\r\n              <h4>\r\n                <strong>TOTAL: &#8369;{orderTotal.toFixed(2)}</strong>\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <hr className=\"receiptDashedHR\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Receipt;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CustomerUserOrders\\index.js",["610"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserOrderHistory } from \"../../Redux/Orders/orders.actions\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomerUserOrdersHolder from \"./CustomerUserOrdersHolder\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst mapState = ({ user, ordersData }) => ({\r\n  currentUser: user.currentUser,\r\n  orderHistory: ordersData.orderHistory.data,\r\n});\r\n\r\nconst ClientUserOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { currentUser, orderHistory } = useSelector(mapState);\r\n  useEffect(() => {\r\n    dispatch(getUserOrderHistory(currentUser.id));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1 className=\"custUserOrders-sectionTitle\"> My Orders History</h1>\r\n      <br />\r\n      <Container fluid className=\"custOrderHistoryWrapper\">\r\n        {Array.isArray(orderHistory) && orderHistory.length > 0 ? (\r\n          orderHistory.map((item, index) => {\r\n            return (\r\n              <Row>\r\n                <Col md={{ span: 10, offset: 1 }} xs=\"auto\">\r\n                  <CustomerUserOrdersHolder\r\n                    key={index}\r\n                    orders={item}\r\n                    handleClick={() => {\r\n                      history.push(`/dashboard/orders/${item.orderID}`);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })\r\n        ) : (\r\n          <h1 className=\"text-center mt-5\">There are no orders yet.</h1>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientUserOrders;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatView\\index.js",["611","612","613","614"],"import React, { useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport Avatar from \"react-avatar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\nimport ChatTextBox from \"./../ChatTextBox\";\r\n\r\nconst ChatView = ({ chat, email, onMessageSubmit, chatSeen, roles }) => {\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"messageContainer\");\r\n    if (container) {\r\n      container.scrollTo(0, container.scrollHeight);\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"chatView\">\r\n      {roles !== null &&\r\n        roles.includes(\"client\") &&\r\n        chat !== undefined &&\r\n        Array.isArray(chat.messages) &&\r\n        chat.messages.length > 0 && (\r\n          <div className=\"chatHeader\">\r\n            Your conversation with <strong>{chat.custFullName}</strong> {\"(\"}\r\n            {chat.users.filter((usr) => usr !== \"Penelope's Collectionz\")[0]}\r\n            {\")\"}\r\n          </div>\r\n        )}\r\n      {roles !== null &&\r\n        !roles.includes(\"client\") &&\r\n        Array.isArray(chat.messages) &&\r\n        chat.messages.length > 0 && (\r\n          <div className=\"chatHeader\">\r\n            Your conversation with{\" \"}\r\n            <strong>{chat.users.filter((usr) => usr !== email)[0]}</strong>\r\n          </div>\r\n        )}\r\n\r\n      <div id=\"messageContainer\">\r\n        {chat !== undefined &&\r\n          Array.isArray(chat.messages) &&\r\n          chat.messages.length > 0 &&\r\n          chat.messages.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className={item.sender === email ? \"userSent\" : \"friendSent\"}\r\n              >\r\n                {/* <Avatar\r\n                  name={item.sender}\r\n                  size={40}\r\n                  textSizeRatio={2}\r\n                  round\r\n                  className=\"chatAvatar\"\r\n                /> */}\r\n                <div className=\"message\">\r\n                  <p>{item.message}</p>\r\n                  {/* <p>{item.sender}</p>\r\n                  <p>{email}</p> */}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <ChatTextBox chatSeen={chatSeen} onMessageSubmit={onMessageSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatView;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Profile\\index.js",["615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\n\r\nimport AlertError from \"./../AlertError\";\r\n\r\n// Media Imports\r\nimport ImagePlaceholder from \"./../../Assets/woman-2.png\";\r\n\r\nimport { storage } from \"./../../Firebase/utils\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport FormInput from \"./../Forms/FormInput\";\r\n\r\nimport {\r\n  editUserStart,\r\n  signOutUserStart,\r\n  changeUserEmail,\r\n  changeUserPassword,\r\n  changeUserContact,\r\n} from \"./../../Redux/User/user.actions\";\r\n\r\nconst mapState = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  userErr: state.user.userErr,\r\n});\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { currentUser, userErr } = useSelector(mapState);\r\n  const [user, setUser] = useState([]);\r\n  const [Item, setItem] = useState(user);\r\n  const [userImage, setUserImage] = useState(null);\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newConPassword, setNewConPassword] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(\"\");\r\n  const [newContactNo, setNewContactNo] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  // Modals\r\n  const [warningShow, setWarningShow] = useState(false);\r\n\r\n  const handleWarningClose = () => setWarningShow(false);\r\n  const handleWarningShow = () => setWarningShow(true);\r\n  const [newContactShow, setNewContactShow] = useState(false);\r\n  const handleNewContactClose = () => {\r\n    setNewContactShow(false);\r\n    clearForm();\r\n  };\r\n  const handleNewContactShow = () => setNewContactShow(true);\r\n  const [emailPassShow, setEmailPassShow] = useState(false);\r\n  const handleEmailPassClose = () => setEmailPassShow(false);\r\n  const handleEmailPassShow = () => setEmailPassShow(true);\r\n  const [newEmailShow, setNewEmailShow] = useState(false);\r\n  const handleNewEmailClose = () => {\r\n    setNewEmailShow(false);\r\n    clearForm();\r\n  };\r\n  const handleNewEmailShow = () => setNewEmailShow(true);\r\n  const [newPasswordShow, setNewPasswordShow] = useState(false);\r\n  const handleNewPasswordClose = () => {\r\n    setNewPasswordShow(false);\r\n    clearForm();\r\n  };\r\n  const handleNewPasswordShow = () => setNewPasswordShow(true);\r\n\r\n  const clearForm = () => {\r\n    setCurrentPassword(\"\");\r\n    setNewEmail(\"\");\r\n    setNewPassword(\"\");\r\n    setNewConPassword(\"\");\r\n    setErrors([]);\r\n    setContactNo(\"\");\r\n    setNewContactNo(\"\");\r\n  };\r\n\r\n  const editItem = (item) => {\r\n    setUser({\r\n      fName: item.fName,\r\n      lName: item.lName,\r\n      contactNo: item.contactNo,\r\n      userID: currentUser.id,\r\n      userImage: userImage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(userErr) && userErr.length > 0) {\r\n      setErrors(userErr);\r\n    }\r\n  }, [userErr]);\r\n\r\n  useEffect(() => {\r\n    editItem(currentUser);\r\n    if (currentUser.userImage !== \"\") {\r\n      setUserImage(currentUser.userImage);\r\n    }\r\n    //Added console.log to show what the current item is and that it has passed\r\n    console.log(\"useEffect passes the current code: \", user);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setItem(user);\r\n\r\n    //Added console.log to show what the current item is and that it has passed\r\n    console.log(\"useEffect passes the current code: \", user);\r\n  }, [user]);\r\n\r\n  const onEdit = (e) => {\r\n    const { name, value } = e.target;\r\n    setItem({ ...Item, [name]: value });\r\n  };\r\n\r\n  const handleProductImage = (e) => {\r\n    const imgFile = e.target.files[0];\r\n    const fileStorage = storage.ref(`userImages/${imgFile.name}`).put(imgFile);\r\n\r\n    fileStorage.then(() => {\r\n      console.log(\"File uploaded successfully\");\r\n      storage\r\n        .ref(\"userImages\")\r\n        .child(imgFile.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setUserImage(url);\r\n          console.log(url);\r\n        });\r\n    });\r\n  };\r\n\r\n  // For Image Crop\\\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [rotation, setRotation] = useState(0);\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nameValid(Item.fName) && nameValid(Item.lName)) {\r\n      dispatch(editUserStart(Item));\r\n      window.location.reload();\r\n    } else {\r\n      setItem({ ...Item, fName: currentUser.fName });\r\n      setItem({ ...Item, lName: currentUser.lName });\r\n    }\r\n  };\r\n\r\n  const onContactChange = (e) => {\r\n    e.preventDefault();\r\n    if (contactNo === currentUser.contactNo) {\r\n      const changes = {\r\n        contactNo: newContactNo,\r\n        currentPassword: currentPassword,\r\n      };\r\n      dispatch(changeUserContact({ changes }));\r\n    } else {\r\n      setErrors([\"You typed the wrong current phone number.\"]);\r\n    }\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    e.preventDefault();\r\n    const changes = {\r\n      email: newEmail,\r\n      currentPassword: currentPassword,\r\n    };\r\n    dispatch(changeUserEmail({ changes }));\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    e.preventDefault();\r\n    const changes = {\r\n      newPassword: newPassword,\r\n      newConPassword: newConPassword,\r\n      currentPassword: currentPassword,\r\n    };\r\n    dispatch(changeUserPassword({ changes }));\r\n  };\r\n\r\n  const nameValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"profile-sectionTitle\">My profile</h1>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Row>\r\n        <Col\r\n          md={{ span: 10, offset: 1 }}\r\n          className=\"profileWrapper justify-items-center\"\r\n        >\r\n          <Form onSubmit={handleSubmit}>\r\n            <div className=\"imgUpload\">\r\n              <Row className=\"justify-content-center\">\r\n                <Col md=\"auto\">\r\n                  <h2 className=\"text-center profile-subTitle\">\r\n                    Edit Information\r\n                  </h2>\r\n                  <label htmlFor=\"uploadImg\">\r\n                    {/* {userImage && (\r\n                    <div>\r\n                      <Cropper\r\n                        image={userImage}\r\n                        crop={crop}\r\n                        rotation={rotation}\r\n                        zoom={zoom}\r\n                        aspect={1 / 1}\r\n                        onCropChange={setCrop}\r\n                        onRotationChange={setRotation}\r\n                        // onCropComplete={onCropComplete}\r\n                        onZoomChange={setZoom}\r\n                      />\r\n                    </div>\r\n                  )} */}\r\n                    <img\r\n                      className=\"userImgPlaceholder\"\r\n                      src={userImage || Item.userImage || ImagePlaceholder}\r\n                      alt={currentUser.id}\r\n                    />\r\n                    <div className=\"imgChanger\">\r\n                      {userImage && (Item.userImage = userImage)}\r\n                    </div>\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-center\">\r\n                <Col md=\"auto\" xs=\"auto\">\r\n                  {/* {!userImage ? ( */}\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"uploadImg\"\r\n                    name=\"userImage\"\r\n                    label={[]}\r\n                    size=\"lg\"\r\n                    className=\"profileImageInput\"\r\n                    placeholder=\"User Image URL\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleProductImage}\r\n                  />\r\n                  {/* ) \r\n                : (\r\n                    <Button\r\n          onClick={showCroppedImage}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          classes={{ root: classes.cropButton }}\r\n        ></Button>\r\n                )\r\n                } */}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <Container>\r\n              {/* <Form.Group as={Row} controlId=\"email\">\r\n                <Form.Label column sm=\"3\" className=\"text-right\">\r\n                  Email Address:\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  <FormInput\r\n                    type=\"email\"\r\n                    // pattern=\"[a-zA-Z]*\"\r\n                    // title=\"Names should not contain numbers and special characters.\"\r\n                    name=\"email\"\r\n                    value={Item.email}\r\n                    placeholder=\"Email Address\"\r\n                    handleChange={onEdit}\r\n                  />\r\n                </Col>\r\n              </Form.Group> */}\r\n              <Form.Group as={Row} controlId=\"fName\">\r\n                <Form.Label column sm=\"3\" className=\"profileInputLabel\">\r\n                  First Name:\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    pattern=\"[a-zA-Z ]*\"\r\n                    title=\"Names should not contain numbers and special characters.\"\r\n                    name=\"fName\"\r\n                    value={Item.fName}\r\n                    placeholder=\"First Name\"\r\n                    handleChange={onEdit}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} controlId=\"lName\">\r\n                <Form.Label column sm=\"3\" className=\"profileInputLabel\">\r\n                  Last Name:\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"lName\"\r\n                    pattern=\"[a-zA-Z ]*\"\r\n                    title=\"Names should not contain numbers and special characters.\"\r\n                    value={Item.lName}\r\n                    placeholder=\"Last Name\"\r\n                    handleChange={onEdit}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} controlId=\"contactNo\">\r\n                <Form.Label column sm=\"3\" className=\"profileInputLabel\">\r\n                  Contact Number:\r\n                </Form.Label>\r\n                <Col sm=\"6\">\r\n                  <FormInput\r\n                    type=\"tel\"\r\n                    name=\"contactNo\"\r\n                    readOnly\r\n                    value={\r\n                      Item.contactNo !== undefined &&\r\n                      Item.contactNo.replace(/\\d(?=\\d{4})/g, \"*\")\r\n                    }\r\n                    pattern=\"[0-9]{11}\"\r\n                    placeholder=\"Contact Number\"\r\n                    handleChange={onEdit}\r\n                  />\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Button\r\n                    block\r\n                    className=\"profileSave editContactNum\"\r\n                    onClick={() => handleNewContactShow()}\r\n                  >\r\n                    <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit\r\n                  </Button>\r\n                </Col>\r\n              </Form.Group>\r\n              <Row className=\"justify-content-center\">\r\n                <Col md=\"auto\" xs=\"auto\">\r\n                  <Button\r\n                    className=\"editEmailPass shadow-none mb-3\"\r\n                    onClick={handleEmailPassShow}\r\n                  >\r\n                    Change Email & Password\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col md={4}>\r\n                  <Button\r\n                    block\r\n                    type=\"submit\"\r\n                    size=\"lg\"\r\n                    className=\"profileSave shadow-none\"\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-center\">\r\n                <Col className=\"text-center mb-5\" md={6}>\r\n                  <em className=\"profileSaveNote\">\r\n                    NOTE: The page will reload after you successfully updated\r\n                    your profile.\r\n                  </em>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Form>\r\n          <Modal show={newContactShow} onHide={handleNewContactClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Change User Contact Number</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Row>\r\n                <Col className=\"errorHolder\">\r\n                  {errors.length > 0 && (\r\n                    <ul>\r\n                      {errors.map((e, index) => {\r\n                        return <AlertError keyIndex={index} error={e} />;\r\n                      })}\r\n                    </ul>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form onSubmit={onContactChange}>\r\n                <FormInput\r\n                  label=\"Please enter your current password.\"\r\n                  type=\"password\"\r\n                  name=\"currentPassword\"\r\n                  value={currentPassword}\r\n                  pattern=\".{6,}\"\r\n                  title=\"Must be at least 6 characters\"\r\n                  placeholder=\"Current Password\"\r\n                  handleChange={(e) => setCurrentPassword(e.target.value)}\r\n                />\r\n                <FormInput\r\n                  label=\"Enter your CURRENT phone number.\"\r\n                  type=\"tel\"\r\n                  name=\"contactNo\"\r\n                  value={contactNo}\r\n                  subText={\r\n                    Item.contactNo !== undefined &&\r\n                    \"Hint: \" + Item.contactNo.replace(/\\d(?=\\d{4})/g, \"*\")\r\n                  }\r\n                  pattern=\"[0-9]{11}\"\r\n                  placeholder=\"Current Phone Number\"\r\n                  handleChange={(e) => setContactNo(e.target.value)}\r\n                />\r\n                <FormInput\r\n                  label=\"Enter your NEW phone number.\"\r\n                  type=\"tel\"\r\n                  name=\"newContactNo\"\r\n                  value={newContactNo}\r\n                  subText=\"Format: 09XXXXXXXXX\"\r\n                  pattern=\"[0-9]{11}\"\r\n                  placeholder=\"New Phone Number\"\r\n                  handleChange={(e) => setNewContactNo(e.target.value)}\r\n                />\r\n                <Row className=\"justify-content-center m-3\">\r\n                  <Col className=\"text-center\" md={10}>\r\n                    <em className=\"profileSaveNote\">\r\n                      NOTE: The page will reload after you successfully updated\r\n                      your contact number.\r\n                    </em>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                  <Col md={4}>\r\n                    <Button\r\n                      block\r\n                      variant=\"primary\"\r\n                      className=\"profileSave\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleNewContactClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal show={emailPassShow} onHide={handleEmailPassClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Changing Email & Password</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                Changing Email & Password requires you to re-authenticate as you\r\n                will modify sensitive credentials. Selecting buttons below will\r\n                require you to enter your current password.\r\n              </p>\r\n              <Row className=\"justify-content-center\">\r\n                <Col md={4}>\r\n                  <Button\r\n                    block\r\n                    className=\"editEmailPass\"\r\n                    onClick={() => {\r\n                      handleEmailPassClose();\r\n                      handleNewEmailShow();\r\n                    }}\r\n                  >\r\n                    Change Email\r\n                  </Button>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Button\r\n                    block\r\n                    className=\"profileSave\"\r\n                    onClick={() => {\r\n                      handleEmailPassClose();\r\n                      handleNewPasswordShow();\r\n                    }}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleEmailPassClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal show={newEmailShow} onHide={handleNewEmailClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Change User Email</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Row>\r\n                <Col className=\"errorHolder\">\r\n                  {errors.length > 0 && (\r\n                    <ul>\r\n                      {errors.map((e, index) => {\r\n                        return <AlertError keyIndex={index} error={e} />;\r\n                      })}\r\n                    </ul>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form onSubmit={onEmailChange}>\r\n                <FormInput\r\n                  label=\"Please enter your current password.\"\r\n                  type=\"password\"\r\n                  name=\"currentPassword\"\r\n                  value={currentPassword}\r\n                  subText=\"Password must be at least 6 characters\"\r\n                  pattern=\".{6,}\"\r\n                  title=\"Must be at least 6 characters\"\r\n                  placeholder=\"Current Password\"\r\n                  handleChange={(e) => setCurrentPassword(e.target.value)}\r\n                />\r\n                <FormInput\r\n                  label=\"Enter your new Email\"\r\n                  type=\"email\"\r\n                  name=\"newEmail\"\r\n                  value={newEmail}\r\n                  placeholder=\"New Email\"\r\n                  handleChange={(e) => setNewEmail(e.target.value)}\r\n                />\r\n                <p className=\"text-center\">\r\n                  <em>\r\n                    NOTE: Changing your current Email will{\" \"}\r\n                    <strong>reset</strong> your chat with us. However, you can\r\n                    still retrieve your current chat by reverting to this\r\n                    current Email address. Please continue if you agree to this.\r\n                  </em>\r\n                </p>\r\n                {/* <p>\r\n                      <em>\r\n                        Note: We will inform you that your email has been\r\n                        changed by sending an email to{\" \"}\r\n                        <strong>{currentUser.email}</strong>\r\n                      </em>\r\n                    </p> */}\r\n                <Row className=\"justify-content-center\">\r\n                  <Col md={4}>\r\n                    <Button block className=\"profileSave\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleNewEmailClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          {/* <Modal\r\n            show={warningShow}\r\n            onHide={handleWarningClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Warning</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <h5>Changing email will reset your current chat with us.</h5>\r\n              <h5>Would you still like to continue your email update?</h5>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Row className=\"justify-content-center\">\r\n                <Col md={4}>\r\n                  <Button\r\n                    block\r\n                    className=\"editEmailPass\"\r\n                    onClick={() => {\r\n                      handleWarningClose();\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Button\r\n                    block\r\n                    className=\"profileSave\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Yes, update email.\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Modal.Footer>\r\n          </Modal> */}\r\n          <Modal show={newPasswordShow} onHide={handleNewPasswordClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Change User Password</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Row>\r\n                <Col className=\"errorHolder\">\r\n                  {errors.length > 0 && (\r\n                    <ul>\r\n                      {errors.map((e, index) => {\r\n                        return <AlertError keyIndex={index} error={e} />;\r\n                      })}\r\n                    </ul>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form onSubmit={onPasswordChange}>\r\n                <FormInput\r\n                  label=\"Please enter your current password.\"\r\n                  type=\"password\"\r\n                  name=\"currentPassword\"\r\n                  value={currentPassword}\r\n                  pattern=\".{6,}\"\r\n                  title=\"Must be at least 6 characters\"\r\n                  placeholder=\"Current Password\"\r\n                  handleChange={(e) => setCurrentPassword(e.target.value)}\r\n                />\r\n                <FormInput\r\n                  label=\"Enter your New Password\"\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  value={newPassword}\r\n                  subText=\"Password must be at least 6 characters\"\r\n                  pattern=\".{6,}\"\r\n                  title=\"Must be at least 6 characters\"\r\n                  placeholder=\"New Password\"\r\n                  handleChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <FormInput\r\n                  label=\"Confirm your New Password\"\r\n                  type=\"password\"\r\n                  name=\"newConPassword\"\r\n                  value={newConPassword}\r\n                  subText=\"Password must be at least 6 characters\"\r\n                  pattern=\".{6,}\"\r\n                  title=\"Must be at least 6 characters\"\r\n                  placeholder=\"Confirm New Password\"\r\n                  handleChange={(e) => setNewConPassword(e.target.value)}\r\n                />\r\n                <Row className=\"justify-content-center\">\r\n                  <Col md={4}>\r\n                    <Button\r\n                      block\r\n                      variant=\"primary\"\r\n                      className=\"profileSave\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleNewPasswordClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonPink\\index.js",["633"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst BtnPink = ({ children, ...otherProps }) => {\r\n  return (\r\n    <Button className=\"btn-pink btn-lg shadow-none\" size=\"lg\" {...otherProps}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BtnPink;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\AlertError\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\FormInput\\index.js",["634","635","636","637"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Col, Row, Container, Form } from \"react-bootstrap\";\r\n\r\nconst FormInput = ({ handleChange, label, subText, ...otherProps }) => {\r\n  return (\r\n    <div className=\"formRow\">\r\n      <Form.Group>\r\n        {label && <Form.Label>{label}</Form.Label>}\r\n        <Form.Control\r\n          required\r\n          size=\"lg\"\r\n          className=\"formInput\"\r\n          onChange={handleChange}\r\n          {...otherProps}\r\n        />\r\n        {subText && <Form.Text className=\"text-muted\">{subText}</Form.Text>}\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatList\\index.js",["638","639","640"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport BtnPink from \"./../../Components/Forms/ButtonPink\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ListGroup, Row, Col, Container, Button, Badge } from \"react-bootstrap\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nconst ChatList = ({\r\n  chats,\r\n  email,\r\n  selectChat,\r\n  newChatBtn,\r\n  selectedChat,\r\n  roles,\r\n  fullName,\r\n}) => {\r\n  return (\r\n    <div className=\"chatList\">\r\n      <h1 className=\"chatList-Title\">Chat List</h1>\r\n      <div className=\"messageBtnHolder\">\r\n        {!roles.includes(\"client\") &&\r\n          Array.isArray(chats) &&\r\n          chats.length === 0 && (\r\n            <Button\r\n              className=\"messageBtn btn-lg shadow-none\"\r\n              size=\"lg\"\r\n              block\r\n              onClick={() => {\r\n                newChatBtn();\r\n              }}\r\n            >\r\n              New Message\r\n            </Button>\r\n          )}\r\n        {roles.includes(\"client\") && (\r\n          <Button\r\n            className=\"messageBtn btn-lg shadow-none\"\r\n            size=\"lg\"\r\n            block\r\n            onClick={() => {\r\n              newChatBtn();\r\n            }}\r\n          >\r\n            New Message\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <ListGroup className=\"mt-3\">\r\n          {Array.isArray(chats) && chats.length > 0 ? (\r\n            chats.map((item, index) => {\r\n              return (\r\n                <ListGroup.Item\r\n                  key={index}\r\n                  onClick={() => selectChat(index)}\r\n                  action={selectedChat === index}\r\n                  href={\"#\" + index}\r\n                >\r\n                  <Row className=\"align-items-center\">\r\n                    <Col md=\"auto\">\r\n                      {roles.includes(\"client\") && (\r\n                        <Avatar\r\n                          name={\r\n                            item.users.filter(\r\n                              (user) => user !== \"Penelope's Collectionz\"\r\n                            )[0]\r\n                          }\r\n                          size={40}\r\n                          textSizeRatio={2}\r\n                          round\r\n                        />\r\n                      )}\r\n                      {!roles.includes(\"client\") && (\r\n                        <Avatar\r\n                          name={item.users.filter((user) => user !== email)[0]}\r\n                          size={40}\r\n                          textSizeRatio={2}\r\n                          round\r\n                        />\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"p-0\">\r\n                      <Container>\r\n                        <Row>\r\n                          <Col className=\"p-0\">\r\n                            {roles.includes(\"client\") && (\r\n                              <>\r\n                                <h5>\r\n                                  <strong>{item.custFullName}</strong>\r\n                                </h5>\r\n                                <p>\r\n                                  {item.users.filter(\r\n                                    (user) => user !== \"Penelope's Collectionz\"\r\n                                  )[0].length > 18\r\n                                    ? item.users\r\n                                        .filter(\r\n                                          (user) =>\r\n                                            user !== \"Penelope's Collectionz\"\r\n                                        )[0]\r\n                                        .substring(0, 18)\r\n                                        .concat(\"...\")\r\n                                    : item.users.filter(\r\n                                        (user) =>\r\n                                          user !== \"Penelope's Collectionz\"\r\n                                      )[0]}\r\n                                </p>\r\n                              </>\r\n                            )}\r\n                            {!roles.includes(\"client\") && (\r\n                              <h5>\r\n                                {item.users.filter((user) => user !== email)[0]}\r\n                              </h5>\r\n                            )}\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col className=\"p-0\">\r\n                            <p>\r\n                              {item.messages[item.messages.length - 1].message\r\n                                .length > 25\r\n                                ? item.messages[\r\n                                    item.messages.length - 1\r\n                                  ].message\r\n                                    .substring(0, 25)\r\n                                    .concat(\"...\")\r\n                                : item.messages[item.messages.length - 1]\r\n                                    .message}\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Col>\r\n                    {item.seen === false &&\r\n                      item.messages[item.messages.length - 1].sender !==\r\n                        email && (\r\n                        <Col md=\"auto\">\r\n                          <Badge pill variant=\"danger\">\r\n                            New\r\n                          </Badge>{\" \"}\r\n                        </Col>\r\n                      )}\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              );\r\n            })\r\n          ) : (\r\n            <h1 className=\"text-center mt-5\">You have no messages yet.</h1>\r\n          )}\r\n        </ListGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Redux\\Cart\\cart.selectors.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\CustomHooks\\useAuth.js",["641"],"import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n});\r\n\r\nconst useAuth = (props) => {\r\n  const history = useHistory();\r\n  const { currentUser } = useSelector(mapState);\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [currentUser]);\r\n  return currentUser;\r\n};\r\n\r\nexport default useAuth;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\CustomHooks\\useManageAuth.js",["642","643","644","645","646"],"import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkUserIsClient, checkUserIsAdmin } from \"../Utils\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n});\r\n\r\nexport const useClientAuth = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!checkUserIsClient(currentUser)) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return currentUser;\r\n};\r\n\r\nexport const useAdminAuth = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!checkUserIsAdmin(currentUser)) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return currentUser;\r\n};\r\n\r\nexport const useAdminClientAuth = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!checkUserIsAdmin(currentUser) && !checkUserIsClient(currentUser)) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return currentUser;\r\n};\r\n\r\nexport const useAdminRestriction = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (checkUserIsAdmin(currentUser)) {\r\n      history.push(\"/admin\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return currentUser;\r\n};\r\n\r\nexport const useClientRestriction = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (checkUserIsClient(currentUser)) {\r\n      history.push(\"/client\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return currentUser;\r\n};\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Firebase\\config.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Pagination\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\FormSelect\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonSecondary\\index.js",["647"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst BtnSec = ({ children, ...otherProps }) => {\r\n  return (\r\n    <Button className=\"btn-sec btn-lg shadow-none\" size=\"lg\" {...otherProps}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BtnSec;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\OrderForm\\index.js",["648","649","650","651","652","653","654"],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ClientUserOrders\\index.js",["655"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getClientOrderHistory } from \"./../../Redux/Orders/orders.actions\";\r\nimport \"./styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClientUserOrdersHolder from \"./ClientUserOrdersHolder\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst mapState = ({ user, ordersData }) => ({\r\n  currentUser: user.currentUser,\r\n  orderHistory: ordersData.orderHistory.data,\r\n});\r\n\r\nconst ClientUserOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { currentUser, orderHistory } = useSelector(mapState);\r\n  useEffect(() => {\r\n    dispatch(getClientOrderHistory(currentUser.id));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1 className=\"clientUserOrders-sectionTitle\"> Orders History</h1>\r\n      <br />\r\n      <h3 className=\"ordersNote\">\r\n        <strong>NOTE:</strong> Completed orders are darker in color\r\n      </h3>\r\n      <Container fluid className=\"clientOrderHistoryWrapper\">\r\n        {Array.isArray(orderHistory) && orderHistory.length > 0 ? (\r\n          orderHistory.map((item, index) => {\r\n            return (\r\n              <Row>\r\n                <Col>\r\n                  <ClientUserOrdersHolder\r\n                    key={index}\r\n                    orders={item}\r\n                    handleClick={() => {\r\n                      history.push(`/manageOrders/${item.orderID}`);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })\r\n        ) : (\r\n          <h1 className=\"text-center mt-5\">There are no orders yet.</h1>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientUserOrders;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CartStore\\index.js",["656","657"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectCartItemsCount,\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"./../../Redux/Cart/cart.selectors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport BtnPink from \"./../Forms/ButtonPink\";\r\nimport BtnCoral from \"./../Forms/ButtonCoral\";\r\nimport CartItem from \"./CartItem\";\r\nimport HR from \"./../HR\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { retrieveCart, saveCart } from \"./../../Redux/Cart/cart.actions\";\r\nimport \"./styles.css\";\r\n\r\nconst cartState = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n});\r\n\r\nconst mapState = (state) => ({\r\n  totalNumCartItems: selectCartItemsCount(state),\r\n  currentUser: state.user.currentUser,\r\n});\r\n\r\nconst CartStore = () => {\r\n  const dispatch = useDispatch();\r\n  const { cartItems, total } = useSelector(cartState);\r\n  const { totalNumCartItems, currentUser } = useSelector(mapState);\r\n  const [btnDisable, setBtnDisable] = useState(true);\r\n  const [loadModal, setLoadModal] = useState(false);\r\n  const handleCloseLoadModal = () => setLoadModal(false);\r\n  const handleShowLoadModal = () => setLoadModal(true);\r\n  const [saveModal, setSaveModal] = useState(false);\r\n  const handleCloseSaveModal = () => setSaveModal(false);\r\n  const handleShowSaveModal = () => setSaveModal(true);\r\n\r\n  useEffect(() => {\r\n    if (cartItems.length > 0) {\r\n      setBtnDisable(false);\r\n    } else {\r\n      setBtnDisable(true);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  const loadPrevCart = () => {\r\n    dispatch(retrieveCart(currentUser.id));\r\n    handleCloseLoadModal();\r\n  };\r\n\r\n  const saveThisCart = () => {\r\n    if (cartItems.length > 0) {\r\n      const configCart = {\r\n        cartItems: cartItems,\r\n        userID: currentUser.id,\r\n      };\r\n      dispatch(saveCart(configCart));\r\n      handleCloseSaveModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cartStore\">\r\n      <h1 className=\"cart-sectionTitle\">My Cart</h1>\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <h3 className=\"cart-subtitle\">\r\n              Cart List {\"(\"}\r\n              {totalNumCartItems}\r\n              {\")\"}\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ offset: 1, span: 6 }} xs={12}>\r\n            <div className=\"cartItemWrapper\">\r\n              {cartItems.length > 0 ? (\r\n                cartItems.map((item, index) => {\r\n                  return (\r\n                    <CartItem\r\n                      itemKey={index}\r\n                      Image={item.product.Prod_Image}\r\n                      Name={item.product.Prod_Name}\r\n                      Color={item.selectedColor}\r\n                      Size={item.selectedSize}\r\n                      Price={item.product.Prod_Price}\r\n                      Quantity={item.quantity}\r\n                      Subtotal={item.total}\r\n                      Prod_Code={item.product.Prod_Code}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <Row className=\"text-center align-items-center p-0 m-0\">\r\n                  <Col>\r\n                    <h1>You have no items in your cart.</h1>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          {/* <!-- CHECKOUT HTML --> */}\r\n          <Col md={4}>\r\n            <Container fluid>\r\n              <Row className=\"justify-content-end cartSettingsHolder\">\r\n                <Col md=\"auto\" xs=\"auto\" className=\"p-0\">\r\n                  <Button\r\n                    className=\"buyBtn modalBtns cartSettings \"\r\n                    onClick={handleShowLoadModal}\r\n                  >\r\n                    <i class=\"fa fa-cloud-download\" aria-hidden=\"true\"></i>\r\n                  </Button>\r\n                </Col>\r\n                <Col md=\"auto\" xs=\"auto\">\r\n                  <Button\r\n                    className=\"addToBtn modalBtns cartSettings\"\r\n                    disabled={btnDisable}\r\n                    onClick={() => {\r\n                      handleShowSaveModal();\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <i class=\"fas fa-save    \"></i>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Container fluid className=\"checkoutSidebar\">\r\n                    {/* <!--FINAL QUANTITY --> */}\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <h4>No. of items ordered:</h4>\r\n                      </Col>\r\n                      <Col md=\"auto\">\r\n                        <h4>{totalNumCartItems}</h4>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    {/* <!--TOTAL PRICE --> */}\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <h2 className=\"tPrice\">Total Price:</h2>\r\n                      </Col>\r\n                      <Col md=\"auto\">\r\n                        <h2 className=\"tPrice\">\r\n                          &#8369; {parseFloat(total).toFixed(2)}\r\n                        </h2>\r\n                      </Col>\r\n                    </Row>\r\n                    <HR />\r\n                    <Row className=\"text-center\">\r\n                      <Col>\r\n                        <Link to=\"/\">\r\n                          <Button className=\"buyBtn modalBtns\">\r\n                            Continue Shopping\r\n                          </Button>\r\n                        </Link>\r\n                      </Col>\r\n                      <Col className=\"chckoutbtn\">\r\n                        <Link to=\"/checkout\">\r\n                          <Button\r\n                            className=\"addToBtn modalBtns\"\r\n                            disabled={btnDisable}\r\n                          >\r\n                            {\" \"}\r\n                            <i class=\"fas fa-clipboard-check    \"></i> CHECKOUT\r\n                          </Button>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* Modals */}\r\n      <Modal show={loadModal} onHide={handleCloseLoadModal} keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Load Previous Cart</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            Did you save your cart the last time you visited us? We can help you\r\n            to load your previously saved cart by clicking{\" \"}\r\n            <strong>\"Load Previous Cart\"</strong> button below.\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            Don't worry as your current cart is safe and won't be replaced.\r\n            Instead, we'll just add the loaded cart to your current cart.\r\n          </p>\r\n          <p>\r\n            NOTE: If you haven't saved a cart yet, we would not be able to load\r\n            any saved cart.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          <Row className=\"text-center\">\r\n            <Col>\r\n              <Button\r\n                className=\"buyBtn modalBtns\"\r\n                onClick={() => {\r\n                  handleCloseLoadModal();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"addToBtn modalBtns\"\r\n                onClick={() => loadPrevCart()}\r\n              >\r\n                <i class=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Load\r\n                Previous Cart\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal show={saveModal} onHide={handleCloseSaveModal} keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Save This Cart</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            Saving a cart would allow you to load it later if you decided to.\r\n          </p>\r\n          <p>\r\n            Your saved cart can also serve as your express cart to add your\r\n            favorite items from us in a jiffy!\r\n          </p>\r\n          <p>\r\n            NOTE: Saving this cart will overwrite your previously saved cart if\r\n            you have any.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          <Row className=\"text-center\">\r\n            <Col>\r\n              <Button\r\n                className=\"buyBtn modalBtns\"\r\n                onClick={() => {\r\n                  handleCloseSaveModal();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"addToBtn modalBtns\"\r\n                onClick={() => saveThisCart()}\r\n              >\r\n                <i class=\"fas fa-save    \"></i> Save This Cart\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartStore;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CheckoutForm\\index.js",["658","659","660","661","662"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Form, Button, Modal } from \"react-bootstrap\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport FormInput from \"./../Forms/FormInput\";\r\nimport BtnSec from \"./../Forms/ButtonSecondary\";\r\nimport BtnPink from \"./../Forms/ButtonPink\";\r\nimport ButtonImg from \"./../Forms/ButtonImg\";\r\nimport OrderSummary from \"./OrderSummary\";\r\n\r\nimport {\r\n  selectCartTotal,\r\n  selectCartItemsCount,\r\n  selectCartItems,\r\n} from \"./../../Redux/Cart/cart.selectors\";\r\nimport { clearCart } from \"./../../Redux/Cart/cart.actions\";\r\nimport { saveOrderHistory } from \"./../../Redux/Orders/orders.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\n// Media Imports\r\nimport Success from \"./../../Assets/checked.png\";\r\nimport BPI from \"./../../Assets/ModesOfPayment/bpi.png\";\r\nimport BDO from \"./../../Assets/ModesOfPayment/bdo.png\";\r\nimport SecurityBank from \"./../../Assets/ModesOfPayment/securitybank.png\";\r\nimport GCash from \"./../../Assets/ModesOfPayment/gcash.png\";\r\nimport Paymaya from \"./../../Assets/ModesOfPayment/paymaya.png\";\r\nimport PalawanExpress from \"./../../Assets/ModesOfPayment/palawan.png\";\r\nimport CebuanaLhuillier from \"./../../Assets/ModesOfPayment/cebuana.jpg\";\r\nimport checkoutGIF from \"./../../Assets/checkout.gif\";\r\nimport { Switch } from \"react-router-dom\";\r\n\r\nconst mapState = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  cartItems: state.cartData.cartItems,\r\n});\r\n\r\nconst totalState = createStructuredSelector({\r\n  total: selectCartTotal,\r\n  itemCount: selectCartItemsCount,\r\n  myCartItems: selectCartItems,\r\n});\r\n\r\nconst initialAddressState = {\r\n  houseNo: \"\",\r\n  street: \"\",\r\n  brgy: \"\",\r\n  city: \"\",\r\n};\r\n\r\n// const cartState = (state) => ({\r\n//   totalNumCartItems: selectCartItemsCount(state),\r\n// });\r\n\r\nconst CheckoutForm = () => {\r\n  const handleFormSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    if (paymentMethod == \"\") {\r\n      handleShowEmpty();\r\n    } else {\r\n      handleShowConfirm();\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { currentUser, cartItems } = useSelector(mapState);\r\n  const { total, itemCount, myCartItems } = useSelector(totalState);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(\"\");\r\n  const [refNum, setRefNum] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentMethodImg, setPaymentMethodImg] = useState(\"\");\r\n  const [billingAddress, setBillingAddress] = useState({\r\n    ...initialAddressState,\r\n  });\r\n  const [showEmpty, setShowEmpty] = useState(false);\r\n  const handleCloseEmpty = () => setShowEmpty(false);\r\n  const handleShowEmpty = () => setShowEmpty(true);\r\n\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const handleCloseConfirm = () => {\r\n    setShowConfirm(false);\r\n  };\r\n  const handleShowConfirm = () => setShowConfirm(true);\r\n\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const handleCloseSuccess = () => {\r\n    setShowSuccess(false);\r\n  };\r\n  const handleShowSuccess = () => setShowSuccess(true);\r\n\r\n  const submitOrder = () => {\r\n    const configOrder = {\r\n      orderTotal: total,\r\n      orderItems: myCartItems,\r\n      paymentMethod: paymentMethod,\r\n      orderUserBillingAddress: billingAddress,\r\n      orderUserFirstName: fName,\r\n      orderUserLastName: lName,\r\n      orderUserEmail: email,\r\n      orderUserContactNum: contactNo,\r\n      orderCompleted: false,\r\n    };\r\n    handleCloseConfirm();\r\n    dispatch(saveOrderHistory(configOrder));\r\n  };\r\n  useEffect(() => {\r\n    if (itemCount < 1) {\r\n      handleShowSuccess();\r\n    }\r\n  }, [itemCount]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setFName(currentUser.fName);\r\n      setLName(currentUser.lName);\r\n      setContactNo(currentUser.contactNo);\r\n      setEmail(currentUser.email);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (paymentMethod) {\r\n      paymentMethodSwitch(paymentMethod);\r\n      refNumSwitch(paymentMethod);\r\n    }\r\n  }, [paymentMethod]);\r\n\r\n  const handleAddress = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setBillingAddress({\r\n      ...billingAddress,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const paymentMethodSwitch = (paymentMethod) => {\r\n    switch (paymentMethod) {\r\n      case \"BDO\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fbdo.png?alt=media&token=00badcd1-d58c-46f9-917d-510089b43006\"\r\n        );\r\n        break;\r\n      case \"BPI\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fbpi.png?alt=media&token=aca651b4-c014-4949-a2fa-7370d7f5e433\"\r\n        );\r\n        break;\r\n      case \"CebuanaLhuillier\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fcebuana.jpg?alt=media&token=c6b3f953-9ed5-4656-9f53-ba3ba50be2ed\"\r\n        );\r\n        break;\r\n      case \"GCash\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fgcash.png?alt=media&token=ce2ee48e-3cc9-4ac1-af14-0ea1f092ee87\"\r\n        );\r\n        break;\r\n      case \"PalawanExpress\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fpalawan.png?alt=media&token=85f31e5b-c824-4523-854d-d90c66831e98\"\r\n        );\r\n        break;\r\n      case \"Paymaya\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fpaymaya.png?alt=media&token=37ad399b-9865-47ce-9ff0-1f9e0abeace7\"\r\n        );\r\n        break;\r\n      case \"SecurityBank\":\r\n        setPaymentMethodImg(\r\n          \"https://firebasestorage.googleapis.com/v0/b/penelope-s-collectionz.appspot.com/o/PaymentMethods%2Fsecuritybank.png?alt=media&token=d572e7e2-9e79-4874-a368-2791341ef4da\"\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const refNumSwitch = (refNum) => {\r\n    switch (refNum) {\r\n      case \"BDO\":\r\n        setRefNum(\"001840932676\");\r\n        break;\r\n      case \"BPI\":\r\n        setRefNum(\"4669 1817 07\");\r\n        break;\r\n      case \"CebuanaLhuillier\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"GCash\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"PalawanExpress\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"Paymaya\":\r\n        setRefNum(\"09970632962\");\r\n        break;\r\n      case \"SecurityBank\":\r\n        setRefNum(\"0000029752689\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout\">\r\n      <h1 className=\"checkout-sectionTitle\">Checkout</h1>\r\n      <Container fluid>\r\n        {currentUser && (\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"checkoutFormLeft\">\r\n                  <h2 className=\"checkout-subTitle\">\r\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i> Billing\r\n                    Information\r\n                  </h2>\r\n\r\n                  <div>\r\n                    <Form.Group as={Row} controlId=\"userFName\">\r\n                      <Form.Label column sm=\"4\">\r\n                        First Name:\r\n                      </Form.Label>\r\n                      <Col sm=\"8\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={fName}\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"userLName\">\r\n                      <Form.Label column sm=\"4\">\r\n                        Last Name:\r\n                      </Form.Label>\r\n                      <Col sm=\"8\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={lName}\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"userEmail\">\r\n                      <Form.Label column sm=\"4\">\r\n                        Email:\r\n                      </Form.Label>\r\n                      <Col sm=\"8\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={email}\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"contactNo\">\r\n                      <Form.Label column sm=\"4\">\r\n                        Contact #:\r\n                      </Form.Label>\r\n                      <Col sm=\"8\">\r\n                        <Form.Control\r\n                          className=\"checkoutInput\"\r\n                          //   plaintext\r\n                          readOnly\r\n                          defaultValue={contactNo}\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"checkoutFormRight\">\r\n                  <h2 className=\"checkout-subTitle\">\r\n                    <i class=\"fa fa-credit-card\" aria-hidden=\"true\"></i> Payment\r\n                    Method\r\n                  </h2>\r\n                  <div className=\"photos-arrange\">\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"BDO\"\r\n                          value=\"BDO\"\r\n                          img={BDO}\r\n                          handleChange={() => {\r\n                            setPaymentMethod(\"BDO\");\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"BPI\"\r\n                          value=\"BPI\"\r\n                          img={BPI}\r\n                          handleChange={() => setPaymentMethod(\"BPI\")}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"CebuanaLhuillier\"\r\n                          value=\"CebuanaLhuillier\"\r\n                          img={CebuanaLhuillier}\r\n                          handleChange={() =>\r\n                            setPaymentMethod(\"CebuanaLhuillier\")\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"GCash\"\r\n                          value=\"GCash\"\r\n                          img={GCash}\r\n                          handleChange={() => setPaymentMethod(\"GCash\")}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"PalawanExpress\"\r\n                          value=\"PalawanExpress\"\r\n                          img={PalawanExpress}\r\n                          handleChange={() =>\r\n                            setPaymentMethod(\"PalawanExpress\")\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"Paymaya\"\r\n                          value=\"Paymaya\"\r\n                          img={Paymaya}\r\n                          handleChange={() => setPaymentMethod(\"Paymaya\")}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"auto\" xs=\"auto\">\r\n                      <div>\r\n                        <ButtonImg\r\n                          name=\"paymentMethod\"\r\n                          id=\"SecurityBank\"\r\n                          value=\"SecurityBank\"\r\n                          img={SecurityBank}\r\n                          handleChange={() => setPaymentMethod(\"SecurityBank\")}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"checkoutFormLeft\">\r\n                  <h2 className=\"checkout-subTitle\">\r\n                    {\" \"}\r\n                    <i class=\"fa fa-home\" aria-hidden=\"true\"></i> Exact Billing\r\n                    Address\r\n                  </h2>\r\n\r\n                  <FormInput\r\n                    label=\"Unit / House Number:\"\r\n                    type=\"text\"\r\n                    name=\"houseNo\"\r\n                    value={billingAddress.houseNo}\r\n                    placeholder=\"1234 - A\"\r\n                    handleChange={(e) => handleAddress(e)}\r\n                  />\r\n                  <FormInput\r\n                    label=\"Building, Street Name:\"\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    value={billingAddress.street}\r\n                    placeholder=\"Building, Street St.\"\r\n                    handleChange={(e) => handleAddress(e)}\r\n                  />\r\n                  <FormInput\r\n                    label=\"Barangay, District:\"\r\n                    type=\"text\"\r\n                    name=\"brgy\"\r\n                    value={billingAddress.brgy}\r\n                    placeholder=\"Brgy. 123, Sampaloc\"\r\n                    handleChange={(e) => handleAddress(e)}\r\n                  />\r\n                  <FormInput\r\n                    label=\"City:\"\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    value={billingAddress.city}\r\n                    placeholder=\"Manila City\"\r\n                    handleChange={(e) => handleAddress(e)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"checkoutFormRight\">\r\n                  <h2 className=\"checkout-subTitle\">\r\n                    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> Order\r\n                    Summary\r\n                  </h2>\r\n                  <div className=\"orderSummaryWrapper\">\r\n                    <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <table\r\n                            className=\"orderSummaryHeader\"\r\n                            border=\"0\"\r\n                            cellPadding=\"0\"\r\n                            cellSpacing=\"0\"\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <th>Item</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Color</th>\r\n                                <th>Size</th>\r\n                                <th>Qty.</th>\r\n                                <th>Subtotal</th>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                          <table\r\n                            className=\"orderSummaryHolder\"\r\n                            border=\"0\"\r\n                            cellPadding=\"0\"\r\n                            cellSpacing=\"0\"\r\n                          >\r\n                            <tbody>\r\n                              {cartItems.map((item, index) => {\r\n                                return (\r\n                                  <tr key={index}>\r\n                                    <td>\r\n                                      <OrderSummary\r\n                                        Prod_Image={item.product.Prod_Image}\r\n                                        Prod_Name={item.product.Prod_Name}\r\n                                        Prod_Color={item.selectedColor}\r\n                                        Prod_Size={item.selectedSize}\r\n                                        Prod_Price={item.product.Prod_Price}\r\n                                        Quantity={item.quantity}\r\n                                        Subtotal={item.total}\r\n                                      />\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                <div className=\"checkoutCancel\">\r\n                  <Link to=\"/cart\">\r\n                    <Button className=\"buyBtn modalBtns checkoutSubmit\">\r\n                      <i class=\"fa fa-times\" aria-hidden=\"true\"></i> Cancel\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"checkoutSubmit\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"addToBtn modalBtns checkoutSubmit\"\r\n                  >\r\n                    {\" \"}\r\n                    <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Confirm Order\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"checkoutFormRight\">\r\n                  <h3 className=\"checkout-subTitle\">\r\n                    <i class=\"fas fa-money-bill-wave\"></i> Total Price:\r\n                  </h3>\r\n                  <h1 className=\"checkout-subTitle\">\r\n                    &#8369;{total.toFixed(2)}\r\n                  </h1>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n        <Modal show={showConfirm} onHide={handleCloseConfirm}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Checkout Order Confirmation</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h5>Before submitting your order please review it thoroughly.</h5>\r\n            <br />\r\n            <h5>\r\n              <strong>Name: </strong>\r\n              {fName + \" \" + lName}\r\n            </h5>\r\n            <h5>\r\n              <strong>Email:</strong> {email}\r\n            </h5>\r\n            <h5>\r\n              <strong>Contact Number: </strong>\r\n              {contactNo}\r\n            </h5>\r\n            <h5>\r\n              <strong>Address: </strong>\r\n              {billingAddress.houseNo +\r\n                \" \" +\r\n                billingAddress.street +\r\n                \" \" +\r\n                billingAddress.brgy +\r\n                \" \" +\r\n                billingAddress.city}\r\n            </h5>\r\n            <h5>\r\n              <strong>Payment Method: </strong>\r\n              {paymentMethod}\r\n            </h5>\r\n            <br />\r\n            <h5>To pay for your order, please refer here:</h5>\r\n            <div>\r\n              <Row className=\"align-items-center \">\r\n                <Col>\r\n                  <img src={paymentMethodImg} alt={paymentMethod} />\r\n                </Col>\r\n                <Col>\r\n                  <Container>\r\n                    <Row>\r\n                      <Col className=\"paymentMethodDetails\">\r\n                        <h4>\r\n                          Account Name:\r\n                          <br /> <strong>JEAN JHEN ACE B. FERRER</strong>\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"paymentMethodDetails\">\r\n                        <h4>\r\n                          Ref. No.: <br /> <strong>{refNum}</strong>\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"paymentMethodDetails\">\r\n                        <h4>\r\n                          Amount to Pay: <br />{\" \"}\r\n                          <strong>&#8369;{total.toFixed(2)}</strong>\r\n                        </h4>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Modal.Body>\r\n          {/* <Modal.Body className=\"text-center\">\r\n            <img\r\n              src={checkoutGIF}\r\n              alt=\"ConfirmCheckout\"\r\n              className=\"checkoutGIF\"\r\n            />\r\n          </Modal.Body> */}\r\n          <Modal.Body className=\"text-left\">\r\n            <h3>\r\n              <p className=\"text-center\">NOTE:</p>\r\n              Strictly no cancellation of orders once confirmed.\r\n              <br />\r\n              <br />\r\n              <p>\r\n                For the <strong>SHIPMENT</strong> information and details,\r\n                please contact us through our provided chat system, email\r\n                address, or contact number once the order has been submitted.\r\n              </p>\r\n            </h3>\r\n            <br />\r\n            <h3 className=\"text-center\">\r\n              <strong>Items are made to order.</strong>\r\n            </h3>\r\n          </Modal.Body>\r\n          <Modal.Body>\r\n            <Row className=\"text-center\">\r\n              <Col>\r\n                <BtnPink onClick={submitOrder}>\r\n                  I Understand & I am ready to submit my order.\r\n                </BtnPink>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Modal show={showSuccess} onHide={handleCloseSuccess} backdrop=\"static\">\r\n          <Modal.Header>\r\n            <Modal.Title>Order Success!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img className=\"successImg\" src={Success} alt=\"Order Success!\" />\r\n            <h5>\r\n              Yipee! Your order has been successfully submitted. Please keep in\r\n              touch with us by chatting us here or in any of our social media\r\n              accounts!\r\n            </h5>\r\n            <br />\r\n            <h5>\r\n              You can also check and review your billing details through the\r\n              order history tab in your dashboard.\r\n            </h5>\r\n            <br />\r\n            <h5>\r\n              Please settle your billing and we will deliver the ordered items\r\n              to you right away!.\r\n            </h5>\r\n            <br />\r\n            <p>\r\n              <em>\r\n                NOTE: An <strong>E-Receipt</strong> will be sent to you through\r\n                your dashboard once the billing has been settled and the order\r\n                has been delivered successfully.\r\n              </em>\r\n            </p>\r\n          </Modal.Body>\r\n          <Modal.Body>\r\n            <Row className=\"justify-content-center mb-2\">\r\n              <Col md={6}>\r\n                <Button\r\n                  block\r\n                  className=\"profileSave\"\r\n                  onClick={() => {\r\n                    history.push(\"/contactUs\");\r\n                    handleCloseSuccess();\r\n                  }}\r\n                >\r\n                  <i class=\"fa fa-facebook-square\" aria-hidden=\"true\"></i>{\" \"}\r\n                  Social Media Accounts\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center mb-2\">\r\n              <Col md={6}>\r\n                <Button\r\n                  block\r\n                  className=\"profileSave\"\r\n                  onClick={() => {\r\n                    history.push(\"/dashboard\");\r\n                    handleCloseSuccess();\r\n                  }}\r\n                >\r\n                  <i class=\"fa fa-user\" aria-hidden=\"true\"></i> Go to my\r\n                  Dashboard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center mb-2\">\r\n              <Col md={6}>\r\n                <Button\r\n                  block\r\n                  className=\"profileSave\"\r\n                  onClick={() => {\r\n                    history.push(\"/\");\r\n                    handleCloseSuccess();\r\n                  }}\r\n                >\r\n                  <i class=\"fa fa-home\" aria-hidden=\"true\"></i> Homepage\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Modal show={showEmpty} onHide={handleCloseEmpty}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Oops!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"text-center\">\r\n            It looks like you forgot to select your desired{\" \"}\r\n            <strong>Payment Method</strong>\r\n          </Modal.Body>\r\n          <Modal.Body>\r\n            <Row className=\"text-center\">\r\n              <Col>\r\n                <BtnPink onClick={handleCloseEmpty}>Close</BtnPink>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\clientProfileCards\\index.js",["663","664","665"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport BtnPink from \"./../Forms/ButtonPink\";\r\n\r\nconst ClientProfileCards = ({ name, img, desc, fb, insta, twitter }) => {\r\n  return (\r\n    <Card className=\"profileCard\">\r\n      <Card.Img variant=\"top\" src={img} className=\"profileImg\" />\r\n      <Card.Body>\r\n        <Card.Title className=\"clientName\">{name}</Card.Title>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        <ListGroupItem className=\"clientDesc\">{desc}</ListGroupItem>\r\n      </ListGroup>\r\n      {fb !== undefined && twitter !== undefined && insta !== undefined && (\r\n        <Card.Body>\r\n          <p>Follow me on:</p>\r\n          <div className=\"followClient\">\r\n            {fb !== undefined && (\r\n              <a href={fb} target=\"_blank\">\r\n                <BtnPink>\r\n                  <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i> Facebook\r\n                </BtnPink>\r\n              </a>\r\n            )}\r\n          </div>\r\n          <div className=\"followClient\">\r\n            {insta !== undefined && (\r\n              <a href={insta} target=\"_blank\">\r\n                <BtnPink>\r\n                  <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i> Instagram\r\n                </BtnPink>\r\n              </a>\r\n            )}\r\n          </div>\r\n          <div className=\"followClient\">\r\n            {twitter !== undefined && (\r\n              <a href={twitter} target=\"_blank\">\r\n                <BtnPink>\r\n                  <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i> Twitter\r\n                </BtnPink>\r\n              </a>\r\n            )}\r\n          </div>\r\n        </Card.Body>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ClientProfileCards;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatBubble\\ChatWindow\\index.js",["666"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport FormInput from \"./../../Forms/FormInput\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nconst ChatWindow = ({ roles, chats, email, onMessageSubmit, chatSeen }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"messageBoxContainer\");\r\n    if (container) {\r\n      container.scrollTo(0, container.scrollHeight);\r\n    }\r\n  });\r\n\r\n  const submitMessage = () => {\r\n    if (messageValid(message)) {\r\n      onMessageSubmit(message);\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const userTyping = (e) => {\r\n    console.log(\"user typing...\");\r\n    if (e.keyCode === 13) {\r\n      submitMessage();\r\n    }\r\n  };\r\n\r\n  const messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\r\n  return (\r\n    <div className=\"chatWindow\">\r\n      <div className=\"chatWindowHeader\">\r\n        <h5>\r\n          <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n        </h5>\r\n        Welcome Ka'Pretty! <br />{\" \"}\r\n        <span className=\"chatWindowSub\">\r\n          We will respond to your inquiry as fast as we can\r\n        </span>\r\n      </div>\r\n\r\n      <div id=\"messageBoxContainer\">\r\n        {\r\n          // !roles.includes(\"client\") &&\r\n          Array.isArray(chats) && chats.length === 0 && (\r\n            <h3 className=\"noChatYet\">\r\n              You have no messages yet. Start chatting with us right now!\r\n            </h3>\r\n          )\r\n        }\r\n        {chats[0] !== undefined &&\r\n          Array.isArray(chats[0].messages) &&\r\n          chats[0].messages.length > 0 &&\r\n          chats[0].messages.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className={\r\n                  item.sender === email\r\n                    ? \"userSent userSentBubble  \"\r\n                    : \"friendSent friendSentBubble\"\r\n                }\r\n              >\r\n                <div className=\"message\">\r\n                  <p>{item.message}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <Container fluid className=\"p-0 m-0\">\r\n        <Row className=\"p-0 m-0\">\r\n          <Col className=\"p-0\">\r\n            <input\r\n              type=\"text\"\r\n              onKeyUp={(e) => userTyping(e)}\r\n              className=\"chatWindowsTextbox\"\r\n              name=\"message\"\r\n              value={message}\r\n              onFocus={() => chatSeen()}\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col className=\"p-0 text-right\">\r\n            <Button\r\n              size=\"lg\"\r\n              className=\"sendButton shadow-none\"\r\n              onClick={() => submitMessage(message)}\r\n            >\r\n              <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> Send\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Overlay\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\SignUp\\index.js",["667","668"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport BtnCoral from \"../Forms/ButtonCoral\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Row, Container, Form, Modal } from \"react-bootstrap\";\r\n\r\nimport BtnPink from \"../Forms/ButtonPink\";\r\nimport FormInput from \"./../Forms/FormInput\";\r\nimport AuthWrapper from \"./../AuthWrapper\";\r\nimport AlertError from \"./../AlertError\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signUpUserStart } from \"./../../Redux/User/user.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n  userErr: user.userErr,\r\n});\r\n\r\nconst Signup = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { currentUser, userErr } = useSelector(mapState);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [contactNo, setContactNo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [show, setShow] = useState(true);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      reset();\r\n      history.push(\"/\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(userErr) && userErr.length > 0) {\r\n      setErrors(userErr);\r\n    }\r\n  }, [userErr]);\r\n\r\n  const reset = () => {\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n    setContactNo(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    setErrors([]);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (nameValid(fName) && nameValid(lName)) {\r\n      dispatch(\r\n        signUpUserStart({\r\n          fName,\r\n          lName,\r\n          contactNo,\r\n          email,\r\n          password,\r\n          confirmPassword,\r\n        })\r\n      );\r\n    } else {\r\n      setFName(\"\");\r\n      setLName(\"\");\r\n    }\r\n  };\r\n\r\n  const configAuthWrapper = {\r\n    headline: \"Getting Started\",\r\n  };\r\n\r\n  const nameValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\r\n\r\n  return (\r\n    <Container fluid className=\"signup\">\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Privacy Notice</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Hi! Your trust and security is important to us. We promise you, our\r\n          dear Ka'Pretty, that any information you provide us will never be\r\n          disclosed to anyone. Personal information such as your{\" \"}\r\n          <strong>name</strong>, <strong>email</strong>, and{\" \"}\r\n          <strong>contact number</strong> will only be used to help facilitate\r\n          transactions and communication with you. After ordering your favorite\r\n          product/s, you will also be asked for your <strong>address</strong>{\" \"}\r\n          for a speedy delivery.\r\n        </Modal.Body>\r\n        <Modal.Body>\r\n          By signing up, you agree to the collection and use of your information\r\n          in accordance with this policy. Cheers!\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <BtnPink onClick={handleClose}>Continue</BtnPink>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"wrap\">\r\n        <Row>\r\n          <Col>\r\n            <AuthWrapper {...configAuthWrapper}>\r\n              {errors.length > 0 && (\r\n                <ul>\r\n                  {errors.map((e, index) => {\r\n                    return <AlertError keyIndex={index} error={e} />;\r\n                  })}\r\n                </ul>\r\n              )}\r\n\r\n              <Form onSubmit={handleFormSubmit}>\r\n                <Form.Row>\r\n                  <Col md={6} sm={12}>\r\n                    <FormInput\r\n                      label={[\r\n                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>,\r\n                        \" First Name\",\r\n                      ]}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter first name\"\r\n                      pattern=\"[a-zA-Z ]*\"\r\n                      title=\"Names should not contain numbers and special characters.\"\r\n                      name=\"fName\"\r\n                      value={fName}\r\n                      handleChange={(e) => setFName(e.target.value)}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={6} sm={12}>\r\n                    <FormInput\r\n                      label=\"Last Name\"\r\n                      type=\"text\"\r\n                      pattern=\"[a-zA-Z ]*\"\r\n                      title=\"Names should not contain numbers and special characters.\"\r\n                      placeholder=\"Enter last name\"\r\n                      name=\"lName\"\r\n                      value={lName}\r\n                      handleChange={(e) => setLName(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </Form.Row>\r\n\r\n                <FormInput\r\n                  label={[\r\n                    <i class=\"fa fa-phone\" aria-hidden=\"true\"></i>,\r\n                    \" Contact Number\",\r\n                  ]}\r\n                  type=\"tel\"\r\n                  placeholder=\"Enter your current Contact Number\"\r\n                  subText=\"Format: 09XXXXXXXXX\"\r\n                  name=\"contactNo\"\r\n                  value={contactNo}\r\n                  pattern=\"[0-9]{11}\"\r\n                  handleChange={(e) => setContactNo(e.target.value)}\r\n                />\r\n                <FormInput\r\n                  label={[\r\n                    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>,\r\n                    \" Email\",\r\n                  ]}\r\n                  type=\"email\"\r\n                  placeholder=\"example@email.com\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  handleChange={(e) => setEmail(e.target.value)}\r\n                />\r\n\r\n                <Form.Row>\r\n                  <Col md={6} sm={12}>\r\n                    <FormInput\r\n                      label={[\r\n                        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>,\r\n                        \" Password\",\r\n                      ]}\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      subText=\"Password must be at least 6 characters\"\r\n                      name=\"password\"\r\n                      pattern=\".{6,}\"\r\n                      title=\"Must be at least 6 characters\"\r\n                      value={password}\r\n                      handleChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col md={6} sm={12}>\r\n                    <FormInput\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm password\"\r\n                      name=\"confirmPassword\"\r\n                      pattern=\".{6,}\"\r\n                      title=\"Must be at least 6 characters\"\r\n                      value={confirmPassword}\r\n                      handleChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </Form.Row>\r\n                <Row className=\"mt-3\">\r\n                  <Col>\r\n                    <BtnPink type=\"reset\" onClick={reset}>\r\n                      Reset\r\n                    </BtnPink>\r\n                  </Col>\r\n                  <Col>\r\n                    <BtnCoral type=\"submit\">Signup</BtnCoral>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </AuthWrapper>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\BGline\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\SignIn\\index.js",["669","670"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport BtnCoral from \"../Forms/ButtonCoral\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Row, Container, Form } from \"react-bootstrap\";\r\n\r\nimport FormInput from \"./../Forms/FormInput\";\r\nimport AuthWrapper from \"./../AuthWrapper\";\r\nimport AlertError from \"./../AlertError\";\r\nimport { resetUserState } from \"./../../Redux/User/user.actions\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  emailSignInStart,\r\n  googleSignInStart,\r\n} from \"./../../Redux/User/user.actions\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n  userErr: user.userErr,\r\n});\r\n\r\nconst SignIn = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { currentUser, userErr } = useSelector(mapState);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      resetForm();\r\n      history.push(\"/\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(userErr) && userErr.length > 0) {\r\n      setErrors(userErr);\r\n    }\r\n  }, [userErr]);\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setErrors([]);\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetUserState());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(emailSignInStart({ email, password }));\r\n  };\r\n\r\n  const handleGoogleSignIn = () => {\r\n    dispatch(googleSignInStart());\r\n  };\r\n\r\n  const configAuthWrapper = {\r\n    headline: \"Welcome\",\r\n    icon: <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>,\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"signin\">\r\n      <div className=\"wrap\">\r\n        <Row>\r\n          <Col md={{ span: 4, offset: 7 }} sm={{ span: 12, offset: 12 }}>\r\n            <AuthWrapper {...configAuthWrapper}>\r\n              {errors.length > 0 && (\r\n                <ul>\r\n                  {errors.map((e, index) => {\r\n                    return <AlertError keyIndex={index} error={e} />;\r\n                  })}\r\n                </ul>\r\n              )}\r\n              <Form className=\"formWrap\" onSubmit={handleSubmit}>\r\n                <FormInput\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter email\"\r\n                  size=\"lg\"\r\n                  handleChange={(e) => setEmail(e.target.value)}\r\n                />\r\n\r\n                <FormInput\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Enter password\"\r\n                  size=\"lg\"\r\n                  handleChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Link to=\"/recovery\" className=\"forgotPwd\" onClick={reset}>\r\n                  Forgot Password?\r\n                </Link>\r\n                <Row className=\"buttons\">\r\n                  {/* <Col>\r\n                    <BtnCoral onClick={handleGoogleSignIn}>\r\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i> Google\r\n                      Sign In\r\n                    </BtnCoral>\r\n                  </Col> */}\r\n                  <Col>\r\n                    <BtnCoral>LOGIN</BtnCoral>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </AuthWrapper>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\UserManager\\index.js",["671","672","673"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./styles.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button, Table, Col, Row, Form } from \"react-bootstrap\";\r\nimport BtnSec from \"../../Components/Forms/ButtonSecondary\";\r\n\r\nimport { deleteUserStart } from \"./../../Redux/User/user.actions\";\r\n\r\nconst UserManager = ({\r\n  UserUID,\r\n  firstName,\r\n  lastName,\r\n  contactNum,\r\n  email,\r\n  userRoles,\r\n  handleClick,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <div className=\"userManagerWrapper\">\r\n      <Row>\r\n        <Col className=\"userManagerWrapperDataUID\">\r\n          <i class=\"fa fa-id-badge\" aria-hidden=\"true\"></i> UID: {UserUID}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"userManagerWrapperData\">\r\n          <i class=\"fa fa-user\" aria-hidden=\"true\"></i> Last Name:{\" \"}\r\n          <span className=\"userDetails\">{lastName}</span>\r\n        </Col>\r\n        <Col className=\"userManagerWrapperData\">\r\n          First Name: <span className=\"userDetails\">{firstName}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"userManagerWrapperData\">\r\n          <i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Contact Number:{\" \"}\r\n          <span className=\"userDetails\">{contactNum}</span>\r\n        </Col>\r\n        <Col className=\"userManagerWrapperData\">\r\n          <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> Email:{\" \"}\r\n          <span className=\"userDetails\">{email}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={12} className=\"text-right mt-3\">\r\n          <Button variant=\"danger\" onClick={() => handleShow()} size=\"lg\">\r\n            <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete User\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* {userRoles &&\r\n        userRoles.map((index) => {\r\n          <Row>\r\n            <Col>{index}</Col>\r\n          </Row>;\r\n        })} */}\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Deleting a User</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p className=\"text-center\">\r\n            Deleting User <strong>{UserUID}</strong> with an email{\" \"}\r\n            <strong>{email}</strong>\r\n          </p>\r\n          <br />\r\n          For security reasons, you will be redirected to Firebase where you\r\n          have to sign in as an admin. While in the Firebase Authentication,\r\n          kindly delete the user mentioned above to complete the user deletion.\r\n        </Modal.Body>\r\n\r\n        {click ? (\r\n          <BtnSec\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              handleClose();\r\n              setClick(false);\r\n              dispatch(deleteUserStart(UserUID));\r\n            }}\r\n          >\r\n            Close\r\n          </BtnSec>\r\n        ) : (\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://console.firebase.google.com/u/1/project/penelope-s-collectionz/authentication/users\"\r\n          >\r\n            <BtnSec\r\n              variant=\"secondary\"\r\n              onClick={() => {\r\n                setClick(true);\r\n              }}\r\n            >\r\n              Understood\r\n            </BtnSec>\r\n          </a>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManager;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\PasswordRecovery\\index.js",["674","675","676","677"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  resetPasswordStart,\r\n  resetUserState,\r\n} from \"./../../Redux/User/user.actions\";\r\nimport \"./styles.css\";\r\n\r\nimport FormInput from \"./../Forms/FormInput\";\r\nimport ButtonCoral from \"./../Forms/ButtonCoral\";\r\nimport AuthWrapper from \"./../AuthWrapper\";\r\nimport AlertError from \"./../AlertError\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Col, Row, Container, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  resetPasswordSuccess: user.resetPasswordSuccess,\r\n  userErr: user.userErr,\r\n});\r\n\r\nconst PasswordRecovery = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { resetPasswordSuccess, userErr } = useSelector(mapState);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (resetPasswordSuccess) {\r\n      dispatch(resetUserState());\r\n      history.push(\"/login\");\r\n    }\r\n  }, [resetPasswordSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(userErr) && userErr.length > 0) {\r\n      setErrors(userErr);\r\n    }\r\n  }, [userErr]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(resetPasswordStart({ email }));\r\n  };\r\n\r\n  const configAuthWrapper = {\r\n    headline: \"Reset Password\",\r\n  };\r\n  return (\r\n    <AuthWrapper {...configAuthWrapper}>\r\n      <div className=\"formWrap\">\r\n        {errors.length > 0 && (\r\n          <ul>\r\n            {errors.map((e, index) => {\r\n              return <AlertError keyIndex={index} error={e} />;\r\n            })}\r\n          </ul>\r\n        )}\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormInput\r\n            label={[\r\n              <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>,\r\n              \" Email\",\r\n            ]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"example@email.com\"\r\n            subText=\"We will send an email to the Email Address above to reset your password\"\r\n            handleChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Row>\r\n            <Col md={{ span: 4, offset: 4 }}>\r\n              <ButtonCoral>Submit</ButtonCoral>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default PasswordRecovery;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonSideNav\\index.js",["678"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst BtnSideNav = ({ children, ...otherProps }) => {\r\n  return (\r\n    <Button className=\"btn-side btn-lg shadow-none\" size=\"lg\" {...otherProps}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BtnSideNav;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\HR\\index.js",["679"],"import React from \"react\";\r\nimport hr from \"./../../Assets/hearts.png\";\r\nimport \"./styles.css\";\r\n\r\nconst HR = () => {\r\n  return (\r\n    <div className=\"hr\">\r\n      <img src={hr} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HR;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ChatTextBox\\index.js",["680"],"import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport FormInput from \"./../Forms/FormInput\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\n\r\nconst ChatTextBox = ({ onMessageSubmit, chatSeen }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const submitMessage = () => {\r\n    if (messageValid(message)) {\r\n      onMessageSubmit(message);\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const userTyping = (e) => {\r\n    console.log(\"user typing...\");\r\n    if (e.keyCode === 13) {\r\n      submitMessage();\r\n    }\r\n  };\r\n\r\n  const messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\r\n\r\n  return (\r\n    <Row className=\"mr-0 chatTextArea\">\r\n      <Col>\r\n        <FormInput\r\n          placeholder=\"Type your message here...\"\r\n          onKeyUp={(e) => userTyping(e)}\r\n          onFocus={() => chatSeen()}\r\n          name=\"message\"\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value);\r\n          }}\r\n        />\r\n      </Col>\r\n      <Button\r\n        size=\"lg\"\r\n        className=\"sendButton shadow-none\"\r\n        onClick={() => submitMessage()}\r\n      >\r\n        <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> Send\r\n      </Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ChatTextBox;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CustomerUserOrders\\CustomerUserOrdersHolder\\index.js",["681"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport \"./styles.css\";\r\n\r\nconst CustomerUserOrdersHolder = ({ index, orders, handleClick }) => {\r\n  const { orderID, orderTotal, orderCompleted } = orders;\r\n  const date = orders.orderCreatedDate.toDate();\r\n  return (\r\n    <div\r\n      key={index}\r\n      className=\"customerUserOrdersHolder\"\r\n      onClick={handleClick}\r\n      // style={orderCompleted ? { filter: \"brightness(60%)\" } : {}}\r\n    >\r\n      <Container>\r\n        <Row className=\"align-self-center\">\r\n          <Col>\r\n            <h5>Order Date:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5>Order ID:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5>Total Amount:</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"customerUserOrdersHolderDetails\">\r\n          <Col>\r\n            <h4>{moment(date).format(\"MM/DD/YYYY, h:mm:ss a\")}</h4>\r\n          </Col>\r\n          <Col>\r\n            <h4>{orderID}</h4>\r\n          </Col>\r\n          <Col>\r\n            <h4>&#8369; {orderTotal.toFixed(2)}</h4>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerUserOrdersHolder;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\hotDeals\\index.js",["682","683","684"],"import React from \"react\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"./styles.css\";\r\n\r\nimport promo1 from \"./../../Assets/Banners/Promo1.jpg\";\r\nimport promo2 from \"./../../Assets/Banners/Promo2.jpg\";\r\nimport promo3 from \"./../../Assets/Banners/Promo3.jpg\";\r\n\r\nconst HotDeals = () => {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 3,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 3,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n  return (\r\n    <Carousel\r\n      swipeable={true}\r\n      draggable={true}\r\n      infinite={true}\r\n      responsive={responsive}\r\n      className=\"hotDeals\"\r\n    >\r\n      <div className=\"hotDealsImgWrapper\">\r\n        <img className=\"hotDealsImg\" src={promo1} />\r\n      </div>\r\n      <div className=\"hotDealsImgWrapper\">\r\n        <img className=\"hotDealsImg\" src={promo2} />\r\n      </div>\r\n      <div className=\"hotDealsImgWrapper\">\r\n        <img className=\"hotDealsImg\" src={promo3} />\r\n      </div>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default HotDeals;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CheckoutForm\\OrderSummary\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\bestSellers\\index.js",["685","686"],"import React, { useEffect, useS } from \"react\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchBestSellers } from \"./../../Redux/Products/products.actions\";\r\n\r\nconst mapState = ({ productsData }) => ({\r\n  bestSellers: productsData.bestSellers,\r\n});\r\n\r\nconst BestSellers = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { bestSellers } = useSelector(mapState);\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 10,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBestSellers());\r\n  }, []);\r\n\r\n  return (\r\n    <Carousel\r\n      swipeable={true}\r\n      draggable={true}\r\n      infinite={true}\r\n      autoPlay={true}\r\n      autoPlaySpeed={3000}\r\n      responsive={responsive}\r\n      className=\"bestSeller\"\r\n    >\r\n      {/* {Array.isArray(bestSellers) && bestSellers.length > 0\r\n        ? bestSellers.map((item, index) => {\r\n            return (\r\n              <div className=\"bestSellerImgWrapper\" key={index}>\r\n                <img\r\n                  className=\"bestSellerImg\"\r\n                  src={item.Prod_Image}\r\n                  alt={item.Prod_Name}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n        : {}} */}\r\n\r\n      {Array.isArray(bestSellers) &&\r\n        bestSellers.length > 0 &&\r\n        bestSellers.slice(0, 4).map((item, index) => {\r\n          return (\r\n            <div className=\"bestSellerImgWrapper\" key={index}>\r\n              <img\r\n                className=\"bestSellerImg\"\r\n                src={item.Prod_Image}\r\n                alt={item.Prod_Name}\r\n                onClick={() => {\r\n                  history.push(`./product/${item.Prod_Code}`);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default BestSellers;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\whatsNew\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Directory\\Product\\index.js",["687"],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonImg\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\CartStore\\CartItem\\index.js",["688"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  removeCartItem,\r\n  addCartItem,\r\n  reduceCartItem,\r\n} from \"./../../../Redux/Cart/cart.actions\";\r\nimport \"./styles.css\";\r\nimport { Container, Row, Col, Media, Button } from \"react-bootstrap\";\r\nimport \"./styles.css\";\r\nimport { handleReduceCartItem } from \"../../../Redux/Cart/cart.utils\";\r\n\r\nconst CartItem = ({\r\n  Image,\r\n  Name,\r\n  Color,\r\n  Size,\r\n  Price,\r\n  Quantity,\r\n  Subtotal,\r\n  Prod_Code,\r\n  itemKey,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const PriceN = Number(Price);\r\n  const handleRemoveCartItem = (Prod_Code) => {\r\n    console.log(Prod_Code);\r\n    dispatch(removeCartItem(Prod_Code));\r\n  };\r\n\r\n  const handleReduceCartItem = (Prod_Code) => {\r\n    dispatch(reduceCartItem(Prod_Code));\r\n  };\r\n\r\n  const handleAddCartItem = (Prod_Code) => {\r\n    dispatch(addCartItem(Prod_Code));\r\n  };\r\n\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <Container>\r\n        <Row className=\"align-items-center\" key={itemKey}>\r\n          <Col>\r\n            <Media>\r\n              <img src={Image} alt={Name} className=\"cartImage mr-3\" />\r\n              <Media.Body className=\"cartItemDetails\">\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cartItemName\">{Name}</h4>\r\n                  </Col>\r\n                </Row>\r\n                {/* <!-- COLOR --> */}\r\n                <Row className=\"align-items-center\">\r\n                  <Col md={3} xs={5}>\r\n                    Color:\r\n                  </Col>\r\n                  <Col>{Color}</Col>\r\n                </Row>\r\n                {/* <!-- SIZE --> */}\r\n                <Row className=\"align-items-center\">\r\n                  <Col md={3} xs={5}>\r\n                    Size:\r\n                  </Col>\r\n                  <Col>{Size}</Col>\r\n                </Row>\r\n                {/* <!-- PRICE --> */}\r\n                <Row className=\"align-items-center\">\r\n                  <Col md={3} xs={5}>\r\n                    Price:\r\n                  </Col>\r\n                  <Col>&#8369; {Price}</Col>\r\n                </Row>\r\n                {/* <!-- QUANTITY --> */}\r\n                <Row>\r\n                  <Col md={3}>Quantity:</Col>\r\n                  <Col xs=\"auto\">\r\n                    <span\r\n                      className=\"cartQuanti\"\r\n                      onClick={() => {\r\n                        handleReduceCartItem({\r\n                          PriceN,\r\n                          Prod_Code,\r\n                          Color,\r\n                          Size,\r\n                          itemKey,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <i class=\"fas fa-arrow-circle-left    \"></i>\r\n                    </span>\r\n                    <span>&nbsp; {Quantity} &nbsp;</span>\r\n                    <span\r\n                      className=\"cartQuanti\"\r\n                      onClick={() => {\r\n                        handleAddCartItem({\r\n                          PriceN,\r\n                          Prod_Code,\r\n                          Color,\r\n                          Size,\r\n                          itemKey,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <i\r\n                        class=\"fa fa-arrow-circle-right\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <hr />\r\n                  </Col>\r\n                </Row>\r\n                {/* <!-- TOTAL --> */}\r\n                <Row className=\"align-items-center\">\r\n                  <Col md={3}>\r\n                    {\" \"}\r\n                    <h5 className=\" subtotal\">Subtotal:</h5>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\" subtotal\">\r\n                      &#8369; {parseFloat(Subtotal).toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </Media.Body>\r\n            </Media>\r\n          </Col>\r\n          <Col md=\"auto\" xs={12}>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"m-0 delItm\"\r\n              onClick={() => {\r\n                handleRemoveCartItem({ Prod_Code, Color, Size, itemKey });\r\n              }}\r\n            >\r\n              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <hr />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonCoral\\index.js",["689"],"import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n//bootstrap imports\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst BtnCoral = ({ children, ...otherProps }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn-coral btn-lg shadow-none\"\r\n      type=\"submit\"\r\n      size=\"lg\"\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BtnCoral;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\ClientUserOrders\\ClientUserOrdersHolder\\index.js",["690"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport \"./styles.css\";\r\n\r\nconst ClientUserOrdersHolder = ({ index, orders, handleClick }) => {\r\n  const { orderID, orderTotal, orderCompleted } = orders;\r\n  const date = orders.orderCreatedDate.toDate();\r\n  return (\r\n    <div\r\n      key={index}\r\n      className=\"clientUserOrdersHolder\"\r\n      onClick={handleClick}\r\n      style={orderCompleted ? { filter: \"brightness(60%)\" } : {}}\r\n    >\r\n      <Container>\r\n        <Row className=\"align-self-center\">\r\n          <Col>\r\n            <h5>Order Date:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5>Order ID:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5>Total Amount:</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"clientUserOrdersHolderDetails\">\r\n          <Col>\r\n            <h4>{moment(date).format(\"MM/DD/YYYY, h:mm:ss a\")}</h4>\r\n          </Col>\r\n          <Col>\r\n            <h4>{orderID}</h4>\r\n          </Col>\r\n          <Col>\r\n            <h4>&#8369; {orderTotal.toFixed(2)}</h4>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientUserOrdersHolder;\r\n","C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\AuthWrapper\\index.js",[],"C:\\Users\\imyamasawa\\Desktop\\SoftwareEngineering2\\Penelope-s-Collectionz\\React\\src\\Components\\Forms\\ButtonColor\\index.js",[],{"ruleId":"691","severity":1,"message":"692","line":6,"column":10,"nodeType":"693","messageId":"694","endLine":6,"endColumn":21},{"ruleId":"695","replacedBy":"696"},{"ruleId":"697","replacedBy":"698"},{"ruleId":"699","severity":1,"message":"700","line":54,"column":6,"nodeType":"701","endLine":54,"endColumn":8,"suggestions":"702"},{"ruleId":"703","severity":1,"message":"704","line":18,"column":1,"nodeType":"705","endLine":18,"endColumn":37},{"ruleId":"691","severity":1,"message":"706","line":1,"column":28,"nodeType":"693","messageId":"694","endLine":1,"endColumn":36},{"ruleId":"691","severity":1,"message":"707","line":7,"column":3,"nodeType":"693","messageId":"694","endLine":7,"endColumn":18},{"ruleId":"691","severity":1,"message":"708","line":18,"column":11,"nodeType":"693","messageId":"694","endLine":18,"endColumn":15},{"ruleId":"691","severity":1,"message":"709","line":18,"column":17,"nodeType":"693","messageId":"694","endLine":18,"endColumn":25},{"ruleId":"691","severity":1,"message":"710","line":18,"column":27,"nodeType":"693","messageId":"694","endLine":18,"endColumn":37},{"ruleId":"699","severity":1,"message":"700","line":22,"column":6,"nodeType":"701","endLine":22,"endColumn":8,"suggestions":"711"},{"ruleId":"691","severity":1,"message":"712","line":24,"column":9,"nodeType":"693","messageId":"694","endLine":24,"endColumn":16},{"ruleId":"691","severity":1,"message":"713","line":42,"column":57,"nodeType":"693","messageId":"694","endLine":42,"endColumn":66},{"ruleId":"691","severity":1,"message":"714","line":4,"column":31,"nodeType":"693","messageId":"694","endLine":4,"endColumn":35},{"ruleId":"691","severity":1,"message":"715","line":4,"column":45,"nodeType":"693","messageId":"694","endLine":4,"endColumn":50},{"ruleId":"691","severity":1,"message":"716","line":5,"column":8,"nodeType":"693","messageId":"694","endLine":5,"endColumn":14},{"ruleId":"717","severity":1,"message":"718","line":76,"column":21,"nodeType":"719","endLine":79,"endColumn":22},{"ruleId":"717","severity":1,"message":"718","line":85,"column":21,"nodeType":"719","endLine":88,"endColumn":22},{"ruleId":"717","severity":1,"message":"718","line":94,"column":21,"nodeType":"719","endLine":97,"endColumn":22},{"ruleId":"691","severity":1,"message":"720","line":9,"column":26,"nodeType":"693","messageId":"694","endLine":9,"endColumn":29},{"ruleId":"721","severity":1,"message":"722","line":5,"column":23,"nodeType":"723","messageId":"724","endLine":5,"endColumn":25},{"ruleId":"691","severity":1,"message":"725","line":13,"column":8,"nodeType":"693","messageId":"694","endLine":13,"endColumn":16},{"ruleId":"691","severity":1,"message":"714","line":23,"column":3,"nodeType":"693","messageId":"694","endLine":23,"endColumn":7},{"ruleId":"691","severity":1,"message":"726","line":33,"column":8,"nodeType":"693","messageId":"694","endLine":33,"endColumn":15},{"ruleId":"691","severity":1,"message":"727","line":65,"column":10,"nodeType":"693","messageId":"694","endLine":65,"endColumn":24},{"ruleId":"691","severity":1,"message":"728","line":65,"column":26,"nodeType":"693","messageId":"694","endLine":65,"endColumn":43},{"ruleId":"691","severity":1,"message":"729","line":67,"column":22,"nodeType":"693","messageId":"694","endLine":67,"endColumn":35},{"ruleId":"691","severity":1,"message":"730","line":75,"column":23,"nodeType":"693","messageId":"694","endLine":75,"endColumn":33},{"ruleId":"691","severity":1,"message":"731","line":80,"column":10,"nodeType":"693","messageId":"694","endLine":80,"endColumn":18},{"ruleId":"691","severity":1,"message":"732","line":80,"column":20,"nodeType":"693","messageId":"694","endLine":80,"endColumn":31},{"ruleId":"691","severity":1,"message":"733","line":81,"column":10,"nodeType":"693","messageId":"694","endLine":81,"endColumn":14},{"ruleId":"691","severity":1,"message":"734","line":81,"column":16,"nodeType":"693","messageId":"694","endLine":81,"endColumn":23},{"ruleId":"691","severity":1,"message":"735","line":82,"column":10,"nodeType":"693","messageId":"694","endLine":82,"endColumn":18},{"ruleId":"691","severity":1,"message":"736","line":82,"column":20,"nodeType":"693","messageId":"694","endLine":82,"endColumn":31},{"ruleId":"691","severity":1,"message":"737","line":83,"column":10,"nodeType":"693","messageId":"694","endLine":83,"endColumn":14},{"ruleId":"691","severity":1,"message":"738","line":83,"column":16,"nodeType":"693","messageId":"694","endLine":83,"endColumn":23},{"ruleId":"691","severity":1,"message":"739","line":84,"column":10,"nodeType":"693","messageId":"694","endLine":84,"endColumn":27},{"ruleId":"691","severity":1,"message":"740","line":84,"column":29,"nodeType":"693","messageId":"694","endLine":84,"endColumn":49},{"ruleId":"691","severity":1,"message":"741","line":85,"column":10,"nodeType":"693","messageId":"694","endLine":85,"endColumn":22},{"ruleId":"691","severity":1,"message":"742","line":85,"column":24,"nodeType":"693","messageId":"694","endLine":85,"endColumn":39},{"ruleId":"699","severity":1,"message":"700","line":103,"column":6,"nodeType":"701","endLine":103,"endColumn":8,"suggestions":"743"},{"ruleId":"744","severity":1,"message":"745","line":107,"column":14,"nodeType":"746","messageId":"724","endLine":107,"endColumn":16},{"ruleId":"691","severity":1,"message":"747","line":116,"column":9,"nodeType":"693","messageId":"694","endLine":116,"endColumn":32},{"ruleId":"748","severity":1,"message":"749","line":261,"column":9,"nodeType":"750","messageId":"724","endLine":261,"endColumn":19},{"ruleId":"699","severity":1,"message":"700","line":272,"column":6,"nodeType":"701","endLine":272,"endColumn":18,"suggestions":"751"},{"ruleId":"752","severity":1,"message":"753","line":470,"column":29,"nodeType":"719","endLine":473,"endColumn":31},{"ruleId":"754","severity":1,"message":"755","line":585,"column":27,"nodeType":"719","endLine":592,"endColumn":29},{"ruleId":"717","severity":1,"message":"718","line":670,"column":17,"nodeType":"719","endLine":673,"endColumn":18},{"ruleId":"754","severity":1,"message":"755","line":814,"column":21,"nodeType":"719","endLine":821,"endColumn":23},{"ruleId":"717","severity":1,"message":"718","line":853,"column":17,"nodeType":"719","endLine":856,"endColumn":18},{"ruleId":"691","severity":1,"message":"706","line":1,"column":28,"nodeType":"693","messageId":"694","endLine":1,"endColumn":36},{"ruleId":"691","severity":1,"message":"756","line":6,"column":3,"nodeType":"693","messageId":"694","endLine":6,"endColumn":19},{"ruleId":"691","severity":1,"message":"715","line":10,"column":28,"nodeType":"693","messageId":"694","endLine":10,"endColumn":33},{"ruleId":"691","severity":1,"message":"757","line":11,"column":8,"nodeType":"693","messageId":"694","endLine":11,"endColumn":15},{"ruleId":"699","severity":1,"message":"758","line":26,"column":6,"nodeType":"701","endLine":26,"endColumn":8,"suggestions":"759"},{"ruleId":"691","severity":1,"message":"760","line":4,"column":3,"nodeType":"693","messageId":"694","endLine":4,"endColumn":17},{"ruleId":"699","severity":1,"message":"761","line":142,"column":6,"nodeType":"701","endLine":142,"endColumn":29,"suggestions":"762"},{"ruleId":"699","severity":1,"message":"761","line":146,"column":6,"nodeType":"701","endLine":146,"endColumn":8,"suggestions":"763"},{"ruleId":"699","severity":1,"message":"764","line":243,"column":6,"nodeType":"701","endLine":243,"endColumn":22,"suggestions":"765"},{"ruleId":"699","severity":1,"message":"766","line":255,"column":6,"nodeType":"701","endLine":255,"endColumn":22,"suggestions":"767"},{"ruleId":"699","severity":1,"message":"768","line":313,"column":6,"nodeType":"701","endLine":313,"endColumn":20,"suggestions":"769"},{"ruleId":"691","severity":1,"message":"714","line":6,"column":31,"nodeType":"693","messageId":"694","endLine":6,"endColumn":35},{"ruleId":"691","severity":1,"message":"770","line":6,"column":37,"nodeType":"693","messageId":"694","endLine":6,"endColumn":43},{"ruleId":"699","severity":1,"message":"771","line":22,"column":6,"nodeType":"701","endLine":22,"endColumn":8,"suggestions":"772"},{"ruleId":"773","severity":1,"message":"774","line":66,"column":56,"nodeType":"775","messageId":"776","endLine":66,"endColumn":58},{"ruleId":"777","severity":1,"message":"778","line":67,"column":27,"nodeType":"779","messageId":"780","endLine":88,"endColumn":28},{"ruleId":"699","severity":1,"message":"758","line":31,"column":6,"nodeType":"701","endLine":31,"endColumn":8,"suggestions":"781"},{"ruleId":"691","severity":1,"message":"782","line":1,"column":38,"nodeType":"693","messageId":"694","endLine":1,"endColumn":42},{"ruleId":"691","severity":1,"message":"783","line":3,"column":3,"nodeType":"693","messageId":"694","endLine":3,"endColumn":8},{"ruleId":"691","severity":1,"message":"707","line":19,"column":3,"nodeType":"693","messageId":"694","endLine":19,"endColumn":18},{"ruleId":"691","severity":1,"message":"784","line":25,"column":3,"nodeType":"693","messageId":"694","endLine":25,"endColumn":24},{"ruleId":"691","severity":1,"message":"785","line":1,"column":10,"nodeType":"693","messageId":"694","endLine":1,"endColumn":28},{"ruleId":"691","severity":1,"message":"782","line":1,"column":38,"nodeType":"693","messageId":"694","endLine":1,"endColumn":42},{"ruleId":"691","severity":1,"message":"786","line":10,"column":10,"nodeType":"693","messageId":"694","endLine":10,"endColumn":14},{"ruleId":"691","severity":1,"message":"782","line":2,"column":38,"nodeType":"693","messageId":"694","endLine":2,"endColumn":42},{"ruleId":"691","severity":1,"message":"787","line":2,"column":10,"nodeType":"693","messageId":"694","endLine":2,"endColumn":21},{"ruleId":"691","severity":1,"message":"760","line":2,"column":23,"nodeType":"693","messageId":"694","endLine":2,"endColumn":37},{"ruleId":"691","severity":1,"message":"788","line":4,"column":3,"nodeType":"693","messageId":"694","endLine":4,"endColumn":23},{"ruleId":"691","severity":1,"message":"789","line":9,"column":22,"nodeType":"693","messageId":"694","endLine":9,"endColumn":25},{"ruleId":"691","severity":1,"message":"782","line":9,"column":38,"nodeType":"693","messageId":"694","endLine":9,"endColumn":42},{"ruleId":"691","severity":1,"message":"782","line":2,"column":38,"nodeType":"693","messageId":"694","endLine":2,"endColumn":42},{"ruleId":"691","severity":1,"message":"790","line":4,"column":10,"nodeType":"693","messageId":"694","endLine":4,"endColumn":17},{"ruleId":"691","severity":1,"message":"791","line":1,"column":27,"nodeType":"693","messageId":"694","endLine":1,"endColumn":36},{"ruleId":"691","severity":1,"message":"792","line":21,"column":8,"nodeType":"693","messageId":"694","endLine":21,"endColumn":15},{"ruleId":"691","severity":1,"message":"793","line":22,"column":8,"nodeType":"693","messageId":"694","endLine":22,"endColumn":18},{"ruleId":"691","severity":1,"message":"794","line":32,"column":3,"nodeType":"693","messageId":"694","endLine":32,"endColumn":14},{"ruleId":"691","severity":1,"message":"795","line":49,"column":9,"nodeType":"693","messageId":"694","endLine":49,"endColumn":19},{"ruleId":"691","severity":1,"message":"796","line":52,"column":10,"nodeType":"693","messageId":"694","endLine":52,"endColumn":27},{"ruleId":"691","severity":1,"message":"797","line":52,"column":29,"nodeType":"693","messageId":"694","endLine":52,"endColumn":49},{"ruleId":"691","severity":1,"message":"798","line":29,"column":10,"nodeType":"693","messageId":"694","endLine":29,"endColumn":24},{"ruleId":"691","severity":1,"message":"799","line":31,"column":10,"nodeType":"693","messageId":"694","endLine":31,"endColumn":24},{"ruleId":"691","severity":1,"message":"800","line":31,"column":26,"nodeType":"693","messageId":"694","endLine":31,"endColumn":43},{"ruleId":"699","severity":1,"message":"801","line":65,"column":6,"nodeType":"701","endLine":65,"endColumn":19,"suggestions":"802"},{"ruleId":"691","severity":1,"message":"803","line":7,"column":10,"nodeType":"693","messageId":"694","endLine":7,"endColumn":22},{"ruleId":"691","severity":1,"message":"804","line":8,"column":10,"nodeType":"693","messageId":"694","endLine":8,"endColumn":27},{"ruleId":"691","severity":1,"message":"805","line":12,"column":5,"nodeType":"693","messageId":"694","endLine":12,"endColumn":19},{"ruleId":"691","severity":1,"message":"806","line":14,"column":5,"nodeType":"693","messageId":"694","endLine":14,"endColumn":8},{"ruleId":"691","severity":1,"message":"807","line":33,"column":11,"nodeType":"693","messageId":"694","endLine":33,"endColumn":22},{"ruleId":"744","severity":1,"message":"745","line":15,"column":34,"nodeType":"746","messageId":"724","endLine":15,"endColumn":36},{"ruleId":"744","severity":1,"message":"745","line":16,"column":30,"nodeType":"746","messageId":"724","endLine":16,"endColumn":32},{"ruleId":"744","severity":1,"message":"745","line":17,"column":29,"nodeType":"746","messageId":"724","endLine":17,"endColumn":31},{"ruleId":"777","severity":1,"message":"778","line":27,"column":11,"nodeType":"779","messageId":"780","endLine":31,"endColumn":12},{"ruleId":"691","severity":1,"message":"787","line":2,"column":10,"nodeType":"693","messageId":"694","endLine":2,"endColumn":21},{"ruleId":"808","severity":1,"message":"809","line":99,"column":13,"nodeType":"810","messageId":"811","endLine":99,"endColumn":45},{"ruleId":"808","severity":1,"message":"809","line":121,"column":13,"nodeType":"810","messageId":"811","endLine":121,"endColumn":45},{"ruleId":"691","severity":1,"message":"812","line":2,"column":10,"nodeType":"693","messageId":"694","endLine":2,"endColumn":17},{"ruleId":"691","severity":1,"message":"706","line":1,"column":17,"nodeType":"693","messageId":"694","endLine":1,"endColumn":25},{"ruleId":"691","severity":1,"message":"813","line":1,"column":27,"nodeType":"693","messageId":"694","endLine":1,"endColumn":37},{"ruleId":"691","severity":1,"message":"714","line":6,"column":18,"nodeType":"693","messageId":"694","endLine":6,"endColumn":22},{"ruleId":"691","severity":1,"message":"706","line":1,"column":28,"nodeType":"693","messageId":"694","endLine":1,"endColumn":36},{"ruleId":"691","severity":1,"message":"814","line":8,"column":20,"nodeType":"693","messageId":"694","endLine":8,"endColumn":29},{"ruleId":"691","severity":1,"message":"815","line":16,"column":8,"nodeType":"693","messageId":"694","endLine":16,"endColumn":16},{"ruleId":"721","severity":1,"message":"722","line":23,"column":20,"nodeType":"723","messageId":"724","endLine":23,"endColumn":22},{"ruleId":"691","severity":1,"message":"816","line":29,"column":27,"nodeType":"693","messageId":"694","endLine":29,"endColumn":41},{"ruleId":"691","severity":1,"message":"817","line":29,"column":55,"nodeType":"693","messageId":"694","endLine":29,"endColumn":66},{"ruleId":"699","severity":1,"message":"700","line":33,"column":6,"nodeType":"701","endLine":33,"endColumn":18,"suggestions":"818"},{"ruleId":"744","severity":1,"message":"819","line":37,"column":20,"nodeType":"746","messageId":"724","endLine":37,"endColumn":22},{"ruleId":"699","severity":1,"message":"700","line":30,"column":6,"nodeType":"701","endLine":30,"endColumn":8,"suggestions":"820"},{"ruleId":"691","severity":1,"message":"814","line":4,"column":20,"nodeType":"693","messageId":"694","endLine":4,"endColumn":29},{"ruleId":"691","severity":1,"message":"714","line":4,"column":31,"nodeType":"693","messageId":"694","endLine":4,"endColumn":35},{"ruleId":"691","severity":1,"message":"770","line":4,"column":37,"nodeType":"693","messageId":"694","endLine":4,"endColumn":43},{"ruleId":"691","severity":1,"message":"715","line":4,"column":45,"nodeType":"693","messageId":"694","endLine":4,"endColumn":50},{"ruleId":"699","severity":1,"message":"771","line":21,"column":6,"nodeType":"701","endLine":21,"endColumn":8,"suggestions":"821"},{"ruleId":"691","severity":1,"message":"822","line":3,"column":8,"nodeType":"693","messageId":"694","endLine":3,"endColumn":14},{"ruleId":"691","severity":1,"message":"814","line":5,"column":10,"nodeType":"693","messageId":"694","endLine":5,"endColumn":19},{"ruleId":"691","severity":1,"message":"720","line":5,"column":21,"nodeType":"693","messageId":"694","endLine":5,"endColumn":24},{"ruleId":"691","severity":1,"message":"823","line":5,"column":26,"nodeType":"693","messageId":"694","endLine":5,"endColumn":29},{"ruleId":"691","severity":1,"message":"824","line":12,"column":3,"nodeType":"693","messageId":"694","endLine":12,"endColumn":6},{"ruleId":"691","severity":1,"message":"825","line":13,"column":3,"nodeType":"693","messageId":"694","endLine":13,"endColumn":6},{"ruleId":"691","severity":1,"message":"726","line":22,"column":8,"nodeType":"693","messageId":"694","endLine":22,"endColumn":15},{"ruleId":"691","severity":1,"message":"826","line":27,"column":3,"nodeType":"693","messageId":"694","endLine":27,"endColumn":19},{"ruleId":"691","severity":1,"message":"827","line":53,"column":10,"nodeType":"693","messageId":"694","endLine":53,"endColumn":21},{"ruleId":"691","severity":1,"message":"828","line":55,"column":9,"nodeType":"693","messageId":"694","endLine":55,"endColumn":27},{"ruleId":"691","severity":1,"message":"829","line":56,"column":9,"nodeType":"693","messageId":"694","endLine":56,"endColumn":26},{"ruleId":"699","severity":1,"message":"830","line":112,"column":6,"nodeType":"701","endLine":112,"endColumn":8,"suggestions":"831"},{"ruleId":"691","severity":1,"message":"733","line":144,"column":10,"nodeType":"693","messageId":"694","endLine":144,"endColumn":14},{"ruleId":"691","severity":1,"message":"734","line":144,"column":16,"nodeType":"693","messageId":"694","endLine":144,"endColumn":23},{"ruleId":"691","severity":1,"message":"735","line":145,"column":10,"nodeType":"693","messageId":"694","endLine":145,"endColumn":18},{"ruleId":"691","severity":1,"message":"736","line":145,"column":20,"nodeType":"693","messageId":"694","endLine":145,"endColumn":31},{"ruleId":"691","severity":1,"message":"737","line":146,"column":10,"nodeType":"693","messageId":"694","endLine":146,"endColumn":14},{"ruleId":"691","severity":1,"message":"738","line":146,"column":16,"nodeType":"693","messageId":"694","endLine":146,"endColumn":23},{"ruleId":"691","severity":1,"message":"739","line":147,"column":10,"nodeType":"693","messageId":"694","endLine":147,"endColumn":27},{"ruleId":"691","severity":1,"message":"740","line":147,"column":29,"nodeType":"693","messageId":"694","endLine":147,"endColumn":49},{"ruleId":"691","severity":1,"message":"741","line":148,"column":10,"nodeType":"693","messageId":"694","endLine":148,"endColumn":22},{"ruleId":"691","severity":1,"message":"742","line":148,"column":24,"nodeType":"693","messageId":"694","endLine":148,"endColumn":39},{"ruleId":"691","severity":1,"message":"714","line":6,"column":18,"nodeType":"693","messageId":"694","endLine":6,"endColumn":22},{"ruleId":"691","severity":1,"message":"770","line":6,"column":10,"nodeType":"693","messageId":"694","endLine":6,"endColumn":16},{"ruleId":"691","severity":1,"message":"720","line":6,"column":18,"nodeType":"693","messageId":"694","endLine":6,"endColumn":21},{"ruleId":"691","severity":1,"message":"823","line":6,"column":23,"nodeType":"693","messageId":"694","endLine":6,"endColumn":26},{"ruleId":"691","severity":1,"message":"814","line":6,"column":28,"nodeType":"693","messageId":"694","endLine":6,"endColumn":37},{"ruleId":"691","severity":1,"message":"706","line":1,"column":17,"nodeType":"693","messageId":"694","endLine":1,"endColumn":25},{"ruleId":"691","severity":1,"message":"791","line":1,"column":27,"nodeType":"693","messageId":"694","endLine":1,"endColumn":36},{"ruleId":"691","severity":1,"message":"757","line":3,"column":8,"nodeType":"693","messageId":"694","endLine":3,"endColumn":15},{"ruleId":"699","severity":1,"message":"832","line":17,"column":6,"nodeType":"701","endLine":17,"endColumn":19,"suggestions":"833"},{"ruleId":"699","severity":1,"message":"832","line":17,"column":6,"nodeType":"701","endLine":17,"endColumn":19,"suggestions":"834"},{"ruleId":"699","severity":1,"message":"832","line":29,"column":6,"nodeType":"701","endLine":29,"endColumn":19,"suggestions":"835"},{"ruleId":"699","severity":1,"message":"832","line":41,"column":6,"nodeType":"701","endLine":41,"endColumn":19,"suggestions":"836"},{"ruleId":"699","severity":1,"message":"832","line":53,"column":6,"nodeType":"701","endLine":53,"endColumn":19,"suggestions":"837"},{"ruleId":"699","severity":1,"message":"832","line":65,"column":6,"nodeType":"701","endLine":65,"endColumn":19,"suggestions":"838"},{"ruleId":"691","severity":1,"message":"714","line":6,"column":18,"nodeType":"693","messageId":"694","endLine":6,"endColumn":22},{"ruleId":"691","severity":1,"message":"839","line":26,"column":8,"nodeType":"693","messageId":"694","endLine":26,"endColumn":16},{"ruleId":"721","severity":1,"message":"722","line":33,"column":20,"nodeType":"723","messageId":"724","endLine":33,"endColumn":22},{"ruleId":"691","severity":1,"message":"840","line":62,"column":9,"nodeType":"693","messageId":"694","endLine":62,"endColumn":29},{"ruleId":"699","severity":1,"message":"841","line":85,"column":6,"nodeType":"701","endLine":85,"endColumn":16,"suggestions":"842"},{"ruleId":"699","severity":1,"message":"843","line":93,"column":6,"nodeType":"701","endLine":93,"endColumn":8,"suggestions":"844"},{"ruleId":"744","severity":1,"message":"745","line":133,"column":45,"nodeType":"746","messageId":"724","endLine":133,"endColumn":47},{"ruleId":"752","severity":1,"message":"753","line":327,"column":13,"nodeType":"719","endLine":327,"endColumn":39},{"ruleId":"699","severity":1,"message":"771","line":21,"column":6,"nodeType":"701","endLine":21,"endColumn":8,"suggestions":"845"},{"ruleId":"691","severity":1,"message":"757","line":10,"column":8,"nodeType":"693","messageId":"694","endLine":10,"endColumn":15},{"ruleId":"691","severity":1,"message":"839","line":11,"column":8,"nodeType":"693","messageId":"694","endLine":11,"endColumn":16},{"ruleId":"691","severity":1,"message":"846","line":11,"column":8,"nodeType":"693","messageId":"694","endLine":11,"endColumn":14},{"ruleId":"691","severity":1,"message":"847","line":21,"column":10,"nodeType":"693","messageId":"694","endLine":21,"endColumn":19},{"ruleId":"691","severity":1,"message":"848","line":34,"column":8,"nodeType":"693","messageId":"694","endLine":34,"endColumn":19},{"ruleId":"691","severity":1,"message":"849","line":35,"column":10,"nodeType":"693","messageId":"694","endLine":35,"endColumn":16},{"ruleId":"744","severity":1,"message":"745","line":62,"column":23,"nodeType":"746","messageId":"724","endLine":62,"endColumn":25},{"ruleId":"717","severity":1,"message":"718","line":22,"column":15,"nodeType":"719","endLine":22,"endColumn":44},{"ruleId":"717","severity":1,"message":"718","line":31,"column":15,"nodeType":"719","endLine":31,"endColumn":47},{"ruleId":"717","severity":1,"message":"718","line":40,"column":15,"nodeType":"719","endLine":40,"endColumn":49},{"ruleId":"691","severity":1,"message":"850","line":4,"column":8,"nodeType":"693","messageId":"694","endLine":4,"endColumn":17},{"ruleId":"691","severity":1,"message":"795","line":36,"column":9,"nodeType":"693","messageId":"694","endLine":36,"endColumn":19},{"ruleId":"699","severity":1,"message":"832","line":43,"column":6,"nodeType":"701","endLine":43,"endColumn":19,"suggestions":"851"},{"ruleId":"699","severity":1,"message":"832","line":39,"column":6,"nodeType":"701","endLine":39,"endColumn":19,"suggestions":"852"},{"ruleId":"691","severity":1,"message":"853","line":62,"column":9,"nodeType":"693","messageId":"694","endLine":62,"endColumn":27},{"ruleId":"691","severity":1,"message":"854","line":6,"column":25,"nodeType":"693","messageId":"694","endLine":6,"endColumn":30},{"ruleId":"691","severity":1,"message":"714","line":6,"column":42,"nodeType":"693","messageId":"694","endLine":6,"endColumn":46},{"ruleId":"717","severity":1,"message":"718","line":98,"column":11,"nodeType":"719","endLine":101,"endColumn":12},{"ruleId":"691","severity":1,"message":"770","line":16,"column":10,"nodeType":"693","messageId":"694","endLine":16,"endColumn":16},{"ruleId":"691","severity":1,"message":"814","line":16,"column":28,"nodeType":"693","messageId":"694","endLine":16,"endColumn":37},{"ruleId":"691","severity":1,"message":"855","line":16,"column":45,"nodeType":"693","messageId":"694","endLine":16,"endColumn":50},{"ruleId":"699","severity":1,"message":"856","line":37,"column":6,"nodeType":"701","endLine":37,"endColumn":28,"suggestions":"857"},{"ruleId":"691","severity":1,"message":"714","line":6,"column":18,"nodeType":"693","messageId":"694","endLine":6,"endColumn":22},{"ruleId":"752","severity":1,"message":"753","line":8,"column":7,"nodeType":"719","endLine":8,"endColumn":23},{"ruleId":"691","severity":1,"message":"814","line":5,"column":10,"nodeType":"693","messageId":"694","endLine":5,"endColumn":19},{"ruleId":"691","severity":1,"message":"858","line":8,"column":32,"nodeType":"693","messageId":"694","endLine":8,"endColumn":46},{"ruleId":"752","severity":1,"message":"753","line":39,"column":9,"nodeType":"719","endLine":39,"endColumn":53},{"ruleId":"752","severity":1,"message":"753","line":42,"column":9,"nodeType":"719","endLine":42,"endColumn":53},{"ruleId":"752","severity":1,"message":"753","line":45,"column":9,"nodeType":"719","endLine":45,"endColumn":53},{"ruleId":"691","severity":1,"message":"859","line":1,"column":28,"nodeType":"693","messageId":"694","endLine":1,"endColumn":32},{"ruleId":"699","severity":1,"message":"700","line":39,"column":6,"nodeType":"701","endLine":39,"endColumn":8,"suggestions":"860"},{"ruleId":"691","severity":1,"message":"757","line":5,"column":8,"nodeType":"693","messageId":"694","endLine":5,"endColumn":15},{"ruleId":"691","severity":1,"message":"861","line":11,"column":10,"nodeType":"693","messageId":"694","endLine":11,"endColumn":30},{"ruleId":"691","severity":1,"message":"714","line":6,"column":18,"nodeType":"693","messageId":"694","endLine":6,"endColumn":22},{"ruleId":"691","severity":1,"message":"714","line":3,"column":31,"nodeType":"693","messageId":"694","endLine":3,"endColumn":35},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["862"],"no-negated-in-lhs",["863"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["864"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'deleteUserStart' is defined but never used.","'data' is assigned a value but never used.","'queryDoc' is assigned a value but never used.","'isLastPage' is assigned a value but never used.",["865"],"'delUser' is assigned a value but never used.","'userRoles' is assigned a value but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'mapIMG' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Col' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'BtnIcons' is defined but never used.","'Cropper' is defined but never used.","'Prod_EditColor' is assigned a value but never used.","'setProd_EditColor' is assigned a value but never used.","'setProd_Sales' is assigned a value but never used.","'sorterType' is assigned a value but never used.","'imageSrc' is assigned a value but never used.","'setImageSrc' is assigned a value but never used.","'crop' is assigned a value but never used.","'setCrop' is assigned a value but never used.","'rotation' is assigned a value but never used.","'setRotation' is assigned a value but never used.","'zoom' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'croppedAreaPixels' is assigned a value but never used.","'setCroppedAreaPixels' is assigned a value but never used.","'croppedImage' is assigned a value but never used.","'setCroppedImage' is assigned a value but never used.",["866"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'handleAddImageEditInput' is assigned a value but never used.","no-dupe-keys","Duplicate key 'Prod_Price'.","ObjectExpression",["867"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setOrderComplete' is defined but never used.","'BtnPink' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderID'. Either include them or remove the dependency array.",["868"],"'receiveMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.",["869"],["870"],"React Hook useEffect has a missing dependency: 'chatExists'. Either include it or remove the dependency array.",["871"],"React Hook useEffect has missing dependencies: 'createChat' and 'goToChat'. Either include them or remove the dependency array.",["872"],"React Hook useEffect has a missing dependency: 'chatSeen'. Either include it or remove the dependency array.",["873"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'dispatch'. Either include them or remove the dependency array.",["874"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["875"],"'take' is defined but never used.","'admin' is defined but never used.","'handleDeleteUserAdmin' is defined but never used.","'signOutUserSuccess' is defined but never used.","'auth' is defined but never used.","'setMessages' is defined but never used.","'handleReceiveMessage' is defined but never used.","'put' is defined but never used.","'setCart' is defined but never used.","'useEffect' is defined but never used.","'Overlay' is defined but never used.","'ChatBubble' is defined but never used.","'NavDropdown' is defined but never used.","'handleShow' is assigned a value but never used.","'showChatboxHeader' is assigned a value but never used.","'setShowChatboxHeader' is assigned a value but never used.","'chatListLength' is assigned a value but never used.","'chatDoesExists' is assigned a value but never used.","'setChatDoesExists' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chat'. Either include it or remove the dependency array.",["876"],"'useAuthState' is defined but never used.","'useCollectionData' is defined but never used.","'serviceAccount' is assigned a value but never used.","'app' is assigned a value but never used.","'displayName' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'storage' is defined but never used.","'useContext' is defined but never used.","'Container' is defined but never used.","'HotDeals' is defined but never used.","'queryBeforeDoc' is assigned a value but never used.","'isFirstPage' is assigned a value but never used.",["877"],"Expected '!==' and instead saw '!='.",["878"],["879"],"'Avatar' is defined but never used.","'Row' is defined but never used.","'Tab' is defined but never used.","'Nav' is defined but never used.","'signOutUserStart' is defined but never used.","'warningShow' is assigned a value but never used.","'handleWarningClose' is assigned a value but never used.","'handleWarningShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser', 'editItem', and 'user'. Either include them or remove the dependency array.",["880"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["881"],["882"],["883"],["884"],["885"],["886"],"'BtnCoral' is defined but never used.","'handleShowConstraint' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Prod_Price' and 'total'. Either include them or remove the dependency array.",["887"],"React Hook useEffect has missing dependencies: 'Prod_Code' and 'dispatch'. Either include them or remove the dependency array.",["888"],["889"],"'BtnSec' is defined but never used.","'clearCart' is defined but never used.","'checkoutGIF' is defined but never used.","'Switch' is defined but never used.","'FormInput' is defined but never used.",["890"],["891"],"'handleGoogleSignIn' is assigned a value but never used.","'Table' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["892"],"'orderCompleted' is assigned a value but never used.","'useS' is defined but never used.",["893"],"'handleReduceCartItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"894","fix":"895"},{"desc":"894","fix":"896"},{"desc":"894","fix":"897"},{"desc":"898","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"desc":"904","fix":"905"},{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"900","fix":"914"},{"desc":"915","fix":"916"},{"desc":"898","fix":"917"},{"desc":"894","fix":"918"},{"desc":"912","fix":"919"},{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"922","fix":"924"},{"desc":"922","fix":"925"},{"desc":"922","fix":"926"},{"desc":"922","fix":"927"},{"desc":"922","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},{"desc":"912","fix":"933"},{"desc":"922","fix":"934"},{"desc":"922","fix":"935"},{"desc":"936","fix":"937"},{"desc":"894","fix":"938"},"Update the dependencies array to be: [dispatch]",{"range":"939","text":"940"},{"range":"941","text":"940"},{"range":"942","text":"940"},"Update the dependencies array to be: [dispatch, filterType]",{"range":"943","text":"944"},"Update the dependencies array to be: [dispatch, orderID]",{"range":"945","text":"946"},"Update the dependencies array to be: [currentUser.email, currentUser.userRoles]",{"range":"947","text":"948"},"Update the dependencies array to be: [currentUser.email]",{"range":"949","text":"950"},"Update the dependencies array to be: [chatExists, userDoesExists]",{"range":"951","text":"952"},"Update the dependencies array to be: [chatDoesExists, createChat, goToChat]",{"range":"953","text":"954"},"Update the dependencies array to be: [chatSeen, selectedChat]",{"range":"955","text":"956"},"Update the dependencies array to be: [currentUser.id, dispatch]",{"range":"957","text":"958"},{"range":"959","text":"946"},"Update the dependencies array to be: [chat, currentUser]",{"range":"960","text":"961"},{"range":"962","text":"944"},{"range":"963","text":"940"},{"range":"964","text":"958"},"Update the dependencies array to be: [currentUser, editItem, user]",{"range":"965","text":"966"},"Update the dependencies array to be: [currentUser, history]",{"range":"967","text":"968"},{"range":"969","text":"968"},{"range":"970","text":"968"},{"range":"971","text":"968"},{"range":"972","text":"968"},{"range":"973","text":"968"},"Update the dependencies array to be: [Prod_Price, quantity, total]",{"range":"974","text":"975"},"Update the dependencies array to be: [Prod_Code, dispatch]",{"range":"976","text":"977"},{"range":"978","text":"958"},{"range":"979","text":"968"},{"range":"980","text":"968"},"Update the dependencies array to be: [dispatch, history, resetPasswordSuccess]",{"range":"981","text":"982"},{"range":"983","text":"940"},[1696,1698],"[dispatch]",[572,574],[3729,3731],[7996,8008],"[dispatch, filterType]",[922,924],"[dispatch, orderID]",[4516,4539],"[currentUser.email, currentUser.userRoles]",[4605,4607],"[currentUser.email]",[7291,7307],"[chatExists, userDoesExists]",[7615,7631],"[chatDoesExists, createChat, goToChat]",[9261,9275],"[chatSeen, selectedChat]",[880,882],"[currentUser.id, dispatch]",[1148,1150],[2064,2077],"[chat, currentUser]",[1205,1217],[871,873],[799,801],[3353,3355],"[currentUser, editItem, user]",[405,418],"[currentUser, history]",[505,518],[785,798],[1106,1119],[1392,1405],[1681,1694],[2410,2420],"[Prod_Price, quantity, total]",[2560,2562],"[Prod_Code, dispatch]",[801,803],[1448,1461],[1171,1184],[1134,1156],"[dispatch, history, resetPasswordSuccess]",[1079,1081]]